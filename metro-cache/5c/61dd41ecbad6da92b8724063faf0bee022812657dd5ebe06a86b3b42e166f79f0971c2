{"dependencies":[{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":1,"column":31}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ScheduleUpdateContext = void 0;\n  exports.default = useScheduleUpdate;\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var MISSING_CONTEXT_ERROR = \"Couldn't find a schedule context.\";\n  var ScheduleUpdateContext = React.createContext({\n    scheduleUpdate: function scheduleUpdate() {\n      throw new Error(MISSING_CONTEXT_ERROR);\n    },\n    flushUpdates: function flushUpdates() {\n      throw new Error(MISSING_CONTEXT_ERROR);\n    }\n  });\n  exports.ScheduleUpdateContext = ScheduleUpdateContext;\n\n  function useScheduleUpdate(callback) {\n    var _React$useContext = React.useContext(ScheduleUpdateContext),\n        scheduleUpdate = _React$useContext.scheduleUpdate,\n        flushUpdates = _React$useContext.flushUpdates;\n\n    scheduleUpdate(callback);\n    React.useEffect(flushUpdates);\n  }\n});","lineCount":33,"map":[[8,0,1,0],[14,0,3,0],[14,6,3,6,"MISSING_CONTEXT_ERROR"],[14,27,3,27],[14,30,3,30],[14,65,3,0],[15,0,5,7],[15,6,5,13,"ScheduleUpdateContext"],[15,27,5,34],[15,30,5,37,"React"],[15,35,5,42],[15,36,5,43,"createContext"],[15,49,5,37],[15,50,8,3],[16,0,9,2,"scheduleUpdate"],[16,4,9,2,"scheduleUpdate"],[16,18,8,3],[16,46,9,19],[17,0,10,4],[17,12,10,10],[17,16,10,14,"Error"],[17,21,10,10],[17,22,10,20,"MISSING_CONTEXT_ERROR"],[17,43,10,10],[17,44,10,4],[18,0,11,3],[18,5,8,3],[19,0,12,2,"flushUpdates"],[19,4,12,2,"flushUpdates"],[19,16,8,3],[19,42,12,17],[20,0,13,4],[20,12,13,10],[20,16,13,14,"Error"],[20,21,13,10],[20,22,13,20,"MISSING_CONTEXT_ERROR"],[20,43,13,10],[20,44,13,4],[21,0,14,3],[22,0,8,3],[22,3,5,37],[22,4,5,7],[25,0,24,15],[25,11,24,24,"useScheduleUpdate"],[25,28,24,15],[25,29,24,42,"callback"],[25,37,24,15],[25,39,24,64],[26,0,25,2],[26,28,25,43,"React"],[26,33,25,48],[26,34,25,49,"useContext"],[26,44,25,43],[26,45,26,4,"ScheduleUpdateContext"],[26,66,25,43],[26,67,25,2],[27,0,25,2],[27,8,25,10,"scheduleUpdate"],[27,22,25,2],[27,43,25,10,"scheduleUpdate"],[27,57,25,2],[28,0,25,2],[28,8,25,26,"flushUpdates"],[28,20,25,2],[28,41,25,26,"flushUpdates"],[28,53,25,2],[30,0,29,2,"scheduleUpdate"],[30,4,29,2,"scheduleUpdate"],[30,18,29,16],[30,19,29,17,"callback"],[30,27,29,16],[30,28,29,2],[31,0,31,2,"React"],[31,4,31,2,"React"],[31,9,31,7],[31,10,31,8,"useEffect"],[31,19,31,2],[31,20,31,18,"flushUpdates"],[31,32,31,2],[32,0,32,1]],"functionMap":{"names":["<global>","React.createContext$argument_0.scheduleUpdate","React.createContext$argument_0.flushUpdates","useScheduleUpdate"],"mappings":"AAA;ECQ;GDE;EEC;GFE;eGU;CHQ"}},"type":"js/module"}]}