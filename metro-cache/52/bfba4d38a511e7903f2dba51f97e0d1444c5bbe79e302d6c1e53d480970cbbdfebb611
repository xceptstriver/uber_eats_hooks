{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":456,"column":0}},{"start":{"line":1,"column":0},"end":{"line":456,"column":0}},{"start":{"line":1,"column":0},"end":{"line":456,"column":0}},{"start":{"line":1,"column":0},"end":{"line":456,"column":0}},{"start":{"line":1,"column":0},"end":{"line":456,"column":0}},{"start":{"line":1,"column":0},"end":{"line":456,"column":0}},{"start":{"line":1,"column":0},"end":{"line":456,"column":0}},{"start":{"line":1,"column":0},"end":{"line":456,"column":0}},{"start":{"line":9,"column":0},"end":{"line":9,"column":42}},{"start":{"line":10,"column":0},"end":{"line":10,"column":63}}]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":456,"column":0}}]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":456,"column":0}}]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":456,"column":0}}]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":456,"column":0}}]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":456,"column":0}}]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":456,"column":0}}]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":456,"column":0}}]}},{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":456,"column":0}}]}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":1,"column":31}}]}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0},"end":{"line":7,"column":22}}]}},{"name":"fbjs/lib/areEqual","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":0},"end":{"line":9,"column":42}}]}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"locs":[{"start":{"line":10,"column":0},"end":{"line":10,"column":63}}]}},{"name":"../State","data":{"asyncType":null,"locs":[{"start":{"line":151,"column":3},"end":{"line":151,"column":8},"identifierName":"State"},{"start":{"line":152,"column":3},"end":{"line":152,"column":8},"identifierName":"State"},{"start":{"line":153,"column":3},"end":{"line":153,"column":8},"identifierName":"State"},{"start":{"line":154,"column":3},"end":{"line":154,"column":8},"identifierName":"State"},{"start":{"line":155,"column":3},"end":{"line":155,"column":8},"identifierName":"State"},{"start":{"line":156,"column":3},"end":{"line":156,"column":8},"identifierName":"State"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n\n  var _toConsumableArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _defineProperty2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _extends2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/extends\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _areEqual = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[11], \"fbjs/lib/areEqual\"));\n\n  var _RNGestureHandlerModule = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[12], \"../RNGestureHandlerModule\"));\n\n  var _UIManager$getViewMan, _stateToPropMappings;\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function findNodeHandle(node) {\n    if (_reactNative.Platform.OS === 'web') return node;\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n\n  var _NativeModules$UIMana = _reactNative.NativeModules.UIManager,\n      UIManager = _NativeModules$UIMana === void 0 ? {} : _NativeModules$UIMana;\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  UIManager.genericDirectEventTypes = (0, _extends2.default)({}, UIManager.genericDirectEventTypes, customGHEventsConfig);\n  var UIManagerConstants = (_UIManager$getViewMan = UIManager.getViewManagerConfig == null ? void 0 : UIManager.getViewManagerConfig('getConstants')) != null ? _UIManager$getViewMan : UIManager.getConstants == null ? void 0 : UIManager.getConstants();\n\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = (0, _extends2.default)({}, UIManagerConstants.genericDirectEventTypes, customGHEventsConfig);\n  }\n\n  var _UIManager$setJSRespo = UIManager.setJSResponder,\n      oldSetJSResponder = _UIManager$setJSRespo === void 0 ? function () {} : _UIManager$setJSRespo,\n      _UIManager$clearJSRes = UIManager.clearJSResponder,\n      oldClearJSResponder = _UIManager$clearJSRes === void 0 ? function () {} : _UIManager$clearJSRes;\n\n  UIManager.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n\n  UIManager.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n\n    oldClearJSResponder();\n  };\n\n  var handlerTag = 1;\n  var handlerIDToTag = {};\n\n  function isConfigParam(param, name) {\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var res = (0, _extends2.default)({}, defaults);\n    validProps.forEach(function (key) {\n      var value = props[key];\n\n      if (isConfigParam(value, key)) {\n        var _value = props[key];\n\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          _value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop') {\n          if (typeof _value !== 'object') {\n            _value = {\n              top: _value,\n              left: _value,\n              bottom: _value,\n              right: _value\n            };\n          }\n        }\n\n        res[key] = _value;\n      }\n    });\n    return res;\n  }\n\n  function transformIntoHandlerTags(handlerIDs) {\n    if (!Array.isArray(handlerIDs)) {\n      handlerIDs = [handlerIDs];\n    }\n\n    if (_reactNative.Platform.OS === 'web') {\n      return handlerIDs.map(function (_ref) {\n        var current = _ref.current;\n        return current;\n      }).filter(function (handle) {\n        return handle;\n      });\n    }\n\n    return handlerIDs.map(function (handlerID) {\n      var _handlerID$current;\n\n      return handlerIDToTag[handlerID] || ((_handlerID$current = handlerID.current) == null ? void 0 : _handlerID$current.handlerTag) || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n\n  function hasUnresolvedRefs(props) {\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n\n  var stateToPropMappings = (_stateToPropMappings = {}, (0, _defineProperty2.default)(_stateToPropMappings, _$$_REQUIRE(_dependencyMap[13], \"../State\").State.UNDETERMINED, undefined), (0, _defineProperty2.default)(_stateToPropMappings, _$$_REQUIRE(_dependencyMap[13], \"../State\").State.BEGAN, 'onBegan'), (0, _defineProperty2.default)(_stateToPropMappings, _$$_REQUIRE(_dependencyMap[13], \"../State\").State.FAILED, 'onFailed'), (0, _defineProperty2.default)(_stateToPropMappings, _$$_REQUIRE(_dependencyMap[13], \"../State\").State.CANCELLED, 'onCancelled'), (0, _defineProperty2.default)(_stateToPropMappings, _$$_REQUIRE(_dependencyMap[13], \"../State\").State.ACTIVE, 'onActivated'), (0, _defineProperty2.default)(_stateToPropMappings, _$$_REQUIRE(_dependencyMap[13], \"../State\").State.END, 'onEnded'), _stateToPropMappings);\n\n  function createHandler(_ref2) {\n    var name = _ref2.name,\n        _ref2$allowedProps = _ref2.allowedProps,\n        allowedProps = _ref2$allowedProps === void 0 ? [] : _ref2$allowedProps,\n        _ref2$config = _ref2.config,\n        config = _ref2$config === void 0 ? {} : _ref2$config,\n        transformProps = _ref2.transformProps,\n        _ref2$customNativePro = _ref2.customNativeProps,\n        customNativeProps = _ref2$customNativePro === void 0 ? [] : _ref2$customNativePro;\n\n    var Handler = function (_React$Component) {\n      (0, _inherits2.default)(Handler, _React$Component);\n\n      var _super = _createSuper(Handler);\n\n      function Handler(props) {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _super.call(this, props);\n        _this.updateEnqueued = null;\n\n        _this.onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            _this.props.onGestureEvent == null ? void 0 : _this.props.onGestureEvent(event);\n          } else {\n            _this.props.onGestureHandlerEvent == null ? void 0 : _this.props.onGestureHandlerEvent(event);\n          }\n        };\n\n        _this.onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            _this.props.onHandlerStateChange == null ? void 0 : _this.props.onHandlerStateChange(event);\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange == null ? void 0 : _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n\n        _this.refHandler = function (node) {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          var ref = child.ref;\n\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n\n        _this.createGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n\n          _RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n\n        _this.attachGestureHandler = function (newViewTag) {\n          _this.viewTag = newViewTag;\n\n          if (_reactNative.Platform.OS === 'web') {\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, _this.propsRef);\n          } else {\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag);\n          }\n        };\n\n        _this.updateGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n\n          _RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n        };\n\n        _this.handlerTag = handlerTag++;\n        _this.config = {};\n        _this.propsRef = React.createRef();\n\n        if (props.id) {\n          if (handlerIDToTag[props.id] !== undefined) {\n            throw new Error(\"Handler with ID \\\"\" + props.id + \"\\\" already registered\");\n          }\n\n          handlerIDToTag[props.id] = _this.handlerTag;\n        }\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          var props = this.props;\n\n          if (hasUnresolvedRefs(props)) {\n            this.updateEnqueued = setImmediate(function () {\n              _this2.updateEnqueued = null;\n\n              _this2.update();\n            });\n          }\n\n          this.createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config));\n          this.attachGestureHandler(findNodeHandle(this.viewNode));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = findNodeHandle(this.viewNode);\n\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag);\n          }\n\n          this.update();\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n\n          if (this.updateEnqueued) {\n            clearImmediate(this.updateEnqueued);\n          }\n\n          var handlerID = this.props.id;\n\n          if (handlerID) {\n            delete handlerIDToTag[handlerID];\n          }\n        }\n      }, {\n        key: \"update\",\n        value: function update() {\n          var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n\n          if (!(0, _areEqual.default)(this.config, newConfig)) {\n            this.updateGestureHandler(newConfig);\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = (0, _extends2.default)({}, this.props, updates);\n          var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          var _this$props = this.props,\n              onGestureEvent = _this$props.onGestureEvent,\n              onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          var _this$props2 = this.props,\n              onHandlerStateChange = _this$props2.onHandlerStateChange,\n              onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var events = {\n            onGestureHandlerEvent: gestureEventHandler,\n            onGestureHandlerStateChange: gestureStateEventHandler\n          };\n          this.propsRef.current = events;\n          var child = React.Children.only(this.props.children);\n          var grandChildren = child.props.children;\n\n          if (_reactNative.Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push(_reactNative.Touchable.renderDebugView({\n              color: 'mediumspringgreen',\n              hitSlop: child.props.hitSlop\n            }));\n          }\n\n          return React.cloneElement(child, (0, _extends2.default)({\n            ref: this.refHandler,\n            collapsable: false\n          }, events), grandChildren);\n        }\n      }]);\n      return Handler;\n    }(React.Component);\n\n    Handler.displayName = name;\n    return Handler;\n  }\n});","lineCount":375,"map":[[23,0,1,0],[25,0,2,0],[27,0,9,0],[29,0,10,0],[41,0,21,0],[41,11,21,9,"findNodeHandle"],[41,25,21,0],[41,26,22,2,"node"],[41,30,21,0],[41,32,23,73],[42,0,24,2],[42,8,24,6,"Platform"],[42,30,24,15,"OS"],[42,32,24,6],[42,37,24,22],[42,42,24,2],[42,44,24,29],[42,51,24,36,"node"],[42,55,24,29],[43,0,25,2],[43,11,25,9],[43,44,25,26,"node"],[43,48,25,9],[43,49,25,2],[44,0,26,1],[46,0,28,0],[46,30,28,27,"NativeModules"],[46,56,28,0],[46,57,28,8,"UIManager"],[46,66,28,0],[47,0,28,0],[47,6,28,8,"UIManager"],[47,15,28,0],[47,53,28,20],[47,55,28,0],[48,0,30,0],[48,6,30,6,"customGHEventsConfig"],[48,26,30,26],[48,29,30,29],[49,0,31,2,"onGestureHandlerEvent"],[49,4,31,2,"onGestureHandlerEvent"],[49,25,31,23],[49,27,31,25],[50,0,31,27,"registrationName"],[50,6,31,27,"registrationName"],[50,22,31,43],[50,24,31,45],[51,0,31,25],[51,5,30,29],[52,0,32,2,"onGestureHandlerStateChange"],[52,4,32,2,"onGestureHandlerStateChange"],[52,31,32,29],[52,33,32,31],[53,0,33,4,"registrationName"],[53,6,33,4,"registrationName"],[53,22,33,20],[53,24,33,22],[54,0,32,31],[55,0,30,29],[55,3,30,0],[56,0,41,0,"UIManager"],[56,2,41,0,"UIManager"],[56,11,41,9],[56,12,41,10,"genericDirectEventTypes"],[56,35,41,0],[56,65,42,5,"UIManager"],[56,74,42,14],[56,75,42,15,"genericDirectEventTypes"],[56,98,41,0],[56,100,43,5,"customGHEventsConfig"],[56,120,41,0],[57,0,48,0],[57,6,48,6,"UIManagerConstants"],[57,24,48,24],[57,52,49,2,"UIManager"],[57,61,49,11],[57,62,49,12,"getViewManagerConfig"],[57,82,48,24],[57,102,49,2,"UIManager"],[57,111,49,11],[57,112,49,12,"getViewManagerConfig"],[57,132,49,2],[57,133,49,35],[57,147,49,2],[57,148,48,24],[57,184,50,2,"UIManager"],[57,193,50,11],[57,194,50,12,"getConstants"],[57,206,48,24],[57,226,50,2,"UIManager"],[57,235,50,11],[57,236,50,12,"getConstants"],[57,248,50,2],[57,250,48,0],[59,0,52,0],[59,6,52,4,"UIManagerConstants"],[59,24,52,0],[59,26,52,24],[60,0,53,2,"UIManagerConstants"],[60,4,53,2,"UIManagerConstants"],[60,22,53,20],[60,23,53,21,"genericDirectEventTypes"],[60,46,53,2],[60,76,54,7,"UIManagerConstants"],[60,94,54,25],[60,95,54,26,"genericDirectEventTypes"],[60,118,53,2],[60,120,55,7,"customGHEventsConfig"],[60,140,53,2],[61,0,57,1],[63,0,60,0],[63,30,67,4,"UIManager"],[63,39,60,0],[63,40,61,2,"setJSResponder"],[63,54,60,0],[64,0,60,0],[64,6,61,18,"oldSetJSResponder"],[64,23,60,0],[64,61,61,38],[64,73,61,44],[64,74,63,3],[64,75,60,0],[65,0,60,0],[65,30,67,4,"UIManager"],[65,39,60,0],[65,40,64,2,"clearJSResponder"],[65,56,60,0],[66,0,60,0],[66,6,64,20,"oldClearJSResponder"],[66,25,60,0],[66,63,64,42],[66,75,64,48],[66,76,66,3],[66,77,60,0],[68,0,68,0,"UIManager"],[68,2,68,0,"UIManager"],[68,11,68,9],[68,12,68,10,"setJSResponder"],[68,26,68,0],[68,29,68,27],[68,39,68,28,"tag"],[68,42,68,27],[68,44,68,41,"blockNativeResponder"],[68,64,68,27],[68,66,68,75],[69,0,69,2,"RNGestureHandlerModule"],[69,36,69,25,"handleSetJSResponder"],[69,56,69,2],[69,57,69,46,"tag"],[69,60,69,2],[69,62,69,51,"blockNativeResponder"],[69,82,69,2],[71,0,70,2,"oldSetJSResponder"],[71,4,70,2,"oldSetJSResponder"],[71,21,70,19],[71,22,70,20,"tag"],[71,25,70,19],[71,27,70,25,"blockNativeResponder"],[71,47,70,19],[71,48,70,2],[72,0,71,1],[72,3,68,0],[74,0,72,0,"UIManager"],[74,2,72,0,"UIManager"],[74,11,72,9],[74,12,72,10,"clearJSResponder"],[74,28,72,0],[74,31,72,29],[74,43,72,35],[75,0,73,2,"RNGestureHandlerModule"],[75,36,73,25,"handleClearJSResponder"],[75,58,73,2],[77,0,74,2,"oldClearJSResponder"],[77,4,74,2,"oldClearJSResponder"],[77,23,74,21],[78,0,75,1],[78,3,72,0],[80,0,77,0],[80,6,77,4,"handlerTag"],[80,16,77,14],[80,19,77,17],[80,20,77,0],[81,0,78,0],[81,6,78,6,"handlerIDToTag"],[81,20,78,44],[81,23,78,47],[81,25,78,0],[83,0,80,0],[83,11,80,9,"isConfigParam"],[83,24,80,0],[83,25,80,23,"param"],[83,30,80,0],[83,32,80,39,"name"],[83,36,80,0],[83,38,80,53],[84,0,83,2],[84,11,84,4,"param"],[84,16,84,9],[84,21,84,14,"undefined"],[84,30,84,4],[84,35,85,5,"param"],[84,40,85,10],[84,45,85,15,"Object"],[84,51,85,21],[84,52,85,22,"param"],[84,57,85,21],[84,58,85,5],[84,62,86,6],[84,64,86,8],[84,80,86,25,"param"],[84,85,86,6],[84,86,84,4],[84,91,87,4,"name"],[84,95,87,8],[84,100,87,13],[84,122,84,4],[84,126,88,4,"name"],[84,130,88,8],[84,135,88,13],[84,151,83,2],[85,0,90,1],[87,0,92,0],[87,11,92,9,"filterConfig"],[87,23,92,0],[87,24,93,2,"props"],[87,29,92,0],[87,31,94,2,"validProps"],[87,41,92,0],[87,43,96,2],[88,0,96,2],[88,8,95,2,"defaults"],[88,16,96,2],[88,87,95,38],[88,89,96,2],[89,0,97,2],[89,8,97,8,"res"],[89,11,97,11],[89,41,97,19,"defaults"],[89,49,97,11],[89,50,97,2],[90,0,98,2,"validProps"],[90,4,98,2,"validProps"],[90,14,98,12],[90,15,98,13,"forEach"],[90,22,98,2],[90,23,98,21],[90,33,98,22,"key"],[90,36,98,21],[90,38,98,30],[91,0,99,4],[91,10,99,10,"value"],[91,15,99,15],[91,18,99,18,"props"],[91,23,99,23],[91,24,99,24,"key"],[91,27,99,23],[91,28,99,4],[93,0,100,4],[93,10,100,8,"isConfigParam"],[93,23,100,21],[93,24,100,22,"value"],[93,29,100,21],[93,31,100,29,"key"],[93,34,100,21],[93,35,100,4],[93,37,100,35],[94,0,101,6],[94,12,101,10,"value"],[94,18,101,15],[94,21,101,18,"props"],[94,26,101,23],[94,27,101,24,"key"],[94,30,101,23],[94,31,101,6],[96,0,102,6],[96,12,102,10,"key"],[96,15,102,13],[96,20,102,18],[96,42,102,10],[96,46,102,44,"key"],[96,49,102,47],[96,54,102,52],[96,63,102,6],[96,65,102,63],[97,0,103,8,"value"],[97,10,103,8,"value"],[97,16,103,13],[97,19,103,16,"transformIntoHandlerTags"],[97,43,103,40],[97,44,103,41,"props"],[97,49,103,46],[97,50,103,47,"key"],[97,53,103,46],[97,54,103,40],[97,55,103,8],[98,0,104,7],[98,9,102,6],[98,15,104,13],[98,19,104,17,"key"],[98,22,104,20],[98,27,104,25],[98,36,104,13],[98,38,104,36],[99,0,105,8],[99,14,105,12],[99,21,105,19,"value"],[99,27,105,12],[99,32,105,29],[99,40,105,8],[99,42,105,39],[100,0,106,10,"value"],[100,12,106,10,"value"],[100,18,106,15],[100,21,106,18],[101,0,106,20,"top"],[101,14,106,20,"top"],[101,17,106,23],[101,19,106,25,"value"],[101,25,106,18],[102,0,106,32,"left"],[102,14,106,32,"left"],[102,18,106,36],[102,20,106,38,"value"],[102,26,106,18],[103,0,106,45,"bottom"],[103,14,106,45,"bottom"],[103,20,106,51],[103,22,106,53,"value"],[103,28,106,18],[104,0,106,60,"right"],[104,14,106,60,"right"],[104,19,106,65],[104,21,106,67,"value"],[105,0,106,18],[105,13,106,10],[106,0,107,9],[107,0,108,7],[109,0,109,6,"res"],[109,8,109,6,"res"],[109,11,109,9],[109,12,109,10,"key"],[109,15,109,9],[109,16,109,6],[109,19,109,17,"value"],[109,25,109,6],[110,0,110,5],[111,0,111,3],[111,5,98,2],[112,0,112,2],[112,11,112,9,"res"],[112,14,112,2],[113,0,113,1],[115,0,115,0],[115,11,115,9,"transformIntoHandlerTags"],[115,35,115,0],[115,36,115,34,"handlerIDs"],[115,46,115,0],[115,48,115,51],[116,0,116,2],[116,8,116,6],[116,9,116,7,"Array"],[116,14,116,12],[116,15,116,13,"isArray"],[116,22,116,7],[116,23,116,21,"handlerIDs"],[116,33,116,7],[116,34,116,2],[116,36,116,34],[117,0,117,4,"handlerIDs"],[117,6,117,4,"handlerIDs"],[117,16,117,14],[117,19,117,17],[117,20,117,18,"handlerIDs"],[117,30,117,17],[117,31,117,4],[118,0,118,3],[120,0,120,2],[120,8,120,6,"Platform"],[120,30,120,15,"OS"],[120,32,120,6],[120,37,120,22],[120,42,120,2],[120,44,120,29],[121,0,121,4],[121,13,121,11,"handlerIDs"],[121,23,121,21],[121,24,122,7,"map"],[121,27,121,11],[121,28,122,11],[122,0,122,11],[122,12,122,14,"current"],[122,19,122,11],[122,27,122,14,"current"],[122,34,122,11],[123,0,122,11],[123,15,122,46,"current"],[123,22,122,11],[124,0,122,11],[124,7,121,11],[124,9,123,7,"filter"],[124,15,121,11],[124,16,123,14],[124,26,123,15,"handle"],[124,32,123,14],[125,0,123,14],[125,15,123,31,"handle"],[125,21,123,14],[126,0,123,14],[126,7,121,11],[126,8,121,4],[127,0,124,3],[129,0,126,2],[129,11,126,9,"handlerIDs"],[129,21,126,19],[129,22,127,5,"map"],[129,25,126,9],[129,26,128,6],[129,36,128,7,"handlerID"],[129,45,128,6],[130,0,128,6],[132,0,128,6],[132,13,129,8,"handlerIDToTag"],[132,27,129,22],[132,28,129,23,"handlerID"],[132,37,129,22],[132,38,129,8],[132,65,129,37,"handlerID"],[132,74,129,46],[132,75,129,47,"current"],[132,82,129,8],[132,103,129,37],[132,122,129,56,"handlerTag"],[132,132,129,8],[132,137,129,70],[132,138,129,71],[132,139,128,6],[133,0,128,6],[133,5,126,9],[133,7,131,5,"filter"],[133,13,126,9],[133,14,131,12],[133,24,131,13,"handlerTag"],[133,34,131,12],[134,0,131,12],[134,13,131,36,"handlerTag"],[134,23,131,46],[134,26,131,49],[134,27,131,12],[135,0,131,12],[135,5,126,9],[135,6,126,2],[136,0,132,1],[138,0,137,0],[138,11,137,9,"hasUnresolvedRefs"],[138,28,137,0],[138,29,138,2,"props"],[138,34,137,0],[138,36,139,2],[139,0,141,2],[139,8,141,8,"extract"],[139,15,141,15],[139,18,141,18],[139,27,141,8,"extract"],[139,34,141,18],[139,35,141,19,"refs"],[139,39,141,18],[139,41,141,41],[140,0,142,4],[140,10,142,8],[140,11,142,9,"Array"],[140,16,142,14],[140,17,142,15,"isArray"],[140,24,142,9],[140,25,142,23,"refs"],[140,29,142,9],[140,30,142,4],[140,32,142,30],[141,0,143,6],[141,15,143,13,"refs"],[141,19,143,17],[141,23,143,21,"refs"],[141,27,143,25],[141,28,143,26,"current"],[141,35,143,21],[141,40,143,38],[141,44,143,6],[142,0,144,5],[144,0,145,4],[144,13,145,11,"refs"],[144,17,145,15],[144,18,145,16,"some"],[144,22,145,11],[144,23,145,21],[144,33,145,22,"r"],[144,34,145,21],[145,0,145,21],[145,15,145,28,"r"],[145,16,145,29],[145,20,145,33,"r"],[145,21,145,34],[145,22,145,35,"current"],[145,29,145,33],[145,34,145,47],[145,38,145,21],[146,0,145,21],[146,7,145,11],[146,8,145,4],[147,0,146,3],[147,5,141,2],[149,0,147,2],[149,11,147,9,"extract"],[149,18,147,16],[149,19,147,17,"props"],[149,24,147,22],[149,25,147,23],[149,47,147,22],[149,48,147,16],[149,49,147,9],[149,53,147,51,"extract"],[149,60,147,58],[149,61,147,59,"props"],[149,66,147,64],[149,67,147,65],[149,76,147,64],[149,77,147,58],[149,78,147,2],[150,0,148,1],[152,0,150,0],[152,6,150,6,"stateToPropMappings"],[152,25,150,25],[152,108,151,3,"State"],[152,158,151,9,"UNDETERMINED"],[152,170,150,25],[152,172,151,24,"undefined"],[152,181,150,25],[152,236,152,3,"State"],[152,286,152,9,"BEGAN"],[152,291,150,25],[152,293,152,17],[152,302,150,25],[152,357,153,3,"State"],[152,407,153,9,"FAILED"],[152,413,150,25],[152,415,153,18],[152,425,150,25],[152,480,154,3,"State"],[152,530,154,9,"CANCELLED"],[152,539,150,25],[152,541,154,21],[152,554,150,25],[152,609,155,3,"State"],[152,659,155,9,"ACTIVE"],[152,665,150,25],[152,667,155,18],[152,680,150,25],[152,735,156,3,"State"],[152,785,156,9,"END"],[152,788,150,25],[152,790,156,15],[152,799,150,25],[152,823,150,0],[154,0,176,15],[154,11,176,24,"createHandler"],[154,24,176,15],[154,32,185,76],[155,0,185,76],[155,8,180,2,"name"],[155,12,185,76],[155,21,180,2,"name"],[155,25,185,76],[156,0,185,76],[156,35,181,2,"allowedProps"],[156,47,185,76],[157,0,185,76],[157,8,181,2,"allowedProps"],[157,20,185,76],[157,55,181,17],[157,57,185,76],[158,0,185,76],[158,29,182,2,"config"],[158,35,185,76],[159,0,185,76],[159,8,182,2,"config"],[159,14,185,76],[159,43,182,11],[159,45,185,76],[160,0,185,76],[160,8,183,2,"transformProps"],[160,22,185,76],[160,31,183,2,"transformProps"],[160,45,185,76],[161,0,185,76],[161,38,184,2,"customNativeProps"],[161,55,185,76],[162,0,185,76],[162,8,184,2,"customNativeProps"],[162,25,185,76],[162,63,184,22],[162,65,185,76],[164,0,185,76],[164,8,186,8,"Handler"],[164,15,185,76],[165,0,185,76],[167,0,185,76],[169,0,196,4],[169,23,196,16,"props"],[169,28,196,4],[169,30,196,50],[170,0,196,50],[172,0,196,50],[173,0,197,6],[173,34,197,12,"props"],[173,39,197,6],[174,0,196,50],[174,14,194,12,"updateEnqueued"],[174,28,196,50],[174,31,194,69],[174,35,196,50],[176,0,196,50],[176,14,256,12,"onGestureHandlerEvent"],[176,35,196,50],[176,38,256,36],[176,48,256,37,"event"],[176,53,256,36],[176,55,256,64],[177,0,257,6],[177,14,257,10,"event"],[177,19,257,15],[177,20,257,16,"nativeEvent"],[177,31,257,10],[177,32,257,28,"handlerTag"],[177,42,257,10],[177,47,257,43],[177,53,257,48,"handlerTag"],[177,63,257,6],[177,65,257,60],[178,0,258,8],[178,18,258,13,"props"],[178,23,258,8],[178,24,258,19,"onGestureEvent"],[178,38,258,8],[178,64,258,13,"props"],[178,69,258,8],[178,70,258,19,"onGestureEvent"],[178,84,258,8],[178,85,258,36,"event"],[178,90,258,8],[179,0,259,7],[179,11,257,6],[179,17,259,13],[180,0,260,8],[180,18,260,13,"props"],[180,23,260,8],[180,24,260,19,"onGestureHandlerEvent"],[180,45,260,8],[180,71,260,13,"props"],[180,76,260,8],[180,77,260,19,"onGestureHandlerEvent"],[180,98,260,8],[180,99,260,43,"event"],[180,104,260,8],[181,0,261,7],[182,0,262,5],[182,9,196,50],[184,0,196,50],[184,14,265,12,"onGestureHandlerStateChange"],[184,41,196,50],[184,44,265,42],[184,54,266,6,"event"],[184,59,265,42],[184,61,267,9],[185,0,268,6],[185,14,268,10,"event"],[185,19,268,15],[185,20,268,16,"nativeEvent"],[185,31,268,10],[185,32,268,28,"handlerTag"],[185,42,268,10],[185,47,268,43],[185,53,268,48,"handlerTag"],[185,63,268,6],[185,65,268,60],[186,0,269,8],[186,18,269,13,"props"],[186,23,269,8],[186,24,269,19,"onHandlerStateChange"],[186,44,269,8],[186,70,269,13,"props"],[186,75,269,8],[186,76,269,19,"onHandlerStateChange"],[186,96,269,8],[186,97,269,42,"event"],[186,102,269,8],[187,0,271,8],[187,16,271,14,"state"],[187,21,271,42],[187,24,271,45,"event"],[187,29,271,50],[187,30,271,51,"nativeEvent"],[187,41,271,45],[187,42,271,63,"state"],[187,47,271,8],[188,0,272,8],[188,16,272,14,"stateEventName"],[188,30,272,28],[188,33,272,31,"stateToPropMappings"],[188,52,272,50],[188,53,272,51,"state"],[188,58,272,50],[188,59,272,8],[189,0,273,8],[189,16,273,14,"eventHandler"],[189,28,273,26],[189,31,273,29,"stateEventName"],[189,45,273,43],[189,49,273,47],[189,55,273,52,"props"],[189,60,273,47],[189,61,273,58,"stateEventName"],[189,75,273,47],[189,76,273,8],[191,0,274,8],[191,16,274,12,"eventHandler"],[191,28,274,24],[191,32,274,28],[191,39,274,35,"eventHandler"],[191,51,274,28],[191,56,274,52],[191,66,274,8],[191,68,274,64],[192,0,275,10,"eventHandler"],[192,14,275,10,"eventHandler"],[192,26,275,22],[192,27,275,23,"event"],[192,32,275,22],[192,33,275,10],[193,0,276,9],[194,0,277,7],[194,11,268,6],[194,17,277,13],[195,0,278,8],[195,18,278,13,"props"],[195,23,278,8],[195,24,278,19,"onGestureHandlerStateChange"],[195,51,278,8],[195,77,278,13,"props"],[195,82,278,8],[195,83,278,19,"onGestureHandlerStateChange"],[195,110,278,8],[195,111,278,49,"event"],[195,116,278,8],[196,0,279,7],[197,0,280,5],[197,9,196,50],[199,0,196,50],[199,14,282,12,"refHandler"],[199,24,196,50],[199,27,282,25],[199,37,282,26,"node"],[199,41,282,25],[199,43,282,40],[200,0,283,6],[200,16,283,11,"viewNode"],[200,24,283,6],[200,27,283,22,"node"],[200,31,283,6],[201,0,285,6],[201,14,285,12,"child"],[201,19,285,17],[201,22,285,20,"React"],[201,27,285,25],[201,28,285,26,"Children"],[201,36,285,20],[201,37,285,35,"only"],[201,41,285,20],[201,42,285,40],[201,48,285,45,"props"],[201,53,285,40],[201,54,285,51,"children"],[201,62,285,20],[201,63,285,6],[202,0,287,6],[202,14,287,14,"ref"],[202,17,287,6],[202,20,287,27,"child"],[202,25,287,6],[202,26,287,14,"ref"],[202,29,287,6],[204,0,288,6],[204,14,288,10,"ref"],[204,17,288,13],[204,22,288,18],[204,26,288,6],[204,28,288,24],[205,0,289,8],[205,16,289,12],[205,23,289,19,"ref"],[205,26,289,12],[205,31,289,27],[205,41,289,8],[205,43,289,39],[206,0,290,10,"ref"],[206,14,290,10,"ref"],[206,17,290,13],[206,18,290,14,"node"],[206,22,290,13],[206,23,290,10],[207,0,291,9],[207,13,289,8],[207,19,291,15],[208,0,292,10,"ref"],[208,14,292,10,"ref"],[208,17,292,13],[208,18,292,14,"current"],[208,25,292,10],[208,28,292,24,"node"],[208,32,292,10],[209,0,293,9],[210,0,294,7],[211,0,295,5],[211,9,196,50],[213,0,196,50],[213,14,297,12,"createGestureHandler"],[213,34,196,50],[213,37,297,35],[213,47,298,6,"newConfig"],[213,56,297,35],[213,58,299,9],[214,0,300,6],[214,16,300,11,"config"],[214,22,300,6],[214,25,300,20,"newConfig"],[214,34,300,6],[216,0,302,6,"RNGestureHandlerModule"],[216,42,302,29,"createGestureHandler"],[216,62,302,6],[216,63,303,8,"name"],[216,67,302,6],[216,69,304,8],[216,75,304,13,"handlerTag"],[216,85,302,6],[216,87,305,8,"newConfig"],[216,96,302,6],[217,0,307,5],[217,9,196,50],[219,0,196,50],[219,14,309,12,"attachGestureHandler"],[219,34,196,50],[219,37,309,35],[219,47,309,36,"newViewTag"],[219,57,309,35],[219,59,309,59],[220,0,310,6],[220,16,310,11,"viewTag"],[220,23,310,6],[220,26,310,21,"newViewTag"],[220,36,310,6],[222,0,312,6],[222,14,312,10,"Platform"],[222,36,312,19,"OS"],[222,38,312,10],[222,43,312,26],[222,48,312,6],[222,50,312,33],[223,0,314,9,"RNGestureHandlerModule"],[223,44,314,32,"attachGestureHandler"],[223,64,314,8],[223,65,315,10],[223,71,315,15,"handlerTag"],[223,81,314,8],[223,83,316,10,"newViewTag"],[223,93,314,8],[223,95,317,10],[223,101,317,15,"propsRef"],[223,109,314,8],[224,0,319,7],[224,11,312,6],[224,17,319,13],[225,0,320,8,"RNGestureHandlerModule"],[225,44,320,31,"attachGestureHandler"],[225,64,320,8],[225,65,321,10],[225,71,321,15,"handlerTag"],[225,81,320,8],[225,83,322,10,"newViewTag"],[225,93,320,8],[226,0,324,7],[227,0,325,5],[227,9,196,50],[229,0,196,50],[229,14,327,12,"updateGestureHandler"],[229,34,196,50],[229,37,327,35],[229,47,328,6,"newConfig"],[229,56,327,35],[229,58,329,9],[230,0,330,6],[230,16,330,11,"config"],[230,22,330,6],[230,25,330,20,"newConfig"],[230,34,330,6],[232,0,332,6,"RNGestureHandlerModule"],[232,42,332,29,"updateGestureHandler"],[232,62,332,6],[232,63,332,50],[232,69,332,55,"handlerTag"],[232,79,332,6],[232,81,332,67,"newConfig"],[232,90,332,6],[233,0,333,5],[233,9,196,50],[235,0,198,6],[235,14,198,11,"handlerTag"],[235,24,198,6],[235,27,198,24,"handlerTag"],[235,37,198,34],[235,39,198,6],[236,0,199,6],[236,14,199,11,"config"],[236,20,199,6],[236,23,199,20],[236,25,199,6],[237,0,200,6],[237,14,200,11,"propsRef"],[237,22,200,6],[237,25,200,22,"React"],[237,30,200,27],[237,31,200,28,"createRef"],[237,40,200,22],[237,42,200,6],[239,0,201,6],[239,12,201,10,"props"],[239,17,201,15],[239,18,201,16,"id"],[239,20,201,6],[239,22,201,20],[240,0,202,8],[240,14,202,12,"handlerIDToTag"],[240,28,202,26],[240,29,202,27,"props"],[240,34,202,32],[240,35,202,33,"id"],[240,37,202,26],[240,38,202,12],[240,43,202,41,"undefined"],[240,52,202,8],[240,54,202,52],[241,0,203,10],[241,18,203,16],[241,22,203,20,"Error"],[241,27,203,16],[241,51,203,46,"props"],[241,56,203,51],[241,57,203,52,"id"],[241,59,203,16],[241,86,203,10],[242,0,204,9],[244,0,205,8,"handlerIDToTag"],[244,10,205,8,"handlerIDToTag"],[244,24,205,22],[244,25,205,23,"props"],[244,30,205,28],[244,31,205,29,"id"],[244,33,205,22],[244,34,205,8],[244,37,205,35],[244,43,205,40,"handlerTag"],[244,53,205,8],[245,0,206,7],[247,0,196,50],[248,0,207,5],[250,0,185,76],[251,0,185,76],[252,0,185,76],[252,15,209,4],[252,44,209,24],[253,0,209,24],[255,0,210,6],[255,14,210,12,"props"],[255,19,210,34],[255,22,210,37],[255,27,210,42,"props"],[255,32,210,6],[257,0,211,6],[257,14,211,10,"hasUnresolvedRefs"],[257,31,211,27],[257,32,211,28,"props"],[257,37,211,27],[257,38,211,6],[257,40,211,36],[258,0,218,8],[258,17,218,13,"updateEnqueued"],[258,31,218,8],[258,34,218,30,"setImmediate"],[258,46,218,42],[258,47,218,43],[258,59,218,49],[259,0,219,10],[259,14,219,10],[259,20,219,14],[259,21,219,15,"updateEnqueued"],[259,35,219,10],[259,38,219,32],[259,42,219,10],[261,0,220,10],[261,14,220,10],[261,20,220,14],[261,21,220,15,"update"],[261,27,220,10],[262,0,221,9],[262,13,218,42],[262,14,218,8],[263,0,222,7],[265,0,224,6],[265,15,224,11,"createGestureHandler"],[265,35,224,6],[265,36,225,8,"filterConfig"],[265,48,225,20],[265,49,226,10,"transformProps"],[265,63,226,24],[265,66,226,27,"transformProps"],[265,80,226,41],[265,81,226,42],[265,86,226,47,"props"],[265,91,226,41],[265,92,226,24],[265,95,226,56],[265,100,226,61,"props"],[265,105,225,20],[265,150,227,14,"allowedProps"],[265,162,225,20],[265,198,227,31,"customNativeProps"],[265,215,225,20],[265,219,228,10,"config"],[265,225,225,20],[265,226,224,6],[266,0,232,6],[266,15,232,11,"attachGestureHandler"],[266,35,232,6],[266,36,232,32,"findNodeHandle"],[266,50,232,46],[266,51,232,47],[266,56,232,52,"viewNode"],[266,64,232,46],[266,65,232,6],[267,0,233,5],[268,0,185,76],[269,0,185,76],[270,0,185,76],[270,15,235,4],[270,45,235,25],[271,0,236,6],[271,14,236,12,"viewTag"],[271,21,236,19],[271,24,236,22,"findNodeHandle"],[271,38,236,36],[271,39,236,37],[271,44,236,42,"viewNode"],[271,52,236,36],[271,53,236,6],[273,0,237,6],[273,14,237,10],[273,19,237,15,"viewTag"],[273,26,237,10],[273,31,237,27,"viewTag"],[273,38,237,6],[273,40,237,36],[274,0,238,8],[274,17,238,13,"attachGestureHandler"],[274,37,238,8],[274,38,238,34,"viewTag"],[274,45,238,8],[275,0,239,7],[277,0,240,6],[277,15,240,11,"update"],[277,21,240,6],[278,0,241,5],[279,0,185,76],[280,0,185,76],[281,0,185,76],[281,15,243,4],[281,47,243,27],[282,0,244,6,"RNGestureHandlerModule"],[282,42,244,29,"dropGestureHandler"],[282,60,244,6],[282,61,244,48],[282,66,244,53,"handlerTag"],[282,76,244,6],[284,0,245,6],[284,14,245,10],[284,19,245,15,"updateEnqueued"],[284,33,245,6],[284,35,245,31],[285,0,246,8,"clearImmediate"],[285,12,246,8,"clearImmediate"],[285,26,246,22],[285,27,246,23],[285,32,246,28,"updateEnqueued"],[285,46,246,22],[285,47,246,8],[286,0,247,7],[288,0,249,6],[288,14,249,12,"handlerID"],[288,23,249,41],[288,26,249,44],[288,31,249,49,"props"],[288,36,249,44],[288,37,249,55,"id"],[288,39,249,6],[290,0,250,6],[290,14,250,10,"handlerID"],[290,23,250,6],[290,25,250,21],[291,0,252,8],[291,19,252,15,"handlerIDToTag"],[291,33,252,29],[291,34,252,30,"handlerID"],[291,43,252,29],[291,44,252,8],[292,0,253,7],[293,0,254,5],[294,0,185,76],[295,0,185,76],[296,0,185,76],[296,15,335,4],[296,33,335,21],[297,0,336,6],[297,14,336,12,"newConfig"],[297,23,336,21],[297,26,336,24,"filterConfig"],[297,38,336,36],[297,39,337,8,"transformProps"],[297,53,337,22],[297,56,337,25,"transformProps"],[297,70,337,39],[297,71,337,40],[297,76,337,45,"props"],[297,81,337,39],[297,82,337,22],[297,85,337,54],[297,90,337,59,"props"],[297,95,336,36],[297,140,338,12,"allowedProps"],[297,152,336,36],[297,188,338,29,"customNativeProps"],[297,205,336,36],[297,209,339,8,"config"],[297,215,336,36],[297,216,336,6],[299,0,341,6],[299,14,341,10],[299,15,341,11],[299,38,341,21],[299,43,341,26,"config"],[299,49,341,11],[299,51,341,34,"newConfig"],[299,60,341,11],[299,61,341,6],[299,63,341,46],[300,0,342,8],[300,17,342,13,"updateGestureHandler"],[300,37,342,8],[300,38,342,34,"newConfig"],[300,47,342,8],[301,0,343,7],[302,0,344,5],[303,0,185,76],[304,0,185,76],[305,0,185,76],[305,15,346,4],[305,39,346,19,"updates"],[305,46,346,4],[305,48,346,33],[306,0,347,6],[306,14,347,12,"mergedProps"],[306,25,347,23],[306,55,347,31],[306,60,347,36,"props"],[306,65,347,23],[306,67,347,46,"updates"],[306,74,347,23],[306,75,347,6],[307,0,348,6],[307,14,348,12,"newConfig"],[307,23,348,21],[307,26,348,24,"filterConfig"],[307,38,348,36],[307,39,349,8,"transformProps"],[307,53,349,22],[307,56,349,25,"transformProps"],[307,70,349,39],[307,71,349,40,"mergedProps"],[307,82,349,39],[307,83,349,22],[307,86,349,55,"mergedProps"],[307,97,348,36],[307,142,350,12,"allowedProps"],[307,154,348,36],[307,190,350,29,"customNativeProps"],[307,207,348,36],[307,211,351,8,"config"],[307,217,348,36],[307,218,348,6],[308,0,353,6],[308,15,353,11,"updateGestureHandler"],[308,35,353,6],[308,36,353,32,"newConfig"],[308,45,353,6],[309,0,354,5],[310,0,185,76],[311,0,185,76],[312,0,185,76],[312,15,356,4],[312,33,356,13],[313,0,357,6],[313,14,357,10,"gestureEventHandler"],[313,33,357,29],[313,36,357,32],[313,41,357,37,"onGestureHandlerEvent"],[313,62,357,6],[314,0,363,6],[314,28,366,34],[314,33,366,39,"props"],[314,38,363,6],[315,0,363,6],[315,14,364,8,"onGestureEvent"],[315,28,363,6],[315,43,364,8,"onGestureEvent"],[315,57,363,6],[316,0,363,6],[316,14,365,8,"onGestureHandlerEvent"],[316,35,363,6],[316,50,365,8,"onGestureHandlerEvent"],[316,71,363,6],[318,0,367,6],[318,14,367,10,"onGestureEvent"],[318,28,367,24],[318,32,367,28],[318,39,367,35,"onGestureEvent"],[318,53,367,28],[318,58,367,54],[318,68,367,6],[318,70,367,66],[319,0,371,8],[319,16,371,12,"onGestureHandlerEvent"],[319,37,371,8],[319,39,371,35],[320,0,372,10],[320,20,372,16],[320,24,372,20,"Error"],[320,29,372,16],[320,30,373,12],[320,103,372,16],[320,104,372,10],[321,0,375,9],[323,0,376,8,"gestureEventHandler"],[323,12,376,8,"gestureEventHandler"],[323,31,376,27],[323,34,376,30,"onGestureEvent"],[323,48,376,8],[324,0,377,7],[324,11,367,6],[324,17,377,13],[325,0,378,8],[325,16,379,10,"onGestureHandlerEvent"],[325,37,379,31],[325,41,380,10],[325,48,380,17,"onGestureHandlerEvent"],[325,69,380,10],[325,74,380,43],[325,84,378,8],[325,86,381,10],[326,0,382,10],[326,20,382,16],[326,24,382,20,"Error"],[326,29,382,16],[326,30,383,12],[326,103,382,16],[326,104,382,10],[327,0,385,9],[328,0,386,7],[330,0,388,6],[330,14,388,10,"gestureStateEventHandler"],[330,38,388,34],[330,41,388,37],[330,46,388,42,"onGestureHandlerStateChange"],[330,73,388,6],[331,0,394,6],[331,29,397,40],[331,34,397,45,"props"],[331,39,394,6],[332,0,394,6],[332,14,395,8,"onHandlerStateChange"],[332,34,394,6],[332,50,395,8,"onHandlerStateChange"],[332,70,394,6],[333,0,394,6],[333,14,396,8,"onGestureHandlerStateChange"],[333,41,394,6],[333,57,396,8,"onGestureHandlerStateChange"],[333,84,394,6],[335,0,398,6],[335,14,398,10,"onHandlerStateChange"],[335,34,398,30],[335,38,398,34],[335,45,398,41,"onHandlerStateChange"],[335,65,398,34],[335,70,398,66],[335,80,398,6],[335,82,398,78],[336,0,402,8],[336,16,402,12,"onGestureHandlerStateChange"],[336,43,402,8],[336,45,402,41],[337,0,403,10],[337,20,403,16],[337,24,403,20,"Error"],[337,29,403,16],[337,30,404,12],[337,103,403,16],[337,104,403,10],[338,0,406,9],[340,0,407,8,"gestureStateEventHandler"],[340,12,407,8,"gestureStateEventHandler"],[340,36,407,32],[340,39,407,35,"onHandlerStateChange"],[340,59,407,8],[341,0,408,7],[341,11,398,6],[341,17,408,13],[342,0,409,8],[342,16,410,10,"onGestureHandlerStateChange"],[342,43,410,37],[342,47,411,10],[342,54,411,17,"onGestureHandlerStateChange"],[342,81,411,10],[342,86,411,49],[342,96,409,8],[342,98,412,10],[343,0,413,10],[343,20,413,16],[343,24,413,20,"Error"],[343,29,413,16],[343,30,414,12],[343,103,413,16],[343,104,413,10],[344,0,416,9],[345,0,417,7],[347,0,418,6],[347,14,418,12,"events"],[347,20,418,18],[347,23,418,21],[348,0,419,8,"onGestureHandlerEvent"],[348,12,419,8,"onGestureHandlerEvent"],[348,33,419,29],[348,35,419,31,"gestureEventHandler"],[348,54,418,21],[349,0,420,8,"onGestureHandlerStateChange"],[349,12,420,8,"onGestureHandlerStateChange"],[349,39,420,35],[349,41,420,37,"gestureStateEventHandler"],[350,0,418,21],[350,11,418,6],[351,0,423,6],[351,15,423,11,"propsRef"],[351,23,423,6],[351,24,423,20,"current"],[351,31,423,6],[351,34,423,30,"events"],[351,40,423,6],[352,0,425,6],[352,14,425,12,"child"],[352,19,425,22],[352,22,425,25,"React"],[352,27,425,30],[352,28,425,31,"Children"],[352,36,425,25],[352,37,425,40,"only"],[352,41,425,25],[352,42,425,45],[352,47,425,50,"props"],[352,52,425,45],[352,53,425,56,"children"],[352,61,425,25],[352,62,425,6],[353,0,426,6],[353,14,426,10,"grandChildren"],[353,27,426,23],[353,30,426,26,"child"],[353,35,426,31],[353,36,426,32,"props"],[353,41,426,26],[353,42,426,38,"children"],[353,50,426,6],[355,0,427,6],[355,14,428,8,"Touchable"],[355,37,428,18,"TOUCH_TARGET_DEBUG"],[355,55,428,8],[355,59,429,8,"child"],[355,64,429,13],[355,65,429,14,"type"],[355,69,428,8],[355,74,430,9,"child"],[355,79,430,14],[355,80,430,15,"type"],[355,84,430,9],[355,89,430,24],[355,113,430,9],[355,117,431,10,"child"],[355,122,431,15],[355,123,431,16,"type"],[355,127,431,10],[355,128,431,21,"name"],[355,132,431,10],[355,137,431,30],[355,143,430,9],[355,147,432,10,"child"],[355,152,432,15],[355,153,432,16,"type"],[355,157,432,10],[355,158,432,21,"displayName"],[355,169,432,10],[355,174,432,37],[355,180,428,8],[355,181,427,6],[355,183,433,8],[356,0,434,8,"grandChildren"],[356,12,434,8,"grandChildren"],[356,25,434,21],[356,28,434,24,"React"],[356,33,434,29],[356,34,434,30,"Children"],[356,42,434,24],[356,43,434,39,"toArray"],[356,50,434,24],[356,51,434,47,"grandChildren"],[356,64,434,24],[356,65,434,8],[357,0,435,8,"grandChildren"],[357,12,435,8,"grandChildren"],[357,25,435,21],[357,26,435,22,"push"],[357,30,435,8],[357,31,436,10,"Touchable"],[357,54,436,20,"renderDebugView"],[357,69,436,10],[357,70,436,36],[358,0,437,12,"color"],[358,14,437,12,"color"],[358,19,437,17],[358,21,437,19],[358,40,436,36],[359,0,438,12,"hitSlop"],[359,14,438,12,"hitSlop"],[359,21,438,19],[359,23,438,21,"child"],[359,28,438,26],[359,29,438,27,"props"],[359,34,438,21],[359,35,438,33,"hitSlop"],[360,0,436,36],[360,13,436,10],[360,14,435,8],[361,0,441,7],[363,0,443,6],[363,17,443,13,"React"],[363,22,443,18],[363,23,443,19,"cloneElement"],[363,35,443,13],[363,36,444,8,"child"],[363,41,443,13],[364,0,446,10,"ref"],[364,12,446,10,"ref"],[364,15,446,13],[364,17,446,15],[364,22,446,20,"refHandler"],[364,32,443,13],[365,0,447,10,"collapsable"],[365,12,447,10,"collapsable"],[365,23,447,21],[365,25,447,23],[366,0,443,13],[366,13,448,13,"events"],[366,19,443,13],[366,22,450,8,"grandChildren"],[366,35,443,13],[366,36,443,6],[367,0,452,5],[368,0,185,76],[369,0,185,76],[370,0,185,76],[370,6,186,24,"React"],[370,11,186,29],[370,12,186,30,"Component"],[370,21,185,76],[372,0,186,8,"Handler"],[372,4,186,8,"Handler"],[372,11,185,76],[372,12,187,11,"displayName"],[372,23,185,76],[372,26,187,25,"name"],[372,30,185,76],[373,0,454,2],[373,11,454,9,"Handler"],[373,18,454,2],[374,0,455,1]],"functionMap":{"names":["<global>","findNodeHandle","<anonymous>","UIManager.setJSResponder","UIManager.clearJSResponder","isConfigParam","filterConfig","validProps.forEach$argument_0","transformIntoHandlerTags","handlerIDs.map$argument_0","handlerIDs.map.filter$argument_0","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setImmediate$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;ACoB;CDK;sCEmC;GFE;0CEC;GFE;2BGE;CHG;6BIC;CJG;AKK;CLU;AME;qBCM;GDa;CNE;AQE;WCO,0CD;cEC,uBF;MCK;wEDC;YEE,sCF;CRC;AWK;kBCI;qBCI,8BD;GDC;CXE;ec4B;ECU;ICU;KDW;IEE;2CCS;SDG;KFY;IIE;KJM;IKE;KLW;oCME;KNM;0COG;KPe;yBQE;KRa;mCSE;KTU;mCUE;KVgB;mCWE;KXM;IYE;KZS;IaE;KbQ;IcE;KdgG;GDC;CdE"}},"type":"js/module"}]}