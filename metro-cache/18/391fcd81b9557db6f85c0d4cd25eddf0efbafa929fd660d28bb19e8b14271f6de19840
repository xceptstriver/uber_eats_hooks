{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":213,"column":0}},{"start":{"line":1,"column":0},"end":{"line":213,"column":0}},{"start":{"line":1,"column":0},"end":{"line":213,"column":0}}]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":213,"column":0}}]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":213,"column":0}}]}},{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":213,"column":0}}]}},{"name":"./TabRouter","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":0},"end":{"line":14,"column":21}}]}},{"name":"nanoid/non-secure","data":{"asyncType":null,"locs":[{"start":{"line":138,"column":23},"end":{"line":138,"column":29},"identifierName":"nanoid"},{"start":{"line":163,"column":23},"end":{"line":163,"column":29},"identifierName":"nanoid"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.DrawerActions = void 0;\n  exports.default = DrawerRouter;\n\n  var _objectWithoutProperties2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _toConsumableArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _extends2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/extends\"));\n\n  var _TabRouter = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"./TabRouter\"));\n\n  var _excluded = [\"openByDefault\"];\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var DrawerActions = (0, _extends2.default)({}, _TabRouter.TabActions, {\n    openDrawer: function openDrawer() {\n      return {\n        type: 'OPEN_DRAWER'\n      };\n    },\n    closeDrawer: function closeDrawer() {\n      return {\n        type: 'CLOSE_DRAWER'\n      };\n    },\n    toggleDrawer: function toggleDrawer() {\n      return {\n        type: 'TOGGLE_DRAWER'\n      };\n    }\n  });\n  exports.DrawerActions = DrawerActions;\n\n  var isDrawerOpen = function isDrawerOpen(state) {\n    var _state$history;\n\n    return Boolean((_state$history = state.history) == null ? void 0 : _state$history.some(function (it) {\n      return it.type === 'drawer';\n    }));\n  };\n\n  var openDrawer = function openDrawer(state) {\n    if (isDrawerOpen(state)) {\n      return state;\n    }\n\n    return (0, _extends2.default)({}, state, {\n      history: [].concat((0, _toConsumableArray2.default)(state.history), [{\n        type: 'drawer'\n      }])\n    });\n  };\n\n  var closeDrawer = function closeDrawer(state) {\n    if (!isDrawerOpen(state)) {\n      return state;\n    }\n\n    return (0, _extends2.default)({}, state, {\n      history: state.history.filter(function (it) {\n        return it.type !== 'drawer';\n      })\n    });\n  };\n\n  function DrawerRouter(_ref) {\n    var openByDefault = _ref.openByDefault,\n        rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n    var router = (0, _TabRouter.default)(rest);\n    return (0, _extends2.default)({}, router, {\n      type: 'drawer',\n      getInitialState: function getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList,\n            routeGetIdList = _ref2.routeGetIdList;\n        var state = router.getInitialState({\n          routeNames: routeNames,\n          routeParamList: routeParamList,\n          routeGetIdList: routeGetIdList\n        });\n\n        if (openByDefault) {\n          state = openDrawer(state);\n        }\n\n        return (0, _extends2.default)({}, state, {\n          stale: false,\n          type: 'drawer',\n          key: \"drawer-\" + (0, _$$_REQUIRE(_dependencyMap[5], \"nanoid/non-secure\").nanoid)()\n        });\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref3) {\n        var routeNames = _ref3.routeNames,\n            routeParamList = _ref3.routeParamList,\n            routeGetIdList = _ref3.routeGetIdList;\n\n        if (partialState.stale === false) {\n          return partialState;\n        }\n\n        var state = router.getRehydratedState(partialState, {\n          routeNames: routeNames,\n          routeParamList: routeParamList,\n          routeGetIdList: routeGetIdList\n        });\n\n        if (partialState.history ? isDrawerOpen(partialState) : openByDefault) {\n          state = openDrawer(state);\n        }\n\n        return (0, _extends2.default)({}, state, {\n          type: 'drawer',\n          key: \"drawer-\" + (0, _$$_REQUIRE(_dependencyMap[5], \"nanoid/non-secure\").nanoid)()\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var result = router.getStateForRouteFocus(state, key);\n\n        if (openByDefault) {\n          return openDrawer(result);\n        }\n\n        return closeDrawer(result);\n      },\n      getStateForAction: function getStateForAction(state, action, options) {\n        switch (action.type) {\n          case 'OPEN_DRAWER':\n            return openDrawer(state);\n\n          case 'CLOSE_DRAWER':\n            return closeDrawer(state);\n\n          case 'TOGGLE_DRAWER':\n            if (isDrawerOpen(state)) {\n              return closeDrawer(state);\n            }\n\n            return openDrawer(state);\n\n          case 'GO_BACK':\n            if (openByDefault) {\n              if (!isDrawerOpen(state)) {\n                return openDrawer(state);\n              }\n            } else {\n              if (isDrawerOpen(state)) {\n                return closeDrawer(state);\n              }\n            }\n\n            return router.getStateForAction(state, action, options);\n\n          default:\n            return router.getStateForAction(state, action, options);\n        }\n      },\n      actionCreators: DrawerActions\n    });\n  }\n});","lineCount":167,"map":[[14,0,8,0],[22,0,61,7],[22,6,61,13,"DrawerActions"],[22,19,61,26],[22,49,62,5,"TabActions"],[22,70,61,26],[23,0,63,2,"openDrawer"],[23,4,63,2,"openDrawer"],[23,14,61,26],[23,38,63,33],[24,0,64,4],[24,13,64,11],[25,0,64,13,"type"],[25,8,64,13,"type"],[25,12,64,17],[25,14,64,19],[26,0,64,11],[26,7,64,4],[27,0,65,3],[27,5,61,26],[28,0,66,2,"closeDrawer"],[28,4,66,2,"closeDrawer"],[28,15,61,26],[28,40,66,34],[29,0,67,4],[29,13,67,11],[30,0,67,13,"type"],[30,8,67,13,"type"],[30,12,67,17],[30,14,67,19],[31,0,67,11],[31,7,67,4],[32,0,68,3],[32,5,61,26],[33,0,69,2,"toggleDrawer"],[33,4,69,2,"toggleDrawer"],[33,16,61,26],[33,42,69,35],[34,0,70,4],[34,13,70,11],[35,0,70,13,"type"],[35,8,70,13,"type"],[35,12,70,17],[35,14,70,19],[36,0,70,11],[36,7,70,4],[37,0,71,3],[38,0,61,26],[38,4,61,7],[41,0,74,0],[41,6,74,6,"isDrawerOpen"],[41,18,74,18],[41,21,74,21],[41,30,74,6,"isDrawerOpen"],[41,42,74,21],[41,43,75,2,"state"],[41,48,74,21],[42,0,74,21],[44,0,74,21],[44,11,78,5,"Boolean"],[44,18,78,12],[44,37,78,13,"state"],[44,42,78,18],[44,43,78,19,"history"],[44,50,78,12],[44,71,78,13],[44,86,78,28,"some"],[44,90,78,13],[44,91,78,33],[44,101,78,34,"it"],[44,103,78,33],[45,0,78,33],[45,13,78,41,"it"],[45,15,78,43],[45,16,78,44,"type"],[45,20,78,41],[45,25,78,53],[45,33,78,33],[46,0,78,33],[46,5,78,13],[46,6,78,12],[46,7,74,21],[47,0,74,21],[47,3,74,0],[49,0,80,0],[49,6,80,6,"openDrawer"],[49,16,80,16],[49,19,80,19],[49,28,80,6,"openDrawer"],[49,38,80,19],[49,39,81,2,"state"],[49,44,80,19],[49,46,82,43],[50,0,83,2],[50,8,83,6,"isDrawerOpen"],[50,20,83,18],[50,21,83,19,"state"],[50,26,83,18],[50,27,83,2],[50,29,83,27],[51,0,84,4],[51,13,84,11,"state"],[51,18,84,4],[52,0,85,3],[54,0,87,2],[54,38,88,7,"state"],[54,43,87,2],[55,0,89,4,"history"],[55,6,89,4,"history"],[55,13,89,11],[55,58,89,17,"state"],[55,63,89,22],[55,64,89,23,"history"],[55,71,89,11],[55,75,89,32],[56,0,89,34,"type"],[56,8,89,34,"type"],[56,12,89,38],[56,14,89,40],[57,0,89,32],[57,7,89,11],[58,0,87,2],[59,0,91,1],[59,3,80,0],[61,0,93,0],[61,6,93,6,"closeDrawer"],[61,17,93,17],[61,20,93,20],[61,29,93,6,"closeDrawer"],[61,40,93,20],[61,41,94,2,"state"],[61,46,93,20],[61,48,95,43],[62,0,96,2],[62,8,96,6],[62,9,96,7,"isDrawerOpen"],[62,21,96,19],[62,22,96,20,"state"],[62,27,96,19],[62,28,96,2],[62,30,96,28],[63,0,97,4],[63,13,97,11,"state"],[63,18,97,4],[64,0,98,3],[66,0,100,2],[66,38,101,7,"state"],[66,43,100,2],[67,0,102,4,"history"],[67,6,102,4,"history"],[67,13,102,11],[67,15,102,13,"state"],[67,20,102,18],[67,21,102,19,"history"],[67,28,102,13],[67,29,102,27,"filter"],[67,35,102,13],[67,36,102,34],[67,46,102,35,"it"],[67,48,102,34],[68,0,102,34],[68,15,102,42,"it"],[68,17,102,44],[68,18,102,45,"type"],[68,22,102,42],[68,27,102,54],[68,35,102,34],[69,0,102,34],[69,7,102,13],[70,0,100,2],[71,0,104,1],[71,3,93,0],[73,0,106,15],[73,11,106,24,"DrawerRouter"],[73,23,106,15],[73,30,112,2],[74,0,112,2],[74,8,107,2,"openByDefault"],[74,21,112,2],[74,29,107,2,"openByDefault"],[74,42,112,2],[75,0,112,2],[75,8,108,5,"rest"],[75,12,112,2],[76,0,113,2],[76,8,113,8,"router"],[76,14,113,14],[76,17,113,18],[76,41,113,28,"rest"],[76,45,113,18],[76,46,113,2],[77,0,118,2],[77,38,119,7,"router"],[77,44,118,2],[78,0,121,4,"type"],[78,6,121,4,"type"],[78,10,121,8],[78,12,121,10],[78,20,118,2],[79,0,123,4,"getInitialState"],[79,6,123,4,"getInitialState"],[79,21,118,2],[79,55,123,68],[80,0,123,68],[80,12,123,22,"routeNames"],[80,22,123,68],[80,31,123,22,"routeNames"],[80,41,123,68],[81,0,123,68],[81,12,123,34,"routeParamList"],[81,26,123,68],[81,35,123,34,"routeParamList"],[81,49,123,68],[82,0,123,68],[82,12,123,50,"routeGetIdList"],[82,26,123,68],[82,35,123,50,"routeGetIdList"],[82,49,123,68],[83,0,124,6],[83,12,124,10,"state"],[83,17,124,15],[83,20,124,18,"router"],[83,26,124,24],[83,27,124,25,"getInitialState"],[83,42,124,18],[83,43,124,41],[84,0,125,8,"routeNames"],[84,10,125,8,"routeNames"],[84,20,125,18],[84,22,125,8,"routeNames"],[84,32,124,41],[85,0,126,8,"routeParamList"],[85,10,126,8,"routeParamList"],[85,24,126,22],[85,26,126,8,"routeParamList"],[85,40,124,41],[86,0,127,8,"routeGetIdList"],[86,10,127,8,"routeGetIdList"],[86,24,127,22],[86,26,127,8,"routeGetIdList"],[87,0,124,41],[87,9,124,18],[87,10,124,6],[89,0,130,6],[89,12,130,10,"openByDefault"],[89,25,130,6],[89,27,130,25],[90,0,131,8,"state"],[90,10,131,8,"state"],[90,15,131,13],[90,18,131,16,"openDrawer"],[90,28,131,26],[90,29,131,27,"state"],[90,34,131,26],[90,35,131,8],[91,0,132,7],[93,0,134,6],[93,42,135,11,"state"],[93,47,134,6],[94,0,136,8,"stale"],[94,10,136,8,"stale"],[94,15,136,13],[94,17,136,15],[94,22,134,6],[95,0,137,8,"type"],[95,10,137,8,"type"],[95,14,137,12],[95,16,137,14],[95,24,134,6],[96,0,138,8,"key"],[96,10,138,8,"key"],[96,13,138,11],[96,27,138,23],[97,0,134,6],[98,0,140,5],[98,7,118,2],[99,0,142,4,"getRehydratedState"],[99,6,142,4,"getRehydratedState"],[99,24,118,2],[99,54,143,6,"partialState"],[99,66,118,2],[99,75,145,6],[100,0,145,6],[100,12,144,8,"routeNames"],[100,22,145,6],[100,31,144,8,"routeNames"],[100,41,145,6],[101,0,145,6],[101,12,144,20,"routeParamList"],[101,26,145,6],[101,35,144,20,"routeParamList"],[101,49,145,6],[102,0,145,6],[102,12,144,36,"routeGetIdList"],[102,26,145,6],[102,35,144,36,"routeGetIdList"],[102,49,145,6],[104,0,146,6],[104,12,146,10,"partialState"],[104,24,146,22],[104,25,146,23,"stale"],[104,30,146,10],[104,35,146,33],[104,40,146,6],[104,42,146,40],[105,0,147,8],[105,17,147,15,"partialState"],[105,29,147,8],[106,0,148,7],[108,0,150,6],[108,12,150,10,"state"],[108,17,150,15],[108,20,150,18,"router"],[108,26,150,24],[108,27,150,25,"getRehydratedState"],[108,45,150,18],[108,46,150,44,"partialState"],[108,58,150,18],[108,60,150,58],[109,0,151,8,"routeNames"],[109,10,151,8,"routeNames"],[109,20,151,18],[109,22,151,8,"routeNames"],[109,32,150,58],[110,0,152,8,"routeParamList"],[110,10,152,8,"routeParamList"],[110,24,152,22],[110,26,152,8,"routeParamList"],[110,40,150,58],[111,0,153,8,"routeGetIdList"],[111,10,153,8,"routeGetIdList"],[111,24,153,22],[111,26,153,8,"routeGetIdList"],[112,0,150,58],[112,9,150,18],[112,10,150,6],[114,0,156,6],[114,12,156,10,"partialState"],[114,24,156,22],[114,25,156,23,"history"],[114,32,156,10],[114,35,156,33,"isDrawerOpen"],[114,47,156,45],[114,48,156,46,"partialState"],[114,60,156,45],[114,61,156,10],[114,64,156,62,"openByDefault"],[114,77,156,6],[114,79,156,77],[115,0,157,8,"state"],[115,10,157,8,"state"],[115,15,157,13],[115,18,157,16,"openDrawer"],[115,28,157,26],[115,29,157,27,"state"],[115,34,157,26],[115,35,157,8],[116,0,158,7],[118,0,160,6],[118,42,161,11,"state"],[118,47,160,6],[119,0,162,8,"type"],[119,10,162,8,"type"],[119,14,162,12],[119,16,162,14],[119,24,160,6],[120,0,163,8,"key"],[120,10,163,8,"key"],[120,13,163,11],[120,27,163,23],[121,0,160,6],[122,0,165,5],[122,7,118,2],[123,0,167,4,"getStateForRouteFocus"],[123,6,167,4,"getStateForRouteFocus"],[123,27,118,2],[123,60,167,26,"state"],[123,65,118,2],[123,67,167,33,"key"],[123,70,118,2],[123,72,167,38],[124,0,168,6],[124,12,168,12,"result"],[124,18,168,18],[124,21,168,21,"router"],[124,27,168,27],[124,28,168,28,"getStateForRouteFocus"],[124,49,168,21],[124,50,168,50,"state"],[124,55,168,21],[124,57,168,57,"key"],[124,60,168,21],[124,61,168,6],[126,0,170,6],[126,12,170,10,"openByDefault"],[126,25,170,6],[126,27,170,25],[127,0,171,8],[127,17,171,15,"openDrawer"],[127,27,171,25],[127,28,171,26,"result"],[127,34,171,25],[127,35,171,8],[128,0,172,7],[130,0,174,6],[130,15,174,13,"closeDrawer"],[130,26,174,24],[130,27,174,25,"result"],[130,33,174,24],[130,34,174,6],[131,0,175,5],[131,7,118,2],[132,0,177,4,"getStateForAction"],[132,6,177,4,"getStateForAction"],[132,23,118,2],[132,52,177,22,"state"],[132,57,118,2],[132,59,177,29,"action"],[132,65,118,2],[132,67,177,37,"options"],[132,74,118,2],[132,76,177,46],[133,0,178,6],[133,16,178,14,"action"],[133,22,178,20],[133,23,178,21,"type"],[133,27,178,6],[134,0,179,8],[134,15,179,13],[134,28,179,8],[135,0,180,10],[135,19,180,17,"openDrawer"],[135,29,180,27],[135,30,180,28,"state"],[135,35,180,27],[135,36,180,10],[137,0,182,8],[137,15,182,13],[137,29,182,8],[138,0,183,10],[138,19,183,17,"closeDrawer"],[138,30,183,28],[138,31,183,29,"state"],[138,36,183,28],[138,37,183,10],[140,0,185,8],[140,15,185,13],[140,30,185,8],[141,0,186,10],[141,16,186,14,"isDrawerOpen"],[141,28,186,26],[141,29,186,27,"state"],[141,34,186,26],[141,35,186,10],[141,37,186,35],[142,0,187,12],[142,21,187,19,"closeDrawer"],[142,32,187,30],[142,33,187,31,"state"],[142,38,187,30],[142,39,187,12],[143,0,188,11],[145,0,190,10],[145,19,190,17,"openDrawer"],[145,29,190,27],[145,30,190,28,"state"],[145,35,190,27],[145,36,190,10],[147,0,192,8],[147,15,192,13],[147,24,192,8],[148,0,193,10],[148,16,193,14,"openByDefault"],[148,29,193,10],[148,31,193,29],[149,0,194,12],[149,18,194,16],[149,19,194,17,"isDrawerOpen"],[149,31,194,29],[149,32,194,30,"state"],[149,37,194,29],[149,38,194,12],[149,40,194,38],[150,0,195,14],[150,23,195,21,"openDrawer"],[150,33,195,31],[150,34,195,32,"state"],[150,39,195,31],[150,40,195,14],[151,0,196,13],[152,0,197,11],[152,13,193,10],[152,19,197,17],[153,0,198,12],[153,18,198,16,"isDrawerOpen"],[153,30,198,28],[153,31,198,29,"state"],[153,36,198,28],[153,37,198,12],[153,39,198,37],[154,0,199,14],[154,23,199,21,"closeDrawer"],[154,34,199,32],[154,35,199,33,"state"],[154,40,199,32],[154,41,199,14],[155,0,200,13],[156,0,201,11],[158,0,203,10],[158,19,203,17,"router"],[158,25,203,23],[158,26,203,24,"getStateForAction"],[158,43,203,17],[158,44,203,42,"state"],[158,49,203,17],[158,51,203,49,"action"],[158,57,203,17],[158,59,203,57,"options"],[158,66,203,17],[158,67,203,10],[160,0,205,8],[161,0,206,10],[161,19,206,17,"router"],[161,25,206,23],[161,26,206,24,"getStateForAction"],[161,43,206,17],[161,44,206,42,"state"],[161,49,206,17],[161,51,206,49,"action"],[161,57,206,17],[161,59,206,57,"options"],[161,66,206,17],[161,67,206,10],[162,0,178,6],[163,0,208,5],[163,7,118,2],[164,0,210,4,"actionCreators"],[164,6,210,4,"actionCreators"],[164,20,210,18],[164,22,210,20,"DrawerActions"],[165,0,118,2],[166,0,212,1]],"functionMap":{"names":["<global>","DrawerActions.openDrawer","DrawerActions.closeDrawer","DrawerActions.toggleDrawer","isDrawerOpen","<anonymous>","openDrawer","closeDrawer","state.history.filter$argument_0","DrawerRouter","getInitialState","getRehydratedState","getStateForRouteFocus","getStateForAction"],"mappings":"AAA;EC8D;GDE;EEC;GFE;EGC;GHE;qBIG;iCCI,4BD,EJ;mBME;CNW;oBOE;kCCS,4BD;CPE;eSE;ICiB;KDiB;IEE;KFuB;IGE;KHQ;IIE;KJ+B;CTI"}},"type":"js/module"}]}