{"dependencies":[{"name":"./conversions","data":{"asyncType":null,"locs":[{"start":{"line":6,"column":13},"end":{"line":6,"column":37}},{"start":{"line":64,"column":63},"end":{"line":64,"column":85}},{"start":{"line":65,"column":61},"end":{"line":65,"column":83}}]}},{"name":"./route","data":{"asyncType":null,"locs":[{"start":{"line":67,"column":14},"end":{"line":67,"column":30}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var convert = {};\n  var models = Object.keys(_$$_REQUIRE(_dependencyMap[0], \"./conversions\"));\n\n  function wrapRaw(fn) {\n    var wrappedFn = function wrappedFn(args) {\n      if (args === undefined || args === null) {\n        return args;\n      }\n\n      if (arguments.length > 1) {\n        args = Array.prototype.slice.call(arguments);\n      }\n\n      return fn(args);\n    };\n\n    if ('conversion' in fn) {\n      wrappedFn.conversion = fn.conversion;\n    }\n\n    return wrappedFn;\n  }\n\n  function wrapRounded(fn) {\n    var wrappedFn = function wrappedFn(args) {\n      if (args === undefined || args === null) {\n        return args;\n      }\n\n      if (arguments.length > 1) {\n        args = Array.prototype.slice.call(arguments);\n      }\n\n      var result = fn(args);\n\n      if (typeof result === 'object') {\n        for (var len = result.length, i = 0; i < len; i++) {\n          result[i] = Math.round(result[i]);\n        }\n      }\n\n      return result;\n    };\n\n    if ('conversion' in fn) {\n      wrappedFn.conversion = fn.conversion;\n    }\n\n    return wrappedFn;\n  }\n\n  models.forEach(function (fromModel) {\n    convert[fromModel] = {};\n    Object.defineProperty(convert[fromModel], 'channels', {\n      value: _$$_REQUIRE(_dependencyMap[0], \"./conversions\")[fromModel].channels\n    });\n    Object.defineProperty(convert[fromModel], 'labels', {\n      value: _$$_REQUIRE(_dependencyMap[0], \"./conversions\")[fromModel].labels\n    });\n\n    var routes = _$$_REQUIRE(_dependencyMap[1], \"./route\")(fromModel);\n\n    var routeModels = Object.keys(routes);\n    routeModels.forEach(function (toModel) {\n      var fn = routes[toModel];\n      convert[fromModel][toModel] = wrapRounded(fn);\n      convert[fromModel][toModel].raw = wrapRaw(fn);\n    });\n  });\n  module.exports = convert;\n});","lineCount":72,"map":[[2,0,4,0],[2,6,4,4,"convert"],[2,13,4,11],[2,16,4,14],[2,18,4,0],[3,0,6,0],[3,6,6,4,"models"],[3,12,6,10],[3,15,6,13,"Object"],[3,21,6,19],[3,22,6,20,"keys"],[3,26,6,13],[3,75,6,0],[5,0,8,0],[5,11,8,9,"wrapRaw"],[5,18,8,0],[5,19,8,17,"fn"],[5,21,8,0],[5,23,8,21],[6,0,9,1],[6,8,9,5,"wrappedFn"],[6,17,9,14],[6,20,9,17],[6,29,9,5,"wrappedFn"],[6,38,9,17],[6,39,9,27,"args"],[6,43,9,17],[6,45,9,33],[7,0,10,2],[7,10,10,6,"args"],[7,14,10,10],[7,19,10,15,"undefined"],[7,28,10,6],[7,32,10,28,"args"],[7,36,10,32],[7,41,10,37],[7,45,10,2],[7,47,10,43],[8,0,11,3],[8,15,11,10,"args"],[8,19,11,3],[9,0,12,3],[11,0,14,2],[11,10,14,6,"arguments"],[11,19,14,15],[11,20,14,16,"length"],[11,26,14,6],[11,29,14,25],[11,30,14,2],[11,32,14,28],[12,0,15,3,"args"],[12,8,15,3,"args"],[12,12,15,7],[12,15,15,10,"Array"],[12,20,15,15],[12,21,15,16,"prototype"],[12,30,15,10],[12,31,15,26,"slice"],[12,36,15,10],[12,37,15,32,"call"],[12,41,15,10],[12,42,15,37,"arguments"],[12,51,15,10],[12,52,15,3],[13,0,16,3],[15,0,18,2],[15,13,18,9,"fn"],[15,15,18,11],[15,16,18,12,"args"],[15,20,18,11],[15,21,18,2],[16,0,19,2],[16,5,9,1],[18,0,22,1],[18,8,22,5],[18,24,22,21,"fn"],[18,26,22,1],[18,28,22,25],[19,0,23,2,"wrappedFn"],[19,6,23,2,"wrappedFn"],[19,15,23,11],[19,16,23,12,"conversion"],[19,26,23,2],[19,29,23,25,"fn"],[19,31,23,27],[19,32,23,28,"conversion"],[19,42,23,2],[20,0,24,2],[22,0,26,1],[22,11,26,8,"wrappedFn"],[22,20,26,1],[23,0,27,1],[25,0,29,0],[25,11,29,9,"wrapRounded"],[25,22,29,0],[25,23,29,21,"fn"],[25,25,29,0],[25,27,29,25],[26,0,30,1],[26,8,30,5,"wrappedFn"],[26,17,30,14],[26,20,30,17],[26,29,30,5,"wrappedFn"],[26,38,30,17],[26,39,30,27,"args"],[26,43,30,17],[26,45,30,33],[27,0,31,2],[27,10,31,6,"args"],[27,14,31,10],[27,19,31,15,"undefined"],[27,28,31,6],[27,32,31,28,"args"],[27,36,31,32],[27,41,31,37],[27,45,31,2],[27,47,31,43],[28,0,32,3],[28,15,32,10,"args"],[28,19,32,3],[29,0,33,3],[31,0,35,2],[31,10,35,6,"arguments"],[31,19,35,15],[31,20,35,16,"length"],[31,26,35,6],[31,29,35,25],[31,30,35,2],[31,32,35,28],[32,0,36,3,"args"],[32,8,36,3,"args"],[32,12,36,7],[32,15,36,10,"Array"],[32,20,36,15],[32,21,36,16,"prototype"],[32,30,36,10],[32,31,36,26,"slice"],[32,36,36,10],[32,37,36,32,"call"],[32,41,36,10],[32,42,36,37,"arguments"],[32,51,36,10],[32,52,36,3],[33,0,37,3],[35,0,39,2],[35,10,39,6,"result"],[35,16,39,12],[35,19,39,15,"fn"],[35,21,39,17],[35,22,39,18,"args"],[35,26,39,17],[35,27,39,2],[37,0,44,2],[37,10,44,6],[37,17,44,13,"result"],[37,23,44,6],[37,28,44,24],[37,36,44,2],[37,38,44,34],[38,0,45,3],[38,13,45,8],[38,17,45,12,"len"],[38,20,45,15],[38,23,45,18,"result"],[38,29,45,24],[38,30,45,25,"length"],[38,36,45,8],[38,38,45,33,"i"],[38,39,45,34],[38,42,45,37],[38,43,45,3],[38,45,45,40,"i"],[38,46,45,41],[38,49,45,44,"len"],[38,52,45,3],[38,54,45,49,"i"],[38,55,45,50],[38,57,45,3],[38,59,45,54],[39,0,46,4,"result"],[39,10,46,4,"result"],[39,16,46,10],[39,17,46,11,"i"],[39,18,46,10],[39,19,46,4],[39,22,46,16,"Math"],[39,26,46,20],[39,27,46,21,"round"],[39,32,46,16],[39,33,46,27,"result"],[39,39,46,33],[39,40,46,34,"i"],[39,41,46,33],[39,42,46,16],[39,43,46,4],[40,0,47,4],[41,0,48,3],[43,0,50,2],[43,13,50,9,"result"],[43,19,50,2],[44,0,51,2],[44,5,30,1],[46,0,54,1],[46,8,54,5],[46,24,54,21,"fn"],[46,26,54,1],[46,28,54,25],[47,0,55,2,"wrappedFn"],[47,6,55,2,"wrappedFn"],[47,15,55,11],[47,16,55,12,"conversion"],[47,26,55,2],[47,29,55,25,"fn"],[47,31,55,27],[47,32,55,28,"conversion"],[47,42,55,2],[48,0,56,2],[50,0,58,1],[50,11,58,8,"wrappedFn"],[50,20,58,1],[51,0,59,1],[53,0,61,0,"models"],[53,2,61,0,"models"],[53,8,61,6],[53,9,61,7,"forEach"],[53,16,61,0],[53,17,61,15],[53,27,61,25,"fromModel"],[53,36,61,15],[53,38,61,36],[54,0,62,1,"convert"],[54,4,62,1,"convert"],[54,11,62,8],[54,12,62,9,"fromModel"],[54,21,62,8],[54,22,62,1],[54,25,62,22],[54,27,62,1],[55,0,64,1,"Object"],[55,4,64,1,"Object"],[55,10,64,7],[55,11,64,8,"defineProperty"],[55,25,64,1],[55,26,64,23,"convert"],[55,33,64,30],[55,34,64,31,"fromModel"],[55,43,64,30],[55,44,64,1],[55,46,64,43],[55,56,64,1],[55,58,64,55],[56,0,64,56,"value"],[56,6,64,56,"value"],[56,11,64,61],[56,13,64,63],[56,61,64,75,"fromModel"],[56,70,64,63],[56,72,64,86,"channels"],[57,0,64,55],[57,5,64,1],[58,0,65,1,"Object"],[58,4,65,1,"Object"],[58,10,65,7],[58,11,65,8,"defineProperty"],[58,25,65,1],[58,26,65,23,"convert"],[58,33,65,30],[58,34,65,31,"fromModel"],[58,43,65,30],[58,44,65,1],[58,46,65,43],[58,54,65,1],[58,56,65,53],[59,0,65,54,"value"],[59,6,65,54,"value"],[59,11,65,59],[59,13,65,61],[59,61,65,73,"fromModel"],[59,70,65,61],[59,72,65,84,"labels"],[60,0,65,53],[60,5,65,1],[62,0,67,1],[62,8,67,5,"routes"],[62,14,67,11],[62,17,67,14],[62,59,67,20,"fromModel"],[62,68,67,14],[62,69,67,1],[64,0,68,1],[64,8,68,5,"routeModels"],[64,19,68,16],[64,22,68,19,"Object"],[64,28,68,25],[64,29,68,26,"keys"],[64,33,68,19],[64,34,68,31,"routes"],[64,40,68,19],[64,41,68,1],[65,0,70,1,"routeModels"],[65,4,70,1,"routeModels"],[65,15,70,12],[65,16,70,13,"forEach"],[65,23,70,1],[65,24,70,21],[65,34,70,31,"toModel"],[65,41,70,21],[65,43,70,40],[66,0,71,2],[66,10,71,6,"fn"],[66,12,71,8],[66,15,71,11,"routes"],[66,21,71,17],[66,22,71,18,"toModel"],[66,29,71,17],[66,30,71,2],[67,0,73,2,"convert"],[67,6,73,2,"convert"],[67,13,73,9],[67,14,73,10,"fromModel"],[67,23,73,9],[67,24,73,2],[67,25,73,21,"toModel"],[67,32,73,2],[67,36,73,32,"wrapRounded"],[67,47,73,43],[67,48,73,44,"fn"],[67,50,73,43],[67,51,73,2],[68,0,74,2,"convert"],[68,6,74,2,"convert"],[68,13,74,9],[68,14,74,10,"fromModel"],[68,23,74,9],[68,24,74,2],[68,25,74,21,"toModel"],[68,32,74,2],[68,34,74,30,"raw"],[68,37,74,2],[68,40,74,36,"wrapRaw"],[68,47,74,43],[68,48,74,44,"fn"],[68,50,74,43],[68,51,74,2],[69,0,75,2],[69,5,70,1],[70,0,76,1],[70,3,61,0],[71,0,78,0,"module"],[71,2,78,0,"module"],[71,8,78,6],[71,9,78,7,"exports"],[71,16,78,0],[71,19,78,17,"convert"],[71,26,78,0]],"functionMap":{"names":["<global>","wrapRaw","wrappedFn","wrapRounded","models.forEach$argument_0","routeModels.forEach$argument_0"],"mappings":"AAA;ACO;iBCC;EDU;CDQ;AGE;iBDC;ECqB;CHQ;eIE;qBCS;EDK;CJC"}},"type":"js/module"}]}