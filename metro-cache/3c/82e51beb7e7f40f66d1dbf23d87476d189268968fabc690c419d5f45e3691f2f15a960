{"dependencies":[{"name":"./XMLHttpRequest","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":24},"end":{"line":13,"column":48}},{"start":{"line":14,"column":24},"end":{"line":14,"column":48}},{"start":{"line":15,"column":36},"end":{"line":15,"column":60}},{"start":{"line":78,"column":4},"end":{"line":78,"column":28}},{"start":{"line":87,"column":4},"end":{"line":87,"column":28}},{"start":{"line":96,"column":4},"end":{"line":96,"column":28}},{"start":{"line":155,"column":4},"end":{"line":155,"column":28}},{"start":{"line":156,"column":4},"end":{"line":156,"column":28}},{"start":{"line":157,"column":4},"end":{"line":157,"column":28}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var originalXHROpen = _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.open;\n\n  var originalXHRSend = _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.send;\n\n  var originalXHRSetRequestHeader = _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.setRequestHeader;\n\n  var openCallback;\n  var sendCallback;\n  var requestHeaderCallback;\n  var headerReceivedCallback;\n  var responseCallback;\n  var _isInterceptorEnabled = false;\n  var XHRInterceptor = {\n    setOpenCallback: function setOpenCallback(callback) {\n      openCallback = callback;\n    },\n    setSendCallback: function setSendCallback(callback) {\n      sendCallback = callback;\n    },\n    setHeaderReceivedCallback: function setHeaderReceivedCallback(callback) {\n      headerReceivedCallback = callback;\n    },\n    setResponseCallback: function setResponseCallback(callback) {\n      responseCallback = callback;\n    },\n    setRequestHeaderCallback: function setRequestHeaderCallback(callback) {\n      requestHeaderCallback = callback;\n    },\n    isInterceptorEnabled: function isInterceptorEnabled() {\n      return _isInterceptorEnabled;\n    },\n    enableInterception: function enableInterception() {\n      if (_isInterceptorEnabled) {\n        return;\n      }\n\n      _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.open = function (method, url) {\n        if (openCallback) {\n          openCallback(method, url, this);\n        }\n\n        originalXHROpen.apply(this, arguments);\n      };\n\n      _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.setRequestHeader = function (header, value) {\n        if (requestHeaderCallback) {\n          requestHeaderCallback(header, value, this);\n        }\n\n        originalXHRSetRequestHeader.apply(this, arguments);\n      };\n\n      _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.send = function (data) {\n        var _this = this;\n\n        if (sendCallback) {\n          sendCallback(data, this);\n        }\n\n        if (this.addEventListener) {\n          this.addEventListener('readystatechange', function () {\n            if (!_isInterceptorEnabled) {\n              return;\n            }\n\n            if (_this.readyState === _this.HEADERS_RECEIVED) {\n              var contentTypeString = _this.getResponseHeader('Content-Type');\n\n              var contentLengthString = _this.getResponseHeader('Content-Length');\n\n              var responseContentType, responseSize;\n\n              if (contentTypeString) {\n                responseContentType = contentTypeString.split(';')[0];\n              }\n\n              if (contentLengthString) {\n                responseSize = parseInt(contentLengthString, 10);\n              }\n\n              if (headerReceivedCallback) {\n                headerReceivedCallback(responseContentType, responseSize, _this.getAllResponseHeaders(), _this);\n              }\n            }\n\n            if (_this.readyState === _this.DONE) {\n              if (responseCallback) {\n                responseCallback(_this.status, _this.timeout, _this.response, _this.responseURL, _this.responseType, _this);\n              }\n            }\n          }, false);\n        }\n\n        originalXHRSend.apply(this, arguments);\n      };\n\n      _isInterceptorEnabled = true;\n    },\n    disableInterception: function disableInterception() {\n      if (!_isInterceptorEnabled) {\n        return;\n      }\n\n      _isInterceptorEnabled = false;\n      _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.send = originalXHRSend;\n      _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.open = originalXHROpen;\n      _$$_REQUIRE(_dependencyMap[0], \"./XMLHttpRequest\").prototype.setRequestHeader = originalXHRSetRequestHeader;\n      responseCallback = null;\n      openCallback = null;\n      sendCallback = null;\n      headerReceivedCallback = null;\n      requestHeaderCallback = null;\n    }\n  };\n  module.exports = XHRInterceptor;\n});","lineCount":119,"map":[[2,0,10,0],[4,0,13,0],[4,6,13,6,"originalXHROpen"],[4,21,13,21],[4,24,13,24],[4,75,13,39,"prototype"],[4,84,13,24],[4,85,13,49,"open"],[4,89,13,0],[6,0,14,0],[6,6,14,6,"originalXHRSend"],[6,21,14,21],[6,24,14,24],[6,75,14,39,"prototype"],[6,84,14,24],[6,85,14,49,"send"],[6,89,14,0],[8,0,15,0],[8,6,15,6,"originalXHRSetRequestHeader"],[8,33,15,33],[8,36,15,36],[8,87,15,51,"prototype"],[8,96,15,36],[8,97,15,61,"setRequestHeader"],[8,113,15,0],[10,0,17,0],[10,6,17,4,"openCallback"],[10,18,17,0],[11,0,18,0],[11,6,18,4,"sendCallback"],[11,18,18,0],[12,0,19,0],[12,6,19,4,"requestHeaderCallback"],[12,27,19,0],[13,0,20,0],[13,6,20,4,"headerReceivedCallback"],[13,28,20,0],[14,0,21,0],[14,6,21,4,"responseCallback"],[14,22,21,0],[15,0,23,0],[15,6,23,4,"isInterceptorEnabled"],[15,27,23,24],[15,30,23,27],[15,35,23,0],[16,0,32,0],[16,6,32,6,"XHRInterceptor"],[16,20,32,20],[16,23,32,23],[17,0,36,2,"setOpenCallback"],[17,4,36,2,"setOpenCallback"],[17,19,32,23],[17,46,36,18,"callback"],[17,54,32,23],[17,56,36,28],[18,0,37,4,"openCallback"],[18,6,37,4,"openCallback"],[18,18,37,16],[18,21,37,19,"callback"],[18,29,37,4],[19,0,38,3],[19,5,32,23],[20,0,43,2,"setSendCallback"],[20,4,43,2,"setSendCallback"],[20,19,32,23],[20,46,43,18,"callback"],[20,54,32,23],[20,56,43,28],[21,0,44,4,"sendCallback"],[21,6,44,4,"sendCallback"],[21,18,44,16],[21,21,44,19,"callback"],[21,29,44,4],[22,0,45,3],[22,5,32,23],[23,0,50,2,"setHeaderReceivedCallback"],[23,4,50,2,"setHeaderReceivedCallback"],[23,29,32,23],[23,66,50,28,"callback"],[23,74,32,23],[23,76,50,38],[24,0,51,4,"headerReceivedCallback"],[24,6,51,4,"headerReceivedCallback"],[24,28,51,26],[24,31,51,29,"callback"],[24,39,51,4],[25,0,52,3],[25,5,32,23],[26,0,57,2,"setResponseCallback"],[26,4,57,2,"setResponseCallback"],[26,23,32,23],[26,54,57,22,"callback"],[26,62,32,23],[26,64,57,32],[27,0,58,4,"responseCallback"],[27,6,58,4,"responseCallback"],[27,22,58,20],[27,25,58,23,"callback"],[27,33,58,4],[28,0,59,3],[28,5,32,23],[29,0,64,2,"setRequestHeaderCallback"],[29,4,64,2,"setRequestHeaderCallback"],[29,28,32,23],[29,64,64,27,"callback"],[29,72,32,23],[29,74,64,37],[30,0,65,4,"requestHeaderCallback"],[30,6,65,4,"requestHeaderCallback"],[30,27,65,25],[30,30,65,28,"callback"],[30,38,65,4],[31,0,66,3],[31,5,32,23],[32,0,68,2,"isInterceptorEnabled"],[32,4,68,2,"isInterceptorEnabled"],[32,24,32,23],[32,58,68,25],[33,0,69,4],[33,13,69,11,"isInterceptorEnabled"],[33,34,69,4],[34,0,70,3],[34,5,32,23],[35,0,72,2,"enableInterception"],[35,4,72,2,"enableInterception"],[35,22,32,23],[35,54,72,23],[36,0,73,4],[36,10,73,8,"isInterceptorEnabled"],[36,31,73,4],[36,33,73,30],[37,0,74,6],[38,0,75,5],[40,0,78,4],[40,57,78,19,"prototype"],[40,66,78,4],[40,67,78,29,"open"],[40,71,78,4],[40,74,78,36],[40,84,78,45,"method"],[40,90,78,36],[40,92,78,53,"url"],[40,95,78,36],[40,97,78,58],[41,0,79,6],[41,12,79,10,"openCallback"],[41,24,79,6],[41,26,79,24],[42,0,80,8,"openCallback"],[42,10,80,8,"openCallback"],[42,22,80,20],[42,23,80,21,"method"],[42,29,80,20],[42,31,80,29,"url"],[42,34,80,20],[42,36,80,34],[42,40,80,20],[42,41,80,8],[43,0,81,7],[45,0,82,6,"originalXHROpen"],[45,8,82,6,"originalXHROpen"],[45,23,82,21],[45,24,82,22,"apply"],[45,29,82,6],[45,30,82,28],[45,34,82,6],[45,36,82,34,"arguments"],[45,45,82,6],[46,0,83,5],[46,7,78,4],[48,0,87,4],[48,57,87,19,"prototype"],[48,66,87,4],[48,67,87,29,"setRequestHeader"],[48,83,87,4],[48,86,87,48],[48,96,87,57,"header"],[48,102,87,48],[48,104,87,65,"value"],[48,109,87,48],[48,111,87,72],[49,0,88,6],[49,12,88,10,"requestHeaderCallback"],[49,33,88,6],[49,35,88,33],[50,0,89,8,"requestHeaderCallback"],[50,10,89,8,"requestHeaderCallback"],[50,31,89,29],[50,32,89,30,"header"],[50,38,89,29],[50,40,89,38,"value"],[50,45,89,29],[50,47,89,45],[50,51,89,29],[50,52,89,8],[51,0,90,7],[53,0,91,6,"originalXHRSetRequestHeader"],[53,8,91,6,"originalXHRSetRequestHeader"],[53,35,91,33],[53,36,91,34,"apply"],[53,41,91,6],[53,42,91,40],[53,46,91,6],[53,48,91,46,"arguments"],[53,57,91,6],[54,0,92,5],[54,7,87,4],[56,0,96,4],[56,57,96,19,"prototype"],[56,66,96,4],[56,67,96,29,"send"],[56,71,96,4],[56,74,96,36],[56,84,96,45,"data"],[56,88,96,36],[56,90,96,51],[57,0,96,51],[59,0,97,6],[59,12,97,10,"sendCallback"],[59,24,97,6],[59,26,97,24],[60,0,98,8,"sendCallback"],[60,10,98,8,"sendCallback"],[60,22,98,20],[60,23,98,21,"data"],[60,27,98,20],[60,29,98,27],[60,33,98,20],[60,34,98,8],[61,0,99,7],[63,0,100,6],[63,12,100,10],[63,17,100,15,"addEventListener"],[63,33,100,6],[63,35,100,33],[64,0,101,8],[64,15,101,13,"addEventListener"],[64,31,101,8],[64,32,102,10],[64,50,101,8],[64,52,103,10],[64,64,103,16],[65,0,104,12],[65,16,104,16],[65,17,104,17,"isInterceptorEnabled"],[65,38,104,12],[65,40,104,39],[66,0,105,14],[67,0,106,13],[69,0,107,12],[69,16,107,16],[69,21,107,20],[69,22,107,21,"readyState"],[69,32,107,16],[69,37,107,36],[69,42,107,40],[69,43,107,41,"HEADERS_RECEIVED"],[69,59,107,12],[69,61,107,59],[70,0,108,14],[70,18,108,20,"contentTypeString"],[70,35,108,37],[70,38,108,40],[70,43,108,44],[70,44,108,45,"getResponseHeader"],[70,61,108,40],[70,62,108,63],[70,76,108,40],[70,77,108,14],[72,0,109,14],[72,18,109,20,"contentLengthString"],[72,37,109,39],[72,40,109,42],[72,45,109,46],[72,46,109,47,"getResponseHeader"],[72,63,109,42],[72,64,110,16],[72,80,109,42],[72,81,109,14],[74,0,112,14],[74,18,112,18,"responseContentType"],[74,37,112,14],[74,39,112,39,"responseSize"],[74,51,112,14],[76,0,113,14],[76,18,113,18,"contentTypeString"],[76,35,113,14],[76,37,113,37],[77,0,114,16,"responseContentType"],[77,16,114,16,"responseContentType"],[77,35,114,35],[77,38,114,38,"contentTypeString"],[77,55,114,55],[77,56,114,56,"split"],[77,61,114,38],[77,62,114,62],[77,65,114,38],[77,67,114,67],[77,68,114,38],[77,69,114,16],[78,0,115,15],[80,0,116,14],[80,18,116,18,"contentLengthString"],[80,37,116,14],[80,39,116,39],[81,0,117,16,"responseSize"],[81,16,117,16,"responseSize"],[81,28,117,28],[81,31,117,31,"parseInt"],[81,39,117,39],[81,40,117,40,"contentLengthString"],[81,59,117,39],[81,61,117,61],[81,63,117,39],[81,64,117,16],[82,0,118,15],[84,0,119,14],[84,18,119,18,"headerReceivedCallback"],[84,40,119,14],[84,42,119,42],[85,0,120,16,"headerReceivedCallback"],[85,16,120,16,"headerReceivedCallback"],[85,38,120,38],[85,39,121,18,"responseContentType"],[85,58,120,38],[85,60,122,18,"responseSize"],[85,72,120,38],[85,74,123,18],[85,79,123,22],[85,80,123,23,"getAllResponseHeaders"],[85,101,123,18],[85,103,120,38],[85,105,124,18],[85,110,120,38],[85,111,120,16],[86,0,126,15],[87,0,127,13],[89,0,128,12],[89,16,128,16],[89,21,128,20],[89,22,128,21,"readyState"],[89,32,128,16],[89,37,128,36],[89,42,128,40],[89,43,128,41,"DONE"],[89,47,128,12],[89,49,128,47],[90,0,129,14],[90,18,129,18,"responseCallback"],[90,34,129,14],[90,36,129,36],[91,0,130,16,"responseCallback"],[91,16,130,16,"responseCallback"],[91,32,130,32],[91,33,131,18],[91,38,131,22],[91,39,131,23,"status"],[91,45,130,32],[91,47,132,18],[91,52,132,22],[91,53,132,23,"timeout"],[91,60,130,32],[91,62,133,18],[91,67,133,22],[91,68,133,23,"response"],[91,76,130,32],[91,78,134,18],[91,83,134,22],[91,84,134,23,"responseURL"],[91,95,130,32],[91,97,135,18],[91,102,135,22],[91,103,135,23,"responseType"],[91,115,130,32],[91,117,136,18],[91,122,130,32],[91,123,130,16],[92,0,138,15],[93,0,139,13],[94,0,140,11],[94,11,101,8],[94,13,141,10],[94,18,101,8],[95,0,143,7],[97,0,144,6,"originalXHRSend"],[97,8,144,6,"originalXHRSend"],[97,23,144,21],[97,24,144,22,"apply"],[97,29,144,6],[97,30,144,28],[97,34,144,6],[97,36,144,34,"arguments"],[97,45,144,6],[98,0,145,5],[98,7,96,4],[100,0,146,4,"isInterceptorEnabled"],[100,6,146,4,"isInterceptorEnabled"],[100,27,146,24],[100,30,146,27],[100,34,146,4],[101,0,147,3],[101,5,32,23],[102,0,150,2,"disableInterception"],[102,4,150,2,"disableInterception"],[102,23,32,23],[102,56,150,24],[103,0,151,4],[103,10,151,8],[103,11,151,9,"isInterceptorEnabled"],[103,32,151,4],[103,34,151,31],[104,0,152,6],[105,0,153,5],[107,0,154,4,"isInterceptorEnabled"],[107,6,154,4,"isInterceptorEnabled"],[107,27,154,24],[107,30,154,27],[107,35,154,4],[108,0,155,4],[108,57,155,19,"prototype"],[108,66,155,4],[108,67,155,29,"send"],[108,71,155,4],[108,74,155,36,"originalXHRSend"],[108,89,155,4],[109,0,156,4],[109,57,156,19,"prototype"],[109,66,156,4],[109,67,156,29,"open"],[109,71,156,4],[109,74,156,36,"originalXHROpen"],[109,89,156,4],[110,0,157,4],[110,57,157,19,"prototype"],[110,66,157,4],[110,67,157,29,"setRequestHeader"],[110,83,157,4],[110,86,157,48,"originalXHRSetRequestHeader"],[110,113,157,4],[111,0,158,4,"responseCallback"],[111,6,158,4,"responseCallback"],[111,22,158,20],[111,25,158,23],[111,29,158,4],[112,0,159,4,"openCallback"],[112,6,159,4,"openCallback"],[112,18,159,16],[112,21,159,19],[112,25,159,4],[113,0,160,4,"sendCallback"],[113,6,160,4,"sendCallback"],[113,18,160,16],[113,21,160,19],[113,25,160,4],[114,0,161,4,"headerReceivedCallback"],[114,6,161,4,"headerReceivedCallback"],[114,28,161,26],[114,31,161,29],[114,35,161,4],[115,0,162,4,"requestHeaderCallback"],[115,6,162,4,"requestHeaderCallback"],[115,27,162,25],[115,30,162,28],[115,34,162,4],[116,0,163,3],[117,0,32,23],[117,3,32,0],[118,0,166,0,"module"],[118,2,166,0,"module"],[118,8,166,6],[118,9,166,7,"exports"],[118,16,166,0],[118,19,166,17,"XHRInterceptor"],[118,33,166,0]],"functionMap":{"names":["<global>","setOpenCallback","setSendCallback","setHeaderReceivedCallback","setResponseCallback","setRequestHeaderCallback","isInterceptorEnabled","enableInterception","XMLHttpRequest.prototype.open","XMLHttpRequest.prototype.setRequestHeader","XMLHttpRequest.prototype.send","addEventListener$argument_1","disableInterception"],"mappings":"AAA;ECmC;GDE;EEK;GFE;EGK;GHE;EIK;GJE;EKK;GLE;EME;GNE;EOE;oCCM;KDK;gDEI;KFK;oCGI;UCO;WDqC;KHK;GPE;EYG;GZa"}},"type":"js/module"}]}