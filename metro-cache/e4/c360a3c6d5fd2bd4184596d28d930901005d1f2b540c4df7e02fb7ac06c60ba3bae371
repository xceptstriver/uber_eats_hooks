{"dependencies":[{"name":"./conversions","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":16},"end":{"line":17,"column":40}},{"start":{"line":40,"column":32},"end":{"line":40,"column":52}},{"start":{"line":65,"column":10},"end":{"line":65,"column":44}},{"start":{"line":70,"column":12},"end":{"line":70,"column":42}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function buildGraph() {\n    var graph = {};\n    var models = Object.keys(_$$_REQUIRE(_dependencyMap[0], \"./conversions\"));\n\n    for (var len = models.length, i = 0; i < len; i++) {\n      graph[models[i]] = {\n        distance: -1,\n        parent: null\n      };\n    }\n\n    return graph;\n  }\n\n  function deriveBFS(fromModel) {\n    var graph = buildGraph();\n    var queue = [fromModel];\n    graph[fromModel].distance = 0;\n\n    while (queue.length) {\n      var current = queue.pop();\n      var adjacents = Object.keys(_$$_REQUIRE(_dependencyMap[0], \"./conversions\")[current]);\n\n      for (var len = adjacents.length, i = 0; i < len; i++) {\n        var adjacent = adjacents[i];\n        var node = graph[adjacent];\n\n        if (node.distance === -1) {\n          node.distance = graph[current].distance + 1;\n          node.parent = current;\n          queue.unshift(adjacent);\n        }\n      }\n    }\n\n    return graph;\n  }\n\n  function link(from, to) {\n    return function (args) {\n      return to(from(args));\n    };\n  }\n\n  function wrapConversion(toModel, graph) {\n    var path = [graph[toModel].parent, toModel];\n\n    var fn = _$$_REQUIRE(_dependencyMap[0], \"./conversions\")[graph[toModel].parent][toModel];\n\n    var cur = graph[toModel].parent;\n\n    while (graph[cur].parent) {\n      path.unshift(graph[cur].parent);\n      fn = link(_$$_REQUIRE(_dependencyMap[0], \"./conversions\")[graph[cur].parent][cur], fn);\n      cur = graph[cur].parent;\n    }\n\n    fn.conversion = path;\n    return fn;\n  }\n\n  module.exports = function (fromModel) {\n    var graph = deriveBFS(fromModel);\n    var conversion = {};\n    var models = Object.keys(graph);\n\n    for (var len = models.length, i = 0; i < len; i++) {\n      var toModel = models[i];\n      var node = graph[toModel];\n\n      if (node.parent === null) {\n        continue;\n      }\n\n      conversion[toModel] = wrapConversion(toModel, graph);\n    }\n\n    return conversion;\n  };\n});","lineCount":81,"map":[[2,0,14,0],[2,11,14,9,"buildGraph"],[2,21,14,0],[2,24,14,22],[3,0,15,1],[3,8,15,7,"graph"],[3,13,15,12],[3,16,15,15],[3,18,15,1],[4,0,17,1],[4,8,17,7,"models"],[4,14,17,13],[4,17,17,16,"Object"],[4,23,17,22],[4,24,17,23,"keys"],[4,28,17,16],[4,77,17,1],[6,0,19,1],[6,9,19,6],[6,13,19,10,"len"],[6,16,19,13],[6,19,19,16,"models"],[6,25,19,22],[6,26,19,23,"length"],[6,32,19,6],[6,34,19,31,"i"],[6,35,19,32],[6,38,19,35],[6,39,19,1],[6,41,19,38,"i"],[6,42,19,39],[6,45,19,42,"len"],[6,48,19,1],[6,50,19,47,"i"],[6,51,19,48],[6,53,19,1],[6,55,19,52],[7,0,20,2,"graph"],[7,6,20,2,"graph"],[7,11,20,7],[7,12,20,8,"models"],[7,18,20,14],[7,19,20,15,"i"],[7,20,20,14],[7,21,20,7],[7,22,20,2],[7,25,20,21],[8,0,23,3,"distance"],[8,8,23,3,"distance"],[8,16,23,11],[8,18,23,13],[8,19,23,14],[8,20,20,21],[9,0,24,3,"parent"],[9,8,24,3,"parent"],[9,14,24,9],[9,16,24,11],[10,0,20,21],[10,7,20,2],[11,0,26,2],[13,0,28,1],[13,11,28,8,"graph"],[13,16,28,1],[14,0,29,1],[16,0,32,0],[16,11,32,9,"deriveBFS"],[16,20,32,0],[16,21,32,19,"fromModel"],[16,30,32,0],[16,32,32,30],[17,0,33,1],[17,8,33,7,"graph"],[17,13,33,12],[17,16,33,15,"buildGraph"],[17,26,33,25],[17,28,33,1],[18,0,34,1],[18,8,34,7,"queue"],[18,13,34,12],[18,16,34,15],[18,17,34,16,"fromModel"],[18,26,34,15],[18,27,34,1],[19,0,36,1,"graph"],[19,4,36,1,"graph"],[19,9,36,6],[19,10,36,7,"fromModel"],[19,19,36,6],[19,20,36,1],[19,21,36,18,"distance"],[19,29,36,1],[19,32,36,29],[19,33,36,1],[21,0,38,1],[21,11,38,8,"queue"],[21,16,38,13],[21,17,38,14,"length"],[21,23,38,1],[21,25,38,22],[22,0,39,2],[22,10,39,8,"current"],[22,17,39,15],[22,20,39,18,"queue"],[22,25,39,23],[22,26,39,24,"pop"],[22,29,39,18],[22,31,39,2],[23,0,40,2],[23,10,40,8,"adjacents"],[23,19,40,17],[23,22,40,20,"Object"],[23,28,40,26],[23,29,40,27,"keys"],[23,33,40,20],[23,34,40,32],[23,82,40,44,"current"],[23,89,40,32],[23,90,40,20],[23,91,40,2],[25,0,42,2],[25,11,42,7],[25,15,42,11,"len"],[25,18,42,14],[25,21,42,17,"adjacents"],[25,30,42,26],[25,31,42,27,"length"],[25,37,42,7],[25,39,42,35,"i"],[25,40,42,36],[25,43,42,39],[25,44,42,2],[25,46,42,42,"i"],[25,47,42,43],[25,50,42,46,"len"],[25,53,42,2],[25,55,42,51,"i"],[25,56,42,52],[25,58,42,2],[25,60,42,56],[26,0,43,3],[26,12,43,9,"adjacent"],[26,20,43,17],[26,23,43,20,"adjacents"],[26,32,43,29],[26,33,43,30,"i"],[26,34,43,29],[26,35,43,3],[27,0,44,3],[27,12,44,9,"node"],[27,16,44,13],[27,19,44,16,"graph"],[27,24,44,21],[27,25,44,22,"adjacent"],[27,33,44,21],[27,34,44,3],[29,0,46,3],[29,12,46,7,"node"],[29,16,46,11],[29,17,46,12,"distance"],[29,25,46,7],[29,30,46,25],[29,31,46,26],[29,32,46,3],[29,34,46,29],[30,0,47,4,"node"],[30,10,47,4,"node"],[30,14,47,8],[30,15,47,9,"distance"],[30,23,47,4],[30,26,47,20,"graph"],[30,31,47,25],[30,32,47,26,"current"],[30,39,47,25],[30,40,47,20],[30,41,47,35,"distance"],[30,49,47,20],[30,52,47,46],[30,53,47,4],[31,0,48,4,"node"],[31,10,48,4,"node"],[31,14,48,8],[31,15,48,9,"parent"],[31,21,48,4],[31,24,48,18,"current"],[31,31,48,4],[32,0,49,4,"queue"],[32,10,49,4,"queue"],[32,15,49,9],[32,16,49,10,"unshift"],[32,23,49,4],[32,24,49,18,"adjacent"],[32,32,49,4],[33,0,50,4],[34,0,51,3],[35,0,52,2],[37,0,54,1],[37,11,54,8,"graph"],[37,16,54,1],[38,0,55,1],[40,0,57,0],[40,11,57,9,"link"],[40,15,57,0],[40,16,57,14,"from"],[40,20,57,0],[40,22,57,20,"to"],[40,24,57,0],[40,26,57,24],[41,0,58,1],[41,11,58,8],[41,21,58,18,"args"],[41,25,58,8],[41,27,58,24],[42,0,59,2],[42,13,59,9,"to"],[42,15,59,11],[42,16,59,12,"from"],[42,20,59,16],[42,21,59,17,"args"],[42,25,59,16],[42,26,59,11],[42,27,59,2],[43,0,60,2],[43,5,58,1],[44,0,61,1],[46,0,63,0],[46,11,63,9,"wrapConversion"],[46,25,63,0],[46,26,63,24,"toModel"],[46,33,63,0],[46,35,63,33,"graph"],[46,40,63,0],[46,42,63,40],[47,0,64,1],[47,8,64,7,"path"],[47,12,64,11],[47,15,64,14],[47,16,64,15,"graph"],[47,21,64,20],[47,22,64,21,"toModel"],[47,29,64,20],[47,30,64,15],[47,31,64,30,"parent"],[47,37,64,14],[47,39,64,38,"toModel"],[47,46,64,14],[47,47,64,1],[49,0,65,1],[49,8,65,5,"fn"],[49,10,65,7],[49,13,65,10],[49,61,65,22,"graph"],[49,66,65,27],[49,67,65,28,"toModel"],[49,74,65,27],[49,75,65,22],[49,76,65,37,"parent"],[49,82,65,10],[49,84,65,45,"toModel"],[49,91,65,10],[49,92,65,1],[51,0,67,1],[51,8,67,5,"cur"],[51,11,67,8],[51,14,67,11,"graph"],[51,19,67,16],[51,20,67,17,"toModel"],[51,27,67,16],[51,28,67,11],[51,29,67,26,"parent"],[51,35,67,1],[53,0,68,1],[53,11,68,8,"graph"],[53,16,68,13],[53,17,68,14,"cur"],[53,20,68,13],[53,21,68,8],[53,22,68,19,"parent"],[53,28,68,1],[53,30,68,27],[54,0,69,2,"path"],[54,6,69,2,"path"],[54,10,69,6],[54,11,69,7,"unshift"],[54,18,69,2],[54,19,69,15,"graph"],[54,24,69,20],[54,25,69,21,"cur"],[54,28,69,20],[54,29,69,15],[54,30,69,26,"parent"],[54,36,69,2],[55,0,70,2,"fn"],[55,6,70,2,"fn"],[55,8,70,4],[55,11,70,7,"link"],[55,15,70,11],[55,16,70,12],[55,64,70,24,"graph"],[55,69,70,29],[55,70,70,30,"cur"],[55,73,70,29],[55,74,70,24],[55,75,70,35,"parent"],[55,81,70,12],[55,83,70,43,"cur"],[55,86,70,12],[55,87,70,11],[55,89,70,49,"fn"],[55,91,70,11],[55,92,70,2],[56,0,71,2,"cur"],[56,6,71,2,"cur"],[56,9,71,5],[56,12,71,8,"graph"],[56,17,71,13],[56,18,71,14,"cur"],[56,21,71,13],[56,22,71,8],[56,23,71,19,"parent"],[56,29,71,2],[57,0,72,2],[59,0,74,1,"fn"],[59,4,74,1,"fn"],[59,6,74,3],[59,7,74,4,"conversion"],[59,17,74,1],[59,20,74,17,"path"],[59,24,74,1],[60,0,75,1],[60,11,75,8,"fn"],[60,13,75,1],[61,0,76,1],[63,0,78,0,"module"],[63,2,78,0,"module"],[63,8,78,6],[63,9,78,7,"exports"],[63,16,78,0],[63,19,78,17],[63,29,78,27,"fromModel"],[63,38,78,17],[63,40,78,38],[64,0,79,1],[64,8,79,7,"graph"],[64,13,79,12],[64,16,79,15,"deriveBFS"],[64,25,79,24],[64,26,79,25,"fromModel"],[64,35,79,24],[64,36,79,1],[65,0,80,1],[65,8,80,7,"conversion"],[65,18,80,17],[65,21,80,20],[65,23,80,1],[66,0,82,1],[66,8,82,7,"models"],[66,14,82,13],[66,17,82,16,"Object"],[66,23,82,22],[66,24,82,23,"keys"],[66,28,82,16],[66,29,82,28,"graph"],[66,34,82,16],[66,35,82,1],[68,0,83,1],[68,9,83,6],[68,13,83,10,"len"],[68,16,83,13],[68,19,83,16,"models"],[68,25,83,22],[68,26,83,23,"length"],[68,32,83,6],[68,34,83,31,"i"],[68,35,83,32],[68,38,83,35],[68,39,83,1],[68,41,83,38,"i"],[68,42,83,39],[68,45,83,42,"len"],[68,48,83,1],[68,50,83,47,"i"],[68,51,83,48],[68,53,83,1],[68,55,83,52],[69,0,84,2],[69,10,84,8,"toModel"],[69,17,84,15],[69,20,84,18,"models"],[69,26,84,24],[69,27,84,25,"i"],[69,28,84,24],[69,29,84,2],[70,0,85,2],[70,10,85,8,"node"],[70,14,85,12],[70,17,85,15,"graph"],[70,22,85,20],[70,23,85,21,"toModel"],[70,30,85,20],[70,31,85,2],[72,0,87,2],[72,10,87,6,"node"],[72,14,87,10],[72,15,87,11,"parent"],[72,21,87,6],[72,26,87,22],[72,30,87,2],[72,32,87,28],[73,0,89,3],[74,0,90,3],[76,0,92,2,"conversion"],[76,6,92,2,"conversion"],[76,16,92,12],[76,17,92,13,"toModel"],[76,24,92,12],[76,25,92,2],[76,28,92,24,"wrapConversion"],[76,42,92,38],[76,43,92,39,"toModel"],[76,50,92,38],[76,52,92,48,"graph"],[76,57,92,38],[76,58,92,2],[77,0,93,2],[79,0,95,1],[79,11,95,8,"conversion"],[79,21,95,1],[80,0,96,1],[80,3,78,0]],"functionMap":{"names":["<global>","buildGraph","deriveBFS","link","<anonymous>","wrapConversion","module.exports"],"mappings":"AAA;ACa;CDe;AEG;CFuB;AGE;QCC;EDE;CHC;AKE;CLa;iBME;CNkB"}},"type":"js/module"}]}