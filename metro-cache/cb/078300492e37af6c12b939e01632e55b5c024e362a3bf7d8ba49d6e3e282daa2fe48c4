{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":478,"column":0}},{"start":{"line":1,"column":0},"end":{"line":478,"column":0}},{"start":{"line":1,"column":0},"end":{"line":478,"column":0}},{"start":{"line":1,"column":0},"end":{"line":478,"column":0}},{"start":{"line":1,"column":0},"end":{"line":478,"column":0}},{"start":{"line":14,"column":0},"end":{"line":14,"column":36}},{"start":{"line":23,"column":0},"end":{"line":23,"column":66}},{"start":{"line":25,"column":0},"end":{"line":25,"column":66}}]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":478,"column":0}}]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":478,"column":0}}]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":478,"column":0}}]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":478,"column":0}}]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":478,"column":0}}]}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0},"end":{"line":13,"column":31}}]}},{"name":"./LogBoxLog","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0},"end":{"line":14,"column":36}}]}},{"name":"../../Core/Devtools/parseErrorStack","data":{"asyncType":null,"locs":[{"start":{"line":23,"column":0},"end":{"line":23,"column":66}}]}},{"name":"../../NativeModules/specs/NativeLogBox","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":0},"end":{"line":25,"column":66}}]}},{"name":"../../Core/ExceptionsManager","data":{"asyncType":null,"locs":[{"start":{"line":101,"column":28},"end":{"line":101,"column":67}}]}},{"name":"./parseLogBoxLog","data":{"asyncType":null,"locs":[{"start":{"line":224,"column":33},"end":{"line":224,"column":53},"identifierName":"parseLogBoxException"}],"isOptional":true}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addException = addException;\n  exports.addIgnorePatterns = addIgnorePatterns;\n  exports.addLog = addLog;\n  exports.checkWarningFilter = checkWarningFilter;\n  exports.clear = clear;\n  exports.clearErrors = clearErrors;\n  exports.clearWarnings = clearWarnings;\n  exports.dismiss = dismiss;\n  exports.getAppInfo = getAppInfo;\n  exports.isDisabled = isDisabled;\n  exports.isLogBoxErrorMessage = isLogBoxErrorMessage;\n  exports.isMessageIgnored = isMessageIgnored;\n  exports.observe = observe;\n  exports.reportLogBoxError = reportLogBoxError;\n  exports.retrySymbolicateLogNow = retrySymbolicateLogNow;\n  exports.setAppInfo = setAppInfo;\n  exports.setDisabled = setDisabled;\n  exports.setSelectedLog = setSelectedLog;\n  exports.setWarningFilter = setWarningFilter;\n  exports.symbolicateLogLazy = symbolicateLogLazy;\n  exports.symbolicateLogNow = symbolicateLogNow;\n  exports.withSubscription = withSubscription;\n\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"react\"));\n\n  var _LogBoxLog = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[7], \"./LogBoxLog\"));\n\n  var _parseErrorStack = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[8], \"../../Core/Devtools/parseErrorStack\"));\n\n  var _NativeLogBox = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[9], \"../../NativeModules/specs/NativeLogBox\"));\n\n  var _jsxFileName = \"/home/moglix/uber_eats_hooks/node_modules/react-native/Libraries/LogBox/Data/LogBoxData.js\";\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  'use strict';\n\n  var observers = new Set();\n  var ignorePatterns = new Set();\n  var appInfo = null;\n  var logs = new Set();\n  var updateTimeout = null;\n  var _isDisabled = false;\n\n  var _selectedIndex = -1;\n\n  var warningFilter = function warningFilter(format) {\n    return {\n      finalFormat: format,\n      forceDialogImmediately: false,\n      suppressDialog_LEGACY: true,\n      suppressCompletely: false,\n      monitorEvent: 'unknown',\n      monitorListVersion: 0,\n      monitorSampleRate: 1\n    };\n  };\n\n  var LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';\n\n  function getNextState() {\n    return {\n      logs: logs,\n      isDisabled: _isDisabled,\n      selectedLogIndex: _selectedIndex\n    };\n  }\n\n  function reportLogBoxError(error, componentStack) {\n    var ExceptionsManager = _$$_REQUIRE(_dependencyMap[10], \"../../Core/ExceptionsManager\");\n\n    error.forceRedbox = true;\n    error.message = LOGBOX_ERROR_MESSAGE + \"\\n\\n\" + error.message;\n\n    if (componentStack != null) {\n      error.componentStack = componentStack;\n    }\n\n    ExceptionsManager.handleException(error, true);\n  }\n\n  function isLogBoxErrorMessage(message) {\n    return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n  }\n\n  function isMessageIgnored(message) {\n    for (var _iterator = _createForOfIteratorHelperLoose(ignorePatterns), _step; !(_step = _iterator()).done;) {\n      var pattern = _step.value;\n\n      if (pattern instanceof RegExp && pattern.test(message) || typeof pattern === 'string' && message.includes(pattern)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function handleUpdate() {\n    if (updateTimeout == null) {\n      updateTimeout = setImmediate(function () {\n        updateTimeout = null;\n        var nextState = getNextState();\n        observers.forEach(function (_ref) {\n          var observer = _ref.observer;\n          return observer(nextState);\n        });\n      });\n    }\n  }\n\n  function appendNewLog(newLog) {\n    if (isMessageIgnored(newLog.message.content)) {\n      return;\n    }\n\n    var lastLog = Array.from(logs).pop();\n\n    if (lastLog && lastLog.category === newLog.category) {\n      lastLog.incrementCount();\n      handleUpdate();\n      return;\n    }\n\n    if (newLog.level === 'fatal') {\n      var OPTIMISTIC_WAIT_TIME = 1000;\n\n      var _addPendingLog = function addPendingLog() {\n        logs.add(newLog);\n\n        if (_selectedIndex < 0) {\n          setSelectedLog(logs.size - 1);\n        } else {\n          handleUpdate();\n        }\n\n        _addPendingLog = null;\n      };\n\n      var optimisticTimeout = setTimeout(function () {\n        if (_addPendingLog) {\n          _addPendingLog();\n        }\n      }, OPTIMISTIC_WAIT_TIME);\n      newLog.symbolicate(function (status) {\n        if (_addPendingLog && status !== 'PENDING') {\n          _addPendingLog();\n\n          clearTimeout(optimisticTimeout);\n        } else if (status !== 'PENDING') {\n          handleUpdate();\n        }\n      });\n    } else if (newLog.level === 'syntax') {\n      logs.add(newLog);\n      setSelectedLog(logs.size - 1);\n    } else {\n      logs.add(newLog);\n      handleUpdate();\n    }\n  }\n\n  function addLog(log) {\n    var errorForStackTrace = new Error();\n    setImmediate(function () {\n      try {\n        var stack = (0, _parseErrorStack.default)(errorForStackTrace == null ? void 0 : errorForStackTrace.stack);\n        appendNewLog(new _LogBoxLog.default({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack: stack,\n          category: log.category,\n          componentStack: log.componentStack\n        }));\n      } catch (error) {\n        reportLogBoxError(error);\n      }\n    });\n  }\n\n  function addException(error) {\n    setImmediate(function () {\n      try {\n        appendNewLog(new _LogBoxLog.default((0, _$$_REQUIRE(_dependencyMap[11], \"./parseLogBoxLog\").parseLogBoxException)(error)));\n      } catch (loggingError) {\n        reportLogBoxError(loggingError);\n      }\n    });\n  }\n\n  function symbolicateLogNow(log) {\n    log.symbolicate(function () {\n      handleUpdate();\n    });\n  }\n\n  function retrySymbolicateLogNow(log) {\n    log.retrySymbolicate(function () {\n      handleUpdate();\n    });\n  }\n\n  function symbolicateLogLazy(log) {\n    log.symbolicate();\n  }\n\n  function clear() {\n    if (logs.size > 0) {\n      logs = new Set();\n      setSelectedLog(-1);\n    }\n  }\n\n  function setSelectedLog(proposedNewIndex) {\n    var oldIndex = _selectedIndex;\n    var newIndex = proposedNewIndex;\n    var logArray = Array.from(logs);\n    var index = logArray.length - 1;\n\n    while (index >= 0) {\n      if (logArray[index].level === 'syntax') {\n        newIndex = index;\n        break;\n      }\n\n      index -= 1;\n    }\n\n    _selectedIndex = newIndex;\n    handleUpdate();\n\n    if (_NativeLogBox.default) {\n      setTimeout(function () {\n        if (oldIndex < 0 && newIndex >= 0) {\n          _NativeLogBox.default.show();\n        } else if (oldIndex >= 0 && newIndex < 0) {\n          _NativeLogBox.default.hide();\n        }\n      }, 0);\n    }\n  }\n\n  function clearWarnings() {\n    var newLogs = Array.from(logs).filter(function (log) {\n      return log.level !== 'warn';\n    });\n\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n      handleUpdate();\n    }\n  }\n\n  function clearErrors() {\n    var newLogs = Array.from(logs).filter(function (log) {\n      return log.level !== 'error' && log.level !== 'fatal';\n    });\n\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n    }\n  }\n\n  function dismiss(log) {\n    if (logs.has(log)) {\n      logs.delete(log);\n      handleUpdate();\n    }\n  }\n\n  function setWarningFilter(filter) {\n    warningFilter = filter;\n  }\n\n  function setAppInfo(info) {\n    appInfo = info;\n  }\n\n  function getAppInfo() {\n    return appInfo != null ? appInfo() : null;\n  }\n\n  function checkWarningFilter(format) {\n    return warningFilter(format);\n  }\n\n  function addIgnorePatterns(patterns) {\n    var newPatterns = patterns.filter(function (pattern) {\n      if (pattern instanceof RegExp) {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(ignorePatterns.entries()), _step2; !(_step2 = _iterator2()).done;) {\n          var existingPattern = _step2.value;\n\n          if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      return !ignorePatterns.has(pattern);\n    });\n\n    if (newPatterns.length === 0) {\n      return;\n    }\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose(newPatterns), _step3; !(_step3 = _iterator3()).done;) {\n      var pattern = _step3.value;\n      ignorePatterns.add(pattern);\n      logs = new Set(Array.from(logs).filter(function (log) {\n        return !isMessageIgnored(log.message.content);\n      }));\n    }\n\n    handleUpdate();\n  }\n\n  function setDisabled(value) {\n    if (value === _isDisabled) {\n      return;\n    }\n\n    _isDisabled = value;\n    handleUpdate();\n  }\n\n  function isDisabled() {\n    return _isDisabled;\n  }\n\n  function observe(observer) {\n    var subscription = {\n      observer: observer\n    };\n    observers.add(subscription);\n    observer(getNextState());\n    return {\n      unsubscribe: function unsubscribe() {\n        observers.delete(subscription);\n      }\n    };\n  }\n\n  function withSubscription(WrappedComponent) {\n    var LogBoxStateSubscription = function (_React$Component) {\n      (0, _inherits2.default)(LogBoxStateSubscription, _React$Component);\n\n      var _super = _createSuper(LogBoxStateSubscription);\n\n      function LogBoxStateSubscription() {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, LogBoxStateSubscription);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _super.call.apply(_super, [this].concat(args));\n        _this.state = {\n          logs: new Set(),\n          isDisabled: false,\n          hasError: false,\n          selectedLogIndex: -1\n        };\n\n        _this._handleDismiss = function () {\n          var _this$state = _this.state,\n              selectedLogIndex = _this$state.selectedLogIndex,\n              stateLogs = _this$state.logs;\n          var logsArray = Array.from(stateLogs);\n\n          if (selectedLogIndex != null) {\n            if (logsArray.length - 1 <= 0) {\n              setSelectedLog(-1);\n            } else if (selectedLogIndex >= logsArray.length - 1) {\n              setSelectedLog(selectedLogIndex - 1);\n            }\n\n            dismiss(logsArray[selectedLogIndex]);\n          }\n        };\n\n        _this._handleMinimize = function () {\n          setSelectedLog(-1);\n        };\n\n        _this._handleSetSelectedLog = function (index) {\n          setSelectedLog(index);\n        };\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(LogBoxStateSubscription, [{\n        key: \"componentDidCatch\",\n        value: function componentDidCatch(err, errorInfo) {\n          reportLogBoxError(err, errorInfo.componentStack);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (this.state.hasError) {\n            return null;\n          }\n\n          return React.createElement(WrappedComponent, {\n            logs: Array.from(this.state.logs),\n            isDisabled: this.state.isDisabled,\n            selectedLogIndex: this.state.selectedLogIndex,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 9\n            }\n          });\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          this._subscription = observe(function (data) {\n            _this2.setState(data);\n          });\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this._subscription != null) {\n            this._subscription.unsubscribe();\n          }\n        }\n      }], [{\n        key: \"getDerivedStateFromError\",\n        value: function getDerivedStateFromError() {\n          return {\n            hasError: true\n          };\n        }\n      }]);\n      return LogBoxStateSubscription;\n    }(React.Component);\n\n    return LogBoxStateSubscription;\n  }\n});","lineCount":477,"map":[[38,0,13,0],[40,0,14,0],[42,0,23,0],[44,0,25,0],[62,0,11,1],[62,14,11,0],[64,0,66,0],[64,6,66,6,"observers"],[64,15,66,47],[64,18,66,50],[64,22,66,54,"Set"],[64,25,66,50],[64,27,66,0],[65,0,67,0],[65,6,67,6,"ignorePatterns"],[65,20,67,40],[65,23,67,43],[65,27,67,47,"Set"],[65,30,67,43],[65,32,67,0],[66,0,68,0],[66,6,68,4,"appInfo"],[66,13,68,27],[66,16,68,30],[66,20,68,0],[67,0,69,0],[67,6,69,4,"logs"],[67,10,69,20],[67,13,69,23],[67,17,69,27,"Set"],[67,20,69,23],[67,22,69,0],[68,0,70,0],[68,6,70,4,"updateTimeout"],[68,19,70,17],[68,22,70,20],[68,26,70,0],[69,0,71,0],[69,6,71,4,"_isDisabled"],[69,17,71,15],[69,20,71,18],[69,25,71,0],[71,0,72,0],[71,6,72,4,"_selectedIndex"],[71,20,72,18],[71,23,72,21],[71,24,72,22],[71,25,72,0],[73,0,74,0],[73,6,74,4,"warningFilter"],[73,19,74,32],[73,22,74,35],[73,45,74,44,"format"],[73,51,74,35],[73,53,74,52],[74,0,75,2],[74,11,75,9],[75,0,76,4,"finalFormat"],[75,6,76,4,"finalFormat"],[75,17,76,15],[75,19,76,17,"format"],[75,25,75,9],[76,0,77,4,"forceDialogImmediately"],[76,6,77,4,"forceDialogImmediately"],[76,28,77,26],[76,30,77,28],[76,35,75,9],[77,0,78,4,"suppressDialog_LEGACY"],[77,6,78,4,"suppressDialog_LEGACY"],[77,27,78,25],[77,29,78,27],[77,33,75,9],[78,0,79,4,"suppressCompletely"],[78,6,79,4,"suppressCompletely"],[78,24,79,22],[78,26,79,24],[78,31,75,9],[79,0,80,4,"monitorEvent"],[79,6,80,4,"monitorEvent"],[79,18,80,16],[79,20,80,18],[79,29,75,9],[80,0,81,4,"monitorListVersion"],[80,6,81,4,"monitorListVersion"],[80,24,81,22],[80,26,81,24],[80,27,75,9],[81,0,82,4,"monitorSampleRate"],[81,6,82,4,"monitorSampleRate"],[81,23,82,21],[81,25,82,23],[82,0,75,9],[82,5,75,2],[83,0,84,1],[83,3,74,0],[85,0,86,0],[85,6,86,6,"LOGBOX_ERROR_MESSAGE"],[85,26,86,26],[85,29,87,2],[85,101,86,0],[87,0,89,0],[87,11,89,9,"getNextState"],[87,23,89,0],[87,26,89,24],[88,0,90,2],[88,11,90,9],[89,0,91,4,"logs"],[89,6,91,4,"logs"],[89,10,91,8],[89,12,91,4,"logs"],[89,16,90,9],[90,0,92,4,"isDisabled"],[90,6,92,4,"isDisabled"],[90,16,92,14],[90,18,92,16,"_isDisabled"],[90,29,90,9],[91,0,93,4,"selectedLogIndex"],[91,6,93,4,"selectedLogIndex"],[91,22,93,20],[91,24,93,22,"_selectedIndex"],[92,0,90,9],[92,5,90,2],[93,0,95,1],[95,0,97,7],[95,11,97,16,"reportLogBoxError"],[95,28,97,7],[95,29,98,2,"error"],[95,34,97,7],[95,36,99,2,"componentStack"],[95,50,97,7],[95,52,100,8],[96,0,101,2],[96,8,101,8,"ExceptionsManager"],[96,25,101,25],[96,28,101,28,"require"],[96,39,101,35],[96,91,101,2],[98,0,103,2,"error"],[98,4,103,2,"error"],[98,9,103,7],[98,10,103,8,"forceRedbox"],[98,21,103,2],[98,24,103,22],[98,28,103,2],[99,0,104,2,"error"],[99,4,104,2,"error"],[99,9,104,7],[99,10,104,8,"message"],[99,17,104,2],[99,20,104,21,"LOGBOX_ERROR_MESSAGE"],[99,40,104,2],[99,52,104,48,"error"],[99,57,104,53],[99,58,104,54,"message"],[99,65,104,2],[101,0,105,2],[101,8,105,6,"componentStack"],[101,22,105,20],[101,26,105,24],[101,30,105,2],[101,32,105,30],[102,0,106,4,"error"],[102,6,106,4,"error"],[102,11,106,9],[102,12,106,10,"componentStack"],[102,26,106,4],[102,29,106,27,"componentStack"],[102,43,106,4],[103,0,107,3],[105,0,108,2,"ExceptionsManager"],[105,4,108,2,"ExceptionsManager"],[105,21,108,19],[105,22,108,20,"handleException"],[105,37,108,2],[105,38,108,36,"error"],[105,43,108,2],[105,45,108,57],[105,49,108,2],[106,0,109,1],[108,0,111,7],[108,11,111,16,"isLogBoxErrorMessage"],[108,31,111,7],[108,32,111,37,"message"],[108,39,111,7],[108,41,111,63],[109,0,112,2],[109,11,112,9],[109,18,112,16,"message"],[109,25,112,9],[109,30,112,28],[109,38,112,9],[109,42,112,40,"message"],[109,49,112,47],[109,50,112,48,"includes"],[109,58,112,40],[109,59,112,57,"LOGBOX_ERROR_MESSAGE"],[109,79,112,40],[109,80,112,2],[110,0,113,1],[112,0,115,7],[112,11,115,16,"isMessageIgnored"],[112,27,115,7],[112,28,115,33,"message"],[112,35,115,7],[112,37,115,59],[113,0,116,2],[113,57,116,24,"ignorePatterns"],[113,71,116,2],[113,111,116,40],[114,0,116,40],[114,10,116,13,"pattern"],[114,17,116,40],[116,0,117,4],[116,10,118,7,"pattern"],[116,17,118,14],[116,29,118,26,"RegExp"],[116,35,118,7],[116,39,118,36,"pattern"],[116,46,118,43],[116,47,118,44,"test"],[116,51,118,36],[116,52,118,49,"message"],[116,59,118,36],[116,60,118,6],[116,64,119,7],[116,71,119,14,"pattern"],[116,78,119,7],[116,83,119,26],[116,91,119,7],[116,95,119,38,"message"],[116,102,119,45],[116,103,119,46,"includes"],[116,111,119,38],[116,112,119,55,"pattern"],[116,119,119,38],[116,120,117,4],[116,122,120,6],[117,0,121,6],[117,15,121,13],[117,19,121,6],[118,0,122,5],[119,0,123,3],[121,0,124,2],[121,11,124,9],[121,16,124,2],[122,0,125,1],[124,0,127,0],[124,11,127,9,"handleUpdate"],[124,23,127,0],[124,26,127,30],[125,0,128,2],[125,8,128,6,"updateTimeout"],[125,21,128,19],[125,25,128,23],[125,29,128,2],[125,31,128,29],[126,0,129,4,"updateTimeout"],[126,6,129,4,"updateTimeout"],[126,19,129,17],[126,22,129,20,"setImmediate"],[126,34,129,32],[126,35,129,33],[126,47,129,39],[127,0,130,6,"updateTimeout"],[127,8,130,6,"updateTimeout"],[127,21,130,19],[127,24,130,22],[127,28,130,6],[128,0,131,6],[128,12,131,12,"nextState"],[128,21,131,21],[128,24,131,24,"getNextState"],[128,36,131,36],[128,38,131,6],[129,0,132,6,"observers"],[129,8,132,6,"observers"],[129,17,132,15],[129,18,132,16,"forEach"],[129,25,132,6],[129,26,132,24],[130,0,132,24],[130,14,132,26,"observer"],[130,22,132,24],[130,30,132,26,"observer"],[130,38,132,24],[131,0,132,24],[131,17,132,40,"observer"],[131,25,132,48],[131,26,132,49,"nextState"],[131,35,132,48],[131,36,132,24],[132,0,132,24],[132,9,132,6],[133,0,133,5],[133,7,129,32],[133,8,129,4],[134,0,134,3],[135,0,135,1],[137,0,137,0],[137,11,137,9,"appendNewLog"],[137,23,137,0],[137,24,137,22,"newLog"],[137,30,137,0],[137,32,137,30],[138,0,140,2],[138,8,140,6,"isMessageIgnored"],[138,24,140,22],[138,25,140,23,"newLog"],[138,31,140,29],[138,32,140,30,"message"],[138,39,140,23],[138,40,140,38,"content"],[138,47,140,22],[138,48,140,2],[138,50,140,48],[139,0,141,4],[140,0,142,3],[142,0,147,2],[142,8,147,8,"lastLog"],[142,15,147,15],[142,18,147,18,"Array"],[142,23,147,23],[142,24,147,24,"from"],[142,28,147,18],[142,29,147,29,"logs"],[142,33,147,18],[142,35,147,35,"pop"],[142,38,147,18],[142,40,147,2],[144,0,148,2],[144,8,148,6,"lastLog"],[144,15,148,13],[144,19,148,17,"lastLog"],[144,26,148,24],[144,27,148,25,"category"],[144,35,148,17],[144,40,148,38,"newLog"],[144,46,148,44],[144,47,148,45,"category"],[144,55,148,2],[144,57,148,55],[145,0,149,4,"lastLog"],[145,6,149,4,"lastLog"],[145,13,149,11],[145,14,149,12,"incrementCount"],[145,28,149,4],[146,0,150,4,"handleUpdate"],[146,6,150,4,"handleUpdate"],[146,18,150,16],[147,0,151,4],[148,0,152,3],[150,0,154,2],[150,8,154,6,"newLog"],[150,14,154,12],[150,15,154,13,"level"],[150,20,154,6],[150,25,154,23],[150,32,154,2],[150,34,154,32],[151,0,158,4],[151,10,158,10,"OPTIMISTIC_WAIT_TIME"],[151,30,158,30],[151,33,158,33],[151,37,158,4],[153,0,160,4],[153,10,160,8,"addPendingLog"],[153,24,160,21],[153,27,160,24],[153,52,160,30],[154,0,161,6,"logs"],[154,8,161,6,"logs"],[154,12,161,10],[154,13,161,11,"add"],[154,16,161,6],[154,17,161,15,"newLog"],[154,23,161,6],[156,0,162,6],[156,12,162,10,"_selectedIndex"],[156,26,162,24],[156,29,162,27],[156,30,162,6],[156,32,162,30],[157,0,163,8,"setSelectedLog"],[157,10,163,8,"setSelectedLog"],[157,24,163,22],[157,25,163,23,"logs"],[157,29,163,27],[157,30,163,28,"size"],[157,34,163,23],[157,37,163,35],[157,38,163,22],[157,39,163,8],[158,0,164,7],[158,9,162,6],[158,15,164,13],[159,0,165,8,"handleUpdate"],[159,10,165,8,"handleUpdate"],[159,22,165,20],[160,0,166,7],[162,0,167,6,"addPendingLog"],[162,8,167,6,"addPendingLog"],[162,22,167,19],[162,25,167,22],[162,29,167,6],[163,0,168,5],[163,7,160,4],[165,0,170,4],[165,10,170,10,"optimisticTimeout"],[165,27,170,27],[165,30,170,30,"setTimeout"],[165,40,170,40],[165,41,170,41],[165,53,170,47],[166,0,171,6],[166,12,171,10,"addPendingLog"],[166,26,171,6],[166,28,171,25],[167,0,172,8,"addPendingLog"],[167,10,172,8,"addPendingLog"],[167,24,172,21],[168,0,173,7],[169,0,174,5],[169,7,170,40],[169,9,174,7,"OPTIMISTIC_WAIT_TIME"],[169,29,170,40],[169,30,170,4],[170,0,176,4,"newLog"],[170,6,176,4,"newLog"],[170,12,176,10],[170,13,176,11,"symbolicate"],[170,24,176,4],[170,25,176,23],[170,35,176,23,"status"],[170,41,176,29],[170,43,176,33],[171,0,177,6],[171,12,177,10,"addPendingLog"],[171,26,177,23],[171,30,177,27,"status"],[171,36,177,33],[171,41,177,38],[171,50,177,6],[171,52,177,49],[172,0,178,8,"addPendingLog"],[172,10,178,8,"addPendingLog"],[172,24,178,21],[174,0,179,8,"clearTimeout"],[174,10,179,8,"clearTimeout"],[174,22,179,20],[174,23,179,21,"optimisticTimeout"],[174,40,179,20],[174,41,179,8],[175,0,180,7],[175,9,177,6],[175,15,180,13],[175,19,180,17,"status"],[175,25,180,23],[175,30,180,28],[175,39,180,13],[175,41,180,39],[176,0,182,8,"handleUpdate"],[176,10,182,8,"handleUpdate"],[176,22,182,20],[177,0,183,7],[178,0,184,5],[178,7,176,4],[179,0,185,3],[179,5,154,2],[179,11,185,9],[179,15,185,13,"newLog"],[179,21,185,19],[179,22,185,20,"level"],[179,27,185,13],[179,32,185,30],[179,40,185,9],[179,42,185,40],[180,0,186,4,"logs"],[180,6,186,4,"logs"],[180,10,186,8],[180,11,186,9,"add"],[180,14,186,4],[180,15,186,13,"newLog"],[180,21,186,4],[181,0,187,4,"setSelectedLog"],[181,6,187,4,"setSelectedLog"],[181,20,187,18],[181,21,187,19,"logs"],[181,25,187,23],[181,26,187,24,"size"],[181,30,187,19],[181,33,187,31],[181,34,187,18],[181,35,187,4],[182,0,188,3],[182,5,185,9],[182,11,188,9],[183,0,189,4,"logs"],[183,6,189,4,"logs"],[183,10,189,8],[183,11,189,9,"add"],[183,14,189,4],[183,15,189,13,"newLog"],[183,21,189,4],[184,0,190,4,"handleUpdate"],[184,6,190,4,"handleUpdate"],[184,18,190,16],[185,0,191,3],[186,0,192,1],[188,0,194,7],[188,11,194,16,"addLog"],[188,17,194,7],[188,18,194,23,"log"],[188,21,194,7],[188,23,194,43],[189,0,195,2],[189,8,195,8,"errorForStackTrace"],[189,26,195,26],[189,29,195,29],[189,33,195,33,"Error"],[189,38,195,29],[189,40,195,2],[190,0,199,2,"setImmediate"],[190,4,199,2,"setImmediate"],[190,16,199,14],[190,17,199,15],[190,29,199,21],[191,0,200,4],[191,10,200,8],[192,0,201,6],[192,12,201,12,"stack"],[192,17,201,17],[192,20,201,20],[192,50,201,36,"errorForStackTrace"],[192,68,201,20],[192,88,201,36,"errorForStackTrace"],[192,106,201,54],[192,107,201,56,"stack"],[192,112,201,20],[192,113,201,6],[193,0,203,6,"appendNewLog"],[193,8,203,6,"appendNewLog"],[193,20,203,18],[193,21,204,8],[193,25,204,12,"LogBoxLog"],[193,43,204,8],[193,44,204,22],[194,0,205,10,"level"],[194,10,205,10,"level"],[194,15,205,15],[194,17,205,17,"log"],[194,20,205,20],[194,21,205,21,"level"],[194,26,204,22],[195,0,206,10,"message"],[195,10,206,10,"message"],[195,17,206,17],[195,19,206,19,"log"],[195,22,206,22],[195,23,206,23,"message"],[195,30,204,22],[196,0,207,10,"isComponentError"],[196,10,207,10,"isComponentError"],[196,26,207,26],[196,28,207,28],[196,33,204,22],[197,0,208,10,"stack"],[197,10,208,10,"stack"],[197,15,208,15],[197,17,208,10,"stack"],[197,22,204,22],[198,0,209,10,"category"],[198,10,209,10,"category"],[198,18,209,18],[198,20,209,20,"log"],[198,23,209,23],[198,24,209,24,"category"],[198,32,204,22],[199,0,210,10,"componentStack"],[199,10,210,10,"componentStack"],[199,24,210,24],[199,26,210,26,"log"],[199,29,210,29],[199,30,210,30,"componentStack"],[200,0,204,22],[200,9,204,8],[200,10,203,18],[200,11,203,6],[201,0,213,5],[201,7,200,4],[201,8,213,6],[201,15,213,13,"error"],[201,20,213,6],[201,22,213,20],[202,0,214,6,"reportLogBoxError"],[202,8,214,6,"reportLogBoxError"],[202,25,214,23],[202,26,214,24,"error"],[202,31,214,23],[202,32,214,6],[203,0,215,5],[204,0,216,3],[204,5,199,14],[204,6,199,2],[205,0,217,1],[207,0,219,7],[207,11,219,16,"addException"],[207,23,219,7],[207,24,219,29,"error"],[207,29,219,7],[207,31,219,65],[208,0,222,2,"setImmediate"],[208,4,222,2,"setImmediate"],[208,16,222,14],[208,17,222,15],[208,29,222,21],[209,0,223,4],[209,10,223,8],[210,0,224,6,"appendNewLog"],[210,8,224,6,"appendNewLog"],[210,20,224,18],[210,21,224,19],[210,25,224,23,"LogBoxLog"],[210,43,224,19],[210,44,224,33],[210,122,224,54,"error"],[210,127,224,33],[210,128,224,19],[210,129,224,18],[210,130,224,6],[211,0,225,5],[211,7,223,4],[211,8,225,6],[211,15,225,13,"loggingError"],[211,27,225,6],[211,29,225,27],[212,0,226,6,"reportLogBoxError"],[212,8,226,6,"reportLogBoxError"],[212,25,226,23],[212,26,226,24,"loggingError"],[212,38,226,23],[212,39,226,6],[213,0,227,5],[214,0,228,3],[214,5,222,14],[214,6,222,2],[215,0,229,1],[217,0,231,7],[217,11,231,16,"symbolicateLogNow"],[217,28,231,7],[217,29,231,34,"log"],[217,32,231,7],[217,34,231,50],[218,0,232,2,"log"],[218,4,232,2,"log"],[218,7,232,5],[218,8,232,6,"symbolicate"],[218,19,232,2],[218,20,232,18],[218,32,232,24],[219,0,233,4,"handleUpdate"],[219,6,233,4,"handleUpdate"],[219,18,233,16],[220,0,234,3],[220,5,232,2],[221,0,235,1],[223,0,237,7],[223,11,237,16,"retrySymbolicateLogNow"],[223,33,237,7],[223,34,237,39,"log"],[223,37,237,7],[223,39,237,55],[224,0,238,2,"log"],[224,4,238,2,"log"],[224,7,238,5],[224,8,238,6,"retrySymbolicate"],[224,24,238,2],[224,25,238,23],[224,37,238,29],[225,0,239,4,"handleUpdate"],[225,6,239,4,"handleUpdate"],[225,18,239,16],[226,0,240,3],[226,5,238,2],[227,0,241,1],[229,0,243,7],[229,11,243,16,"symbolicateLogLazy"],[229,29,243,7],[229,30,243,35,"log"],[229,33,243,7],[229,35,243,51],[230,0,244,2,"log"],[230,4,244,2,"log"],[230,7,244,5],[230,8,244,6,"symbolicate"],[230,19,244,2],[231,0,245,1],[233,0,247,7],[233,11,247,16,"clear"],[233,16,247,7],[233,19,247,30],[234,0,248,2],[234,8,248,6,"logs"],[234,12,248,10],[234,13,248,11,"size"],[234,17,248,6],[234,20,248,18],[234,21,248,2],[234,23,248,21],[235,0,249,4,"logs"],[235,6,249,4,"logs"],[235,10,249,8],[235,13,249,11],[235,17,249,15,"Set"],[235,20,249,11],[235,22,249,4],[236,0,250,4,"setSelectedLog"],[236,6,250,4,"setSelectedLog"],[236,20,250,18],[236,21,250,19],[236,22,250,20],[236,23,250,18],[236,24,250,4],[237,0,251,3],[238,0,252,1],[240,0,254,7],[240,11,254,16,"setSelectedLog"],[240,25,254,7],[240,26,254,31,"proposedNewIndex"],[240,42,254,7],[240,44,254,63],[241,0,255,2],[241,8,255,8,"oldIndex"],[241,16,255,16],[241,19,255,19,"_selectedIndex"],[241,33,255,2],[242,0,256,2],[242,8,256,6,"newIndex"],[242,16,256,14],[242,19,256,17,"proposedNewIndex"],[242,35,256,2],[243,0,258,2],[243,8,258,8,"logArray"],[243,16,258,16],[243,19,258,19,"Array"],[243,24,258,24],[243,25,258,25,"from"],[243,29,258,19],[243,30,258,30,"logs"],[243,34,258,19],[243,35,258,2],[244,0,259,2],[244,8,259,6,"index"],[244,13,259,11],[244,16,259,14,"logArray"],[244,24,259,22],[244,25,259,23,"length"],[244,31,259,14],[244,34,259,32],[244,35,259,2],[246,0,260,2],[246,11,260,9,"index"],[246,16,260,14],[246,20,260,18],[246,21,260,2],[246,23,260,21],[247,0,262,4],[247,10,262,8,"logArray"],[247,18,262,16],[247,19,262,17,"index"],[247,24,262,16],[247,25,262,8],[247,26,262,24,"level"],[247,31,262,8],[247,36,262,34],[247,44,262,4],[247,46,262,44],[248,0,263,6,"newIndex"],[248,8,263,6,"newIndex"],[248,16,263,14],[248,19,263,17,"index"],[248,24,263,6],[249,0,264,6],[250,0,265,5],[252,0,266,4,"index"],[252,6,266,4,"index"],[252,11,266,9],[252,15,266,13],[252,16,266,4],[253,0,267,3],[255,0,268,2,"_selectedIndex"],[255,4,268,2,"_selectedIndex"],[255,18,268,16],[255,21,268,19,"newIndex"],[255,29,268,2],[256,0,269,2,"handleUpdate"],[256,4,269,2,"handleUpdate"],[256,16,269,14],[258,0,270,2],[258,8,270,6,"NativeLogBox"],[258,29,270,2],[258,31,270,20],[259,0,271,4,"setTimeout"],[259,6,271,4,"setTimeout"],[259,16,271,14],[259,17,271,15],[259,29,271,21],[260,0,272,6],[260,12,272,10,"oldIndex"],[260,20,272,18],[260,23,272,21],[260,24,272,10],[260,28,272,26,"newIndex"],[260,36,272,34],[260,40,272,38],[260,41,272,6],[260,43,272,41],[261,0,273,8,"NativeLogBox"],[261,32,273,21,"show"],[261,36,273,8],[262,0,274,7],[262,9,272,6],[262,15,274,13],[262,19,274,17,"oldIndex"],[262,27,274,25],[262,31,274,29],[262,32,274,17],[262,36,274,34,"newIndex"],[262,44,274,42],[262,47,274,45],[262,48,274,13],[262,50,274,48],[263,0,275,8,"NativeLogBox"],[263,32,275,21,"hide"],[263,36,275,8],[264,0,276,7],[265,0,277,5],[265,7,271,14],[265,9,277,7],[265,10,271,14],[265,11,271,4],[266,0,278,3],[267,0,279,1],[269,0,281,7],[269,11,281,16,"clearWarnings"],[269,24,281,7],[269,27,281,38],[270,0,282,2],[270,8,282,8,"newLogs"],[270,15,282,15],[270,18,282,18,"Array"],[270,23,282,23],[270,24,282,24,"from"],[270,28,282,18],[270,29,282,29,"logs"],[270,33,282,18],[270,35,282,35,"filter"],[270,41,282,18],[270,42,282,42],[270,52,282,42,"log"],[270,55,282,45],[271,0,282,45],[271,13,282,49,"log"],[271,16,282,52],[271,17,282,53,"level"],[271,22,282,49],[271,27,282,63],[271,33,282,45],[272,0,282,45],[272,5,282,18],[272,6,282,2],[274,0,283,2],[274,8,283,6,"newLogs"],[274,15,283,13],[274,16,283,14,"length"],[274,22,283,6],[274,27,283,25,"logs"],[274,31,283,29],[274,32,283,30,"size"],[274,36,283,2],[274,38,283,36],[275,0,284,4,"logs"],[275,6,284,4,"logs"],[275,10,284,8],[275,13,284,11],[275,17,284,15,"Set"],[275,20,284,11],[275,21,284,19,"newLogs"],[275,28,284,11],[275,29,284,4],[276,0,285,4,"setSelectedLog"],[276,6,285,4,"setSelectedLog"],[276,20,285,18],[276,21,285,19],[276,22,285,20],[276,23,285,18],[276,24,285,4],[277,0,286,4,"handleUpdate"],[277,6,286,4,"handleUpdate"],[277,18,286,16],[278,0,287,3],[279,0,288,1],[281,0,290,7],[281,11,290,16,"clearErrors"],[281,22,290,7],[281,25,290,36],[282,0,291,2],[282,8,291,8,"newLogs"],[282,15,291,15],[282,18,291,18,"Array"],[282,23,291,23],[282,24,291,24,"from"],[282,28,291,18],[282,29,291,29,"logs"],[282,33,291,18],[282,35,291,35,"filter"],[282,41,291,18],[282,42,292,4],[282,52,292,4,"log"],[282,55,292,7],[283,0,292,7],[283,13,292,11,"log"],[283,16,292,14],[283,17,292,15,"level"],[283,22,292,11],[283,27,292,25],[283,34,292,11],[283,38,292,36,"log"],[283,41,292,39],[283,42,292,40,"level"],[283,47,292,36],[283,52,292,50],[283,59,292,7],[284,0,292,7],[284,5,291,18],[284,6,291,2],[286,0,294,2],[286,8,294,6,"newLogs"],[286,15,294,13],[286,16,294,14,"length"],[286,22,294,6],[286,27,294,25,"logs"],[286,31,294,29],[286,32,294,30,"size"],[286,36,294,2],[286,38,294,36],[287,0,295,4,"logs"],[287,6,295,4,"logs"],[287,10,295,8],[287,13,295,11],[287,17,295,15,"Set"],[287,20,295,11],[287,21,295,19,"newLogs"],[287,28,295,11],[287,29,295,4],[288,0,296,4,"setSelectedLog"],[288,6,296,4,"setSelectedLog"],[288,20,296,18],[288,21,296,19],[288,22,296,20],[288,23,296,18],[288,24,296,4],[289,0,297,3],[290,0,298,1],[292,0,300,7],[292,11,300,16,"dismiss"],[292,18,300,7],[292,19,300,24,"log"],[292,22,300,7],[292,24,300,46],[293,0,301,2],[293,8,301,6,"logs"],[293,12,301,10],[293,13,301,11,"has"],[293,16,301,6],[293,17,301,15,"log"],[293,20,301,6],[293,21,301,2],[293,23,301,21],[294,0,302,4,"logs"],[294,6,302,4,"logs"],[294,10,302,8],[294,11,302,9,"delete"],[294,17,302,4],[294,18,302,16,"log"],[294,21,302,4],[295,0,303,4,"handleUpdate"],[295,6,303,4,"handleUpdate"],[295,18,303,16],[296,0,304,3],[297,0,305,1],[299,0,307,7],[299,11,307,16,"setWarningFilter"],[299,27,307,7],[299,28,307,33,"filter"],[299,34,307,7],[299,36,307,62],[300,0,308,2,"warningFilter"],[300,4,308,2,"warningFilter"],[300,17,308,15],[300,20,308,18,"filter"],[300,26,308,2],[301,0,309,1],[303,0,311,7],[303,11,311,16,"setAppInfo"],[303,21,311,7],[303,22,311,27,"info"],[303,26,311,7],[303,28,311,54],[304,0,312,2,"appInfo"],[304,4,312,2,"appInfo"],[304,11,312,9],[304,14,312,12,"info"],[304,18,312,2],[305,0,313,1],[307,0,315,7],[307,11,315,16,"getAppInfo"],[307,21,315,7],[307,24,315,39],[308,0,316,2],[308,11,316,9,"appInfo"],[308,18,316,16],[308,22,316,20],[308,26,316,9],[308,29,316,27,"appInfo"],[308,36,316,34],[308,38,316,9],[308,41,316,39],[308,45,316,2],[309,0,317,1],[311,0,319,7],[311,11,319,16,"checkWarningFilter"],[311,29,319,7],[311,30,319,35,"format"],[311,36,319,7],[311,38,319,64],[312,0,320,2],[312,11,320,9,"warningFilter"],[312,24,320,22],[312,25,320,23,"format"],[312,31,320,22],[312,32,320,2],[313,0,321,1],[315,0,323,7],[315,11,323,16,"addIgnorePatterns"],[315,28,323,7],[315,29,324,2,"patterns"],[315,37,323,7],[315,39,325,8],[316,0,328,2],[316,8,328,8,"newPatterns"],[316,19,328,19],[316,22,328,22,"patterns"],[316,30,328,30],[316,31,328,31,"filter"],[316,37,328,22],[316,38,328,38],[316,48,328,39,"pattern"],[316,55,328,38],[316,57,328,66],[317,0,329,4],[317,10,329,8,"pattern"],[317,17,329,15],[317,29,329,27,"RegExp"],[317,35,329,4],[317,37,329,35],[318,0,330,6],[318,62,330,36,"ignorePatterns"],[318,76,330,50],[318,77,330,51,"entries"],[318,84,330,36],[318,86,330,6],[318,129,330,62],[319,0,330,62],[319,14,330,17,"existingPattern"],[319,29,330,62],[321,0,331,8],[321,14,332,10,"existingPattern"],[321,29,332,25],[321,41,332,37,"RegExp"],[321,47,332,10],[321,51,333,10,"existingPattern"],[321,66,333,25],[321,67,333,26,"toString"],[321,75,333,10],[321,82,333,41,"pattern"],[321,89,333,48],[321,90,333,49,"toString"],[321,98,333,41],[321,100,331,8],[321,102,334,10],[322,0,335,10],[322,19,335,17],[322,24,335,10],[323,0,336,9],[324,0,337,7],[326,0,338,6],[326,15,338,13],[326,19,338,6],[327,0,339,5],[329,0,340,4],[329,13,340,11],[329,14,340,12,"ignorePatterns"],[329,28,340,26],[329,29,340,27,"has"],[329,32,340,12],[329,33,340,31,"pattern"],[329,40,340,12],[329,41,340,4],[330,0,341,3],[330,5,328,22],[330,6,328,2],[332,0,343,2],[332,8,343,6,"newPatterns"],[332,19,343,17],[332,20,343,18,"length"],[332,26,343,6],[332,31,343,29],[332,32,343,2],[332,34,343,32],[333,0,344,4],[334,0,345,3],[336,0,346,2],[336,58,346,24,"newPatterns"],[336,69,346,2],[336,112,346,37],[337,0,346,37],[337,10,346,13,"pattern"],[337,17,346,37],[338,0,347,4,"ignorePatterns"],[338,6,347,4,"ignorePatterns"],[338,20,347,18],[338,21,347,19,"add"],[338,24,347,4],[338,25,347,23,"pattern"],[338,32,347,4],[339,0,353,4,"logs"],[339,6,353,4,"logs"],[339,10,353,8],[339,13,353,11],[339,17,353,15,"Set"],[339,20,353,11],[339,21,354,6,"Array"],[339,26,354,11],[339,27,354,12,"from"],[339,31,354,6],[339,32,354,17,"logs"],[339,36,354,6],[339,38,354,23,"filter"],[339,44,354,6],[339,45,354,30],[339,55,354,30,"log"],[339,58,354,33],[340,0,354,33],[340,15,354,37],[340,16,354,38,"isMessageIgnored"],[340,32,354,54],[340,33,354,55,"log"],[340,36,354,58],[340,37,354,59,"message"],[340,44,354,55],[340,45,354,67,"content"],[340,52,354,54],[340,53,354,33],[341,0,354,33],[341,7,354,6],[341,8,353,11],[341,9,353,4],[342,0,356,3],[344,0,357,2,"handleUpdate"],[344,4,357,2,"handleUpdate"],[344,16,357,14],[345,0,358,1],[347,0,360,7],[347,11,360,16,"setDisabled"],[347,22,360,7],[347,23,360,28,"value"],[347,28,360,7],[347,30,360,50],[348,0,361,2],[348,8,361,6,"value"],[348,13,361,11],[348,18,361,16,"_isDisabled"],[348,29,361,2],[348,31,361,29],[349,0,362,4],[350,0,363,3],[352,0,364,2,"_isDisabled"],[352,4,364,2,"_isDisabled"],[352,15,364,13],[352,18,364,16,"value"],[352,23,364,2],[353,0,365,2,"handleUpdate"],[353,4,365,2,"handleUpdate"],[353,16,365,14],[354,0,366,1],[356,0,368,7],[356,11,368,16,"isDisabled"],[356,21,368,7],[356,24,368,38],[357,0,369,2],[357,11,369,9,"_isDisabled"],[357,22,369,2],[358,0,370,1],[360,0,372,7],[360,11,372,16,"observe"],[360,18,372,7],[360,19,372,24,"observer"],[360,27,372,7],[360,29,372,58],[361,0,373,2],[361,8,373,8,"subscription"],[361,20,373,20],[361,23,373,23],[362,0,373,24,"observer"],[362,6,373,24,"observer"],[362,14,373,32],[362,16,373,24,"observer"],[363,0,373,23],[363,5,373,2],[364,0,374,2,"observers"],[364,4,374,2,"observers"],[364,13,374,11],[364,14,374,12,"add"],[364,17,374,2],[364,18,374,16,"subscription"],[364,30,374,2],[365,0,376,2,"observer"],[365,4,376,2,"observer"],[365,12,376,10],[365,13,376,11,"getNextState"],[365,25,376,23],[365,27,376,10],[365,28,376,2],[366,0,378,2],[366,11,378,9],[367,0,379,4,"unsubscribe"],[367,6,379,4,"unsubscribe"],[367,17,378,9],[367,42,379,24],[368,0,380,6,"observers"],[368,8,380,6,"observers"],[368,17,380,15],[368,18,380,16,"delete"],[368,24,380,6],[368,25,380,23,"subscription"],[368,37,380,6],[369,0,381,5],[370,0,378,9],[370,5,378,2],[371,0,383,1],[373,0,401,7],[373,11,401,16,"withSubscription"],[373,27,401,7],[373,28,402,2,"WrappedComponent"],[373,44,401,7],[373,46,403,33],[374,0,403,33],[374,8,404,8,"LogBoxStateSubscription"],[374,31,403,33],[375,0,403,33],[377,0,403,33],[379,0,403,33],[380,0,403,33],[382,0,403,33],[384,0,403,33],[385,0,403,33],[386,0,403,33],[388,0,403,33],[389,0,403,33],[389,14,415,4,"state"],[389,19,403,33],[389,22,415,12],[390,0,416,6,"logs"],[390,10,416,6,"logs"],[390,14,416,10],[390,16,416,12],[390,20,416,16,"Set"],[390,23,416,12],[390,25,415,12],[391,0,417,6,"isDisabled"],[391,10,417,6,"isDisabled"],[391,20,417,16],[391,22,417,18],[391,27,415,12],[392,0,418,6,"hasError"],[392,10,418,6,"hasError"],[392,18,418,14],[392,20,418,16],[392,25,415,12],[393,0,419,6,"selectedLogIndex"],[393,10,419,6,"selectedLogIndex"],[393,26,419,22],[393,28,419,24],[393,29,419,25],[394,0,415,12],[394,9,403,33],[396,0,403,33],[396,14,450,4,"_handleDismiss"],[396,28,403,33],[396,31,450,21],[396,43,450,33],[397,0,454,6],[397,28,454,50],[397,34,454,55,"state"],[397,39,454,6],[398,0,454,6],[398,14,454,13,"selectedLogIndex"],[398,30,454,6],[398,45,454,13,"selectedLogIndex"],[398,61,454,6],[399,0,454,6],[399,14,454,37,"stateLogs"],[399,23,454,6],[399,38,454,31,"logs"],[399,42,454,6],[400,0,455,6],[400,14,455,12,"logsArray"],[400,23,455,21],[400,26,455,24,"Array"],[400,31,455,29],[400,32,455,30,"from"],[400,36,455,24],[400,37,455,35,"stateLogs"],[400,46,455,24],[400,47,455,6],[402,0,456,6],[402,14,456,10,"selectedLogIndex"],[402,30,456,26],[402,34,456,30],[402,38,456,6],[402,40,456,36],[403,0,457,8],[403,16,457,12,"logsArray"],[403,25,457,21],[403,26,457,22,"length"],[403,32,457,12],[403,35,457,31],[403,36,457,12],[403,40,457,36],[403,41,457,8],[403,43,457,39],[404,0,458,10,"setSelectedLog"],[404,14,458,10,"setSelectedLog"],[404,28,458,24],[404,29,458,25],[404,30,458,26],[404,31,458,24],[404,32,458,10],[405,0,459,9],[405,13,457,8],[405,19,459,15],[405,23,459,19,"selectedLogIndex"],[405,39,459,35],[405,43,459,39,"logsArray"],[405,52,459,48],[405,53,459,49,"length"],[405,59,459,39],[405,62,459,58],[405,63,459,15],[405,65,459,61],[406,0,460,10,"setSelectedLog"],[406,14,460,10,"setSelectedLog"],[406,28,460,24],[406,29,460,25,"selectedLogIndex"],[406,45,460,41],[406,48,460,44],[406,49,460,24],[406,50,460,10],[407,0,461,9],[409,0,463,8,"dismiss"],[409,12,463,8,"dismiss"],[409,19,463,15],[409,20,463,16,"logsArray"],[409,29,463,25],[409,30,463,26,"selectedLogIndex"],[409,46,463,25],[409,47,463,15],[409,48,463,8],[410,0,464,7],[411,0,465,5],[411,9,403,33],[413,0,403,33],[413,14,467,4,"_handleMinimize"],[413,29,403,33],[413,32,467,22],[413,44,467,34],[414,0,468,6,"setSelectedLog"],[414,10,468,6,"setSelectedLog"],[414,24,468,20],[414,25,468,21],[414,26,468,22],[414,27,468,20],[414,28,468,6],[415,0,469,5],[415,9,403,33],[417,0,403,33],[417,14,471,4,"_handleSetSelectedLog"],[417,35,403,33],[417,38,471,28],[417,48,471,29,"index"],[417,53,471,28],[417,55,471,53],[418,0,472,6,"setSelectedLog"],[418,10,472,6,"setSelectedLog"],[418,24,472,20],[418,25,472,21,"index"],[418,30,472,20],[418,31,472,6],[419,0,473,5],[419,9,403,33],[421,0,403,33],[422,0,403,33],[424,0,403,33],[425,0,403,33],[426,0,403,33],[426,15,409,4],[426,42,409,22,"err"],[426,45,409,4],[426,47,409,34,"errorInfo"],[426,56,409,4],[426,58,409,76],[427,0,410,6,"reportLogBoxError"],[427,10,410,6,"reportLogBoxError"],[427,27,410,23],[427,28,410,24,"err"],[427,31,410,23],[427,33,410,29,"errorInfo"],[427,42,410,38],[427,43,410,39,"componentStack"],[427,57,410,23],[427,58,410,6],[428,0,411,5],[429,0,403,33],[430,0,403,33],[431,0,403,33],[431,15,422,4],[431,33,422,25],[432,0,423,6],[432,14,423,10],[432,19,423,15,"state"],[432,24,423,10],[432,25,423,21,"hasError"],[432,33,423,6],[432,35,423,31],[433,0,426,8],[433,19,426,15],[433,23,426,8],[434,0,427,7],[436,0,429,6],[436,17,430,8],[436,37,430,9],[436,53,430,8],[437,0,431,10],[437,12,431,10],[437,16,431,14],[437,18,431,16,"Array"],[437,23,431,21],[437,24,431,22,"from"],[437,28,431,16],[437,29,431,27],[437,34,431,32,"state"],[437,39,431,27],[437,40,431,38,"logs"],[437,44,431,16],[437,45,430,8],[438,0,432,10],[438,12,432,10],[438,22,432,20],[438,24,432,22],[438,29,432,27,"state"],[438,34,432,22],[438,35,432,33,"isDisabled"],[438,45,430,8],[439,0,433,10],[439,12,433,10],[439,28,433,26],[439,30,433,28],[439,35,433,33,"state"],[439,40,433,28],[439,41,433,39,"selectedLogIndex"],[439,57,430,8],[440,0,430,8],[441,0,430,8],[442,0,430,8],[443,0,430,8],[444,0,430,8],[445,0,430,8],[446,0,430,8],[446,12,429,6],[447,0,436,5],[448,0,403,33],[449,0,403,33],[450,0,403,33],[450,15,438,4],[450,44,438,30],[451,0,438,30],[453,0,439,6],[453,15,439,11,"_subscription"],[453,28,439,6],[453,31,439,27,"observe"],[453,38,439,34],[453,39,439,35],[453,49,439,35,"data"],[453,53,439,39],[453,55,439,43],[454,0,440,8],[454,12,440,8],[454,18,440,12],[454,19,440,13,"setState"],[454,27,440,8],[454,28,440,22,"data"],[454,32,440,8],[455,0,441,7],[455,11,439,34],[455,12,439,6],[456,0,442,5],[457,0,403,33],[458,0,403,33],[459,0,403,33],[459,15,444,4],[459,47,444,33],[460,0,445,6],[460,14,445,10],[460,19,445,15,"_subscription"],[460,32,445,10],[460,36,445,32],[460,40,445,6],[460,42,445,38],[461,0,446,8],[461,17,446,13,"_subscription"],[461,30,446,8],[461,31,446,27,"unsubscribe"],[461,42,446,8],[462,0,447,7],[463,0,448,5],[464,0,403,33],[465,0,403,33],[466,0,403,33],[466,15,405,4],[466,51,405,38],[467,0,406,6],[467,17,406,13],[468,0,406,14,"hasError"],[468,12,406,14,"hasError"],[468,20,406,22],[468,22,406,24],[469,0,406,13],[469,11,406,6],[470,0,407,5],[471,0,403,33],[472,0,403,33],[473,0,403,33],[473,6,404,40,"React"],[473,11,404,45],[473,12,404,46,"Component"],[473,21,403,33],[475,0,476,2],[475,11,476,9,"LogBoxStateSubscription"],[475,34,476,2],[476,0,477,1]],"functionMap":{"names":["<global>","warningFilter","getNextState","reportLogBoxError","isLogBoxErrorMessage","isMessageIgnored","handleUpdate","setImmediate$argument_0","observers.forEach$argument_0","appendNewLog","addPendingLog","setTimeout$argument_0","newLog.symbolicate$argument_0","addLog","addException","symbolicateLogNow","log.symbolicate$argument_0","retrySymbolicateLogNow","log.retrySymbolicate$argument_0","symbolicateLogLazy","clear","setSelectedLog","clearWarnings","Array.from.filter$argument_0","clearErrors","dismiss","setWarningFilter","setAppInfo","getAppInfo","checkWarningFilter","addIgnorePatterns","patterns.filter$argument_0","setDisabled","isDisabled","observe","unsubscribe","withSubscription","LogBoxStateSubscription","LogBoxStateSubscription.getDerivedStateFromError","LogBoxStateSubscription#componentDidCatch","LogBoxStateSubscription#render","LogBoxStateSubscription#componentDidMount","observe$argument_0","LogBoxStateSubscription#componentWillUnmount","LogBoxStateSubscription#_handleDismiss","LogBoxStateSubscription#_handleMinimize","LogBoxStateSubscription#_handleSetSelectedLog"],"mappings":"AAA;mCCyE;CDU;AEK;CFM;OGE;CHY;OIE;CJE;OKE;CLU;AME;iCCE;wBCG,mCD;KDC;CNE;ASE;wBCuB;KDQ;yCEE;KFI;uBGE;KHQ;CTQ;OaE;eNK;GMiB;CbC;OcE;ePG;GOM;CdC;OeE;kBCC;GDE;CfC;OiBE;uBCC;GDE;CjBC;OmBE;CnBE;OoBE;CpBK;OqBE;eViB;KUM;CrBE;OsBE;0CCC,2BD;CtBM;OwBE;IDE,qDC;CxBM;OyBE;CzBK;O0BE;C1BE;O2BE;C3BE;O4BE;C5BE;O6BE;C7BE;O8BE;sCCK;GDa;8BPa,6CO;C9BI;OgCE;ChCM;OiCE;CjCE;OkCE;ICO;KDE;ClCE;OoCkB;ECG;ICC;KDE;IEE;KFE;IGW;KHc;IIE;mCCC;ODE;KJC;IME;KNI;qBOE;KPe;sBQE;KRE;4BSE;KTE;GDC;CpCG"}},"type":"js/module"}]}