{"dependencies":[{"name":"stacktrace-parser","data":{"asyncType":null,"locs":[{"start":{"line":55,"column":27},"end":{"line":55,"column":55}}]}},{"name":"./parseHermesStack","data":{"asyncType":null,"locs":[{"start":{"line":59,"column":25},"end":{"line":59,"column":53}}]}},{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":60,"column":45},"end":{"line":63,"column":8}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function convertHermesStack(stack) {\n    var frames = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(stack.entries), _step; !(_step = _iterator()).done;) {\n      var entry = _step.value;\n\n      if (entry.type !== 'FRAME') {\n        continue;\n      }\n\n      var location = entry.location,\n          functionName = entry.functionName;\n\n      if (location.type === 'NATIVE') {\n        continue;\n      }\n\n      frames.push({\n        methodName: functionName,\n        file: location.sourceUrl,\n        lineNumber: location.line1Based,\n        column: location.type === 'SOURCE' ? location.column1Based - 1 : location.virtualOffset0Based\n      });\n    }\n\n    return frames;\n  }\n\n  function parseErrorStack(errorStack) {\n    if (errorStack == null) {\n      return [];\n    }\n\n    var stacktraceParser = _$$_REQUIRE(_dependencyMap[0], \"stacktrace-parser\");\n\n    var parsedStack = Array.isArray(errorStack) ? errorStack : global.HermesInternal ? convertHermesStack(_$$_REQUIRE(_dependencyMap[1], \"./parseHermesStack\")(errorStack)) : stacktraceParser.parse(errorStack).map(function (frame) {\n      return _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\")({}, frame, {\n        column: frame.column != null ? frame.column - 1 : null\n      });\n    });\n    return parsedStack;\n  }\n\n  module.exports = parseErrorStack;\n});","lineCount":54,"map":[[2,0,11,0],[10,0,27,0],[10,11,27,9,"convertHermesStack"],[10,29,27,0],[10,30,27,28,"stack"],[10,35,27,0],[10,37,27,73],[11,0,28,2],[11,8,28,8,"frames"],[11,14,28,14],[11,17,28,17],[11,19,28,2],[13,0,29,2],[13,57,29,22,"stack"],[13,62,29,27],[13,63,29,28,"entries"],[13,70,29,2],[13,110,29,37],[14,0,29,37],[14,10,29,13,"entry"],[14,15,29,37],[16,0,30,4],[16,10,30,8,"entry"],[16,15,30,13],[16,16,30,14,"type"],[16,20,30,8],[16,25,30,23],[16,32,30,4],[16,34,30,32],[17,0,31,6],[18,0,32,5],[20,0,33,4],[20,10,33,11,"location"],[20,18,33,4],[20,21,33,37,"entry"],[20,26,33,4],[20,27,33,11,"location"],[20,35,33,4],[21,0,33,4],[21,10,33,21,"functionName"],[21,22,33,4],[21,25,33,37,"entry"],[21,30,33,4],[21,31,33,21,"functionName"],[21,43,33,4],[23,0,34,4],[23,10,34,8,"location"],[23,18,34,16],[23,19,34,17,"type"],[23,23,34,8],[23,28,34,26],[23,36,34,4],[23,38,34,36],[24,0,35,6],[25,0,36,5],[27,0,37,4,"frames"],[27,6,37,4,"frames"],[27,12,37,10],[27,13,37,11,"push"],[27,17,37,4],[27,18,37,16],[28,0,38,6,"methodName"],[28,8,38,6,"methodName"],[28,18,38,16],[28,20,38,18,"functionName"],[28,32,37,16],[29,0,39,6,"file"],[29,8,39,6,"file"],[29,12,39,10],[29,14,39,12,"location"],[29,22,39,20],[29,23,39,21,"sourceUrl"],[29,32,37,16],[30,0,40,6,"lineNumber"],[30,8,40,6,"lineNumber"],[30,18,40,16],[30,20,40,18,"location"],[30,28,40,26],[30,29,40,27,"line1Based"],[30,39,37,16],[31,0,41,6,"column"],[31,8,41,6,"column"],[31,14,41,12],[31,16,42,8,"location"],[31,24,42,16],[31,25,42,17,"type"],[31,29,42,8],[31,34,42,26],[31,42,42,8],[31,45,43,12,"location"],[31,53,43,20],[31,54,43,21,"column1Based"],[31,66,43,12],[31,69,43,36],[31,70,42,8],[31,73,44,12,"location"],[31,81,44,20],[31,82,44,21,"virtualOffset0Based"],[32,0,37,16],[32,7,37,4],[33,0,46,3],[35,0,47,2],[35,11,47,9,"frames"],[35,17,47,2],[36,0,48,1],[38,0,50,0],[38,11,50,9,"parseErrorStack"],[38,26,50,0],[38,27,50,25,"errorStack"],[38,37,50,0],[38,39,50,65],[39,0,51,2],[39,8,51,6,"errorStack"],[39,18,51,16],[39,22,51,20],[39,26,51,2],[39,28,51,26],[40,0,52,4],[40,13,52,11],[40,15,52,4],[41,0,53,3],[43,0,55,2],[43,8,55,8,"stacktraceParser"],[43,24,55,24],[43,27,55,27,"require"],[43,38,55,34],[43,78,55,2],[45,0,56,2],[45,8,56,8,"parsedStack"],[45,19,56,19],[45,22,56,22,"Array"],[45,27,56,27],[45,28,56,28,"isArray"],[45,35,56,22],[45,36,56,36,"errorStack"],[45,46,56,22],[45,50,57,6,"errorStack"],[45,60,56,22],[45,63,58,6,"global"],[45,69,58,12],[45,70,58,13,"HermesInternal"],[45,84,58,6],[45,87,59,6,"convertHermesStack"],[45,105,59,24],[45,106,59,25],[45,159,59,42,"errorStack"],[45,169,59,25],[45,170,59,24],[45,171,58,6],[45,174,60,6,"stacktraceParser"],[45,190,60,22],[45,191,60,23,"parse"],[45,196,60,6],[45,197,60,29,"errorStack"],[45,207,60,6],[45,209,60,41,"map"],[45,212,60,6],[45,213,60,45],[45,223,60,45,"frame"],[45,228,60,50],[46,0,60,50],[46,82,61,11,"frame"],[46,87,60,50],[47,0,62,8,"column"],[47,8,62,8,"column"],[47,14,62,14],[47,16,62,16,"frame"],[47,21,62,21],[47,22,62,22,"column"],[47,28,62,16],[47,32,62,32],[47,36,62,16],[47,39,62,39,"frame"],[47,44,62,44],[47,45,62,45,"column"],[47,51,62,39],[47,54,62,54],[47,55,62,16],[47,58,62,58],[48,0,60,50],[49,0,60,50],[49,5,60,6],[49,6,56,2],[50,0,65,2],[50,11,65,9,"parsedStack"],[50,22,65,2],[51,0,66,1],[53,0,68,0,"module"],[53,2,68,0,"module"],[53,8,68,6],[53,9,68,7,"exports"],[53,16,68,0],[53,19,68,17,"parseErrorStack"],[53,34,68,0]],"functionMap":{"names":["<global>","convertHermesStack","parseErrorStack","stacktraceParser.parse.map$argument_0"],"mappings":"AAA;AC0B;CDqB;AEE;6CCU;QDG;CFG"}},"type":"js/module"}]}