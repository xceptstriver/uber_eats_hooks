{"dependencies":[{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":53,"column":18},"end":{"line":53,"column":42}}],"isOptional":true}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /*\n  object-assign\n  (c) Sindre Sorhus\n  @license MIT\n  */\n  'use strict';\n\n  var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n  function toObject(val) {\n    if (val === null || val === undefined) {\n      throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n\n    return Object(val);\n  }\n\n  function shouldUseNative() {\n    try {\n      if (!Object.assign) {\n        return false;\n      }\n\n      var test1 = new String('abc');\n      test1[5] = 'de';\n\n      if (Object.getOwnPropertyNames(test1)[0] === '5') {\n        return false;\n      }\n\n      var test2 = {};\n\n      for (var i = 0; i < 10; i++) {\n        test2['_' + String.fromCharCode(i)] = i;\n      }\n\n      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n        return test2[n];\n      });\n\n      if (order2.join('') !== '0123456789') {\n        return false;\n      }\n\n      var test3 = {};\n      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n        test3[letter] = letter;\n      });\n\n      if (Object.keys(_$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/extends\")({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n        return false;\n      }\n\n      return true;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  module.exports = shouldUseNative() ? Object.assign : function (target, source) {\n    var from;\n    var to = toObject(target);\n    var symbols;\n\n    for (var s = 1; s < arguments.length; s++) {\n      from = Object(arguments[s]);\n\n      for (var key in from) {\n        if (hasOwnProperty.call(from, key)) {\n          to[key] = from[key];\n        }\n      }\n\n      if (getOwnPropertySymbols) {\n        symbols = getOwnPropertySymbols(from);\n\n        for (var i = 0; i < symbols.length; i++) {\n          if (propIsEnumerable.call(from, symbols[i])) {\n            to[symbols[i]] = from[symbols[i]];\n          }\n        }\n      }\n    }\n\n    return to;\n  };\n});","lineCount":90,"map":[[2,0,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,7,0],[9,0,9,0],[9,6,9,4,"getOwnPropertySymbols"],[9,27,9,25],[9,30,9,28,"Object"],[9,36,9,34],[9,37,9,35,"getOwnPropertySymbols"],[9,58,9,0],[10,0,10,0],[10,6,10,4,"hasOwnProperty"],[10,20,10,18],[10,23,10,21,"Object"],[10,29,10,27],[10,30,10,28,"prototype"],[10,39,10,21],[10,40,10,38,"hasOwnProperty"],[10,54,10,0],[11,0,11,0],[11,6,11,4,"propIsEnumerable"],[11,22,11,20],[11,25,11,23,"Object"],[11,31,11,29],[11,32,11,30,"prototype"],[11,41,11,23],[11,42,11,40,"propertyIsEnumerable"],[11,62,11,0],[13,0,13,0],[13,11,13,9,"toObject"],[13,19,13,0],[13,20,13,18,"val"],[13,23,13,0],[13,25,13,23],[14,0,14,1],[14,8,14,5,"val"],[14,11,14,8],[14,16,14,13],[14,20,14,5],[14,24,14,21,"val"],[14,27,14,24],[14,32,14,29,"undefined"],[14,41,14,1],[14,43,14,40],[15,0,15,2],[15,12,15,8],[15,16,15,12,"TypeError"],[15,25,15,8],[15,26,15,22],[15,81,15,8],[15,82,15,2],[16,0,16,2],[18,0,18,1],[18,11,18,8,"Object"],[18,17,18,14],[18,18,18,15,"val"],[18,21,18,14],[18,22,18,1],[19,0,19,1],[21,0,21,0],[21,11,21,9,"shouldUseNative"],[21,26,21,0],[21,29,21,27],[22,0,22,1],[22,8,22,5],[23,0,23,2],[23,10,23,6],[23,11,23,7,"Object"],[23,17,23,13],[23,18,23,14,"assign"],[23,24,23,2],[23,26,23,22],[24,0,24,3],[24,15,24,10],[24,20,24,3],[25,0,25,3],[27,0,30,2],[27,10,30,6,"test1"],[27,15,30,11],[27,18,30,14],[27,22,30,18,"String"],[27,28,30,14],[27,29,30,25],[27,34,30,14],[27,35,30,2],[28,0,31,2,"test1"],[28,6,31,2,"test1"],[28,11,31,7],[28,12,31,8],[28,13,31,7],[28,14,31,2],[28,17,31,13],[28,21,31,2],[30,0,32,2],[30,10,32,6,"Object"],[30,16,32,12],[30,17,32,13,"getOwnPropertyNames"],[30,36,32,6],[30,37,32,33,"test1"],[30,42,32,6],[30,44,32,40],[30,45,32,6],[30,51,32,47],[30,54,32,2],[30,56,32,52],[31,0,33,3],[31,15,33,10],[31,20,33,3],[32,0,34,3],[34,0,37,2],[34,10,37,6,"test2"],[34,15,37,11],[34,18,37,14],[34,20,37,2],[36,0,38,2],[36,11,38,7],[36,15,38,11,"i"],[36,16,38,12],[36,19,38,15],[36,20,38,2],[36,22,38,18,"i"],[36,23,38,19],[36,26,38,22],[36,28,38,2],[36,30,38,26,"i"],[36,31,38,27],[36,33,38,2],[36,35,38,31],[37,0,39,3,"test2"],[37,8,39,3,"test2"],[37,13,39,8],[37,14,39,9],[37,20,39,15,"String"],[37,26,39,21],[37,27,39,22,"fromCharCode"],[37,39,39,15],[37,40,39,35,"i"],[37,41,39,15],[37,42,39,8],[37,43,39,3],[37,46,39,41,"i"],[37,47,39,3],[38,0,40,3],[40,0,41,2],[40,10,41,6,"order2"],[40,16,41,12],[40,19,41,15,"Object"],[40,25,41,21],[40,26,41,22,"getOwnPropertyNames"],[40,45,41,15],[40,46,41,42,"test2"],[40,51,41,15],[40,53,41,49,"map"],[40,56,41,15],[40,57,41,53],[40,67,41,63,"n"],[40,68,41,53],[40,70,41,66],[41,0,42,3],[41,15,42,10,"test2"],[41,20,42,15],[41,21,42,16,"n"],[41,22,42,15],[41,23,42,3],[42,0,43,3],[42,7,41,15],[42,8,41,2],[44,0,44,2],[44,10,44,6,"order2"],[44,16,44,12],[44,17,44,13,"join"],[44,21,44,6],[44,22,44,18],[44,24,44,6],[44,30,44,26],[44,42,44,2],[44,44,44,40],[45,0,45,3],[45,15,45,10],[45,20,45,3],[46,0,46,3],[48,0,49,2],[48,10,49,6,"test3"],[48,15,49,11],[48,18,49,14],[48,20,49,2],[49,0,50,2],[49,29,50,25,"split"],[49,34,50,2],[49,35,50,31],[49,37,50,2],[49,39,50,35,"forEach"],[49,46,50,2],[49,47,50,43],[49,57,50,53,"letter"],[49,63,50,43],[49,65,50,61],[50,0,51,3,"test3"],[50,8,51,3,"test3"],[50,13,51,8],[50,14,51,9,"letter"],[50,20,51,8],[50,21,51,3],[50,24,51,19,"letter"],[50,30,51,3],[51,0,52,3],[51,7,50,2],[53,0,53,2],[53,10,53,6,"Object"],[53,16,53,12],[53,17,53,13,"keys"],[53,21,53,6],[53,22,53,18],[53,87,53,32],[53,89,53,18],[53,91,53,36,"test3"],[53,96,53,18],[53,97,53,6],[53,99,53,44,"join"],[53,103,53,6],[53,104,53,49],[53,106,53,6],[53,112,54,4],[53,134,53,2],[53,136,54,28],[54,0,55,3],[54,15,55,10],[54,20,55,3],[55,0,56,3],[57,0,58,2],[57,13,58,9],[57,17,58,2],[58,0,59,2],[58,5,22,1],[58,6,59,3],[58,13,59,10,"err"],[58,16,59,3],[58,18,59,15],[59,0,61,2],[59,13,61,9],[59,18,61,2],[60,0,62,2],[61,0,63,1],[63,0,65,0,"module"],[63,2,65,0,"module"],[63,8,65,6],[63,9,65,7,"exports"],[63,16,65,0],[63,19,65,17,"shouldUseNative"],[63,34,65,32],[63,39,65,37,"Object"],[63,45,65,43],[63,46,65,44,"assign"],[63,52,65,32],[63,55,65,53],[63,65,65,63,"target"],[63,71,65,53],[63,73,65,71,"source"],[63,79,65,53],[63,81,65,79],[64,0,66,1],[64,8,66,5,"from"],[64,12,66,1],[65,0,67,1],[65,8,67,5,"to"],[65,10,67,7],[65,13,67,10,"toObject"],[65,21,67,18],[65,22,67,19,"target"],[65,28,67,18],[65,29,67,1],[66,0,68,1],[66,8,68,5,"symbols"],[66,15,68,1],[68,0,70,1],[68,9,70,6],[68,13,70,10,"s"],[68,14,70,11],[68,17,70,14],[68,18,70,1],[68,20,70,17,"s"],[68,21,70,18],[68,24,70,21,"arguments"],[68,33,70,30],[68,34,70,31,"length"],[68,40,70,1],[68,42,70,39,"s"],[68,43,70,40],[68,45,70,1],[68,47,70,44],[69,0,71,2,"from"],[69,6,71,2,"from"],[69,10,71,6],[69,13,71,9,"Object"],[69,19,71,15],[69,20,71,16,"arguments"],[69,29,71,25],[69,30,71,26,"s"],[69,31,71,25],[69,32,71,15],[69,33,71,2],[71,0,73,2],[71,11,73,7],[71,15,73,11,"key"],[71,18,73,2],[71,22,73,18,"from"],[71,26,73,2],[71,28,73,24],[72,0,74,3],[72,12,74,7,"hasOwnProperty"],[72,26,74,21],[72,27,74,22,"call"],[72,31,74,7],[72,32,74,27,"from"],[72,36,74,7],[72,38,74,33,"key"],[72,41,74,7],[72,42,74,3],[72,44,74,39],[73,0,75,4,"to"],[73,10,75,4,"to"],[73,12,75,6],[73,13,75,7,"key"],[73,16,75,6],[73,17,75,4],[73,20,75,14,"from"],[73,24,75,18],[73,25,75,19,"key"],[73,28,75,18],[73,29,75,4],[74,0,76,4],[75,0,77,3],[77,0,79,2],[77,10,79,6,"getOwnPropertySymbols"],[77,31,79,2],[77,33,79,29],[78,0,80,3,"symbols"],[78,8,80,3,"symbols"],[78,15,80,10],[78,18,80,13,"getOwnPropertySymbols"],[78,39,80,34],[78,40,80,35,"from"],[78,44,80,34],[78,45,80,3],[80,0,81,3],[80,13,81,8],[80,17,81,12,"i"],[80,18,81,13],[80,21,81,16],[80,22,81,3],[80,24,81,19,"i"],[80,25,81,20],[80,28,81,23,"symbols"],[80,35,81,30],[80,36,81,31,"length"],[80,42,81,3],[80,44,81,39,"i"],[80,45,81,40],[80,47,81,3],[80,49,81,44],[81,0,82,4],[81,14,82,8,"propIsEnumerable"],[81,30,82,24],[81,31,82,25,"call"],[81,35,82,8],[81,36,82,30,"from"],[81,40,82,8],[81,42,82,36,"symbols"],[81,49,82,43],[81,50,82,44,"i"],[81,51,82,43],[81,52,82,8],[81,53,82,4],[81,55,82,49],[82,0,83,5,"to"],[82,12,83,5,"to"],[82,14,83,7],[82,15,83,8,"symbols"],[82,22,83,15],[82,23,83,16,"i"],[82,24,83,15],[82,25,83,7],[82,26,83,5],[82,29,83,22,"from"],[82,33,83,26],[82,34,83,27,"symbols"],[82,41,83,34],[82,42,83,35,"i"],[82,43,83,34],[82,44,83,26],[82,45,83,5],[83,0,84,5],[84,0,85,4],[85,0,86,3],[86,0,87,2],[88,0,89,1],[88,11,89,8,"to"],[88,13,89,1],[89,0,90,1],[89,3,65,0]],"functionMap":{"names":["<global>","toObject","shouldUseNative","Object.getOwnPropertyNames.map$argument_0","abcdefghijklmnopqrst.split.forEach$argument_0","<anonymous>"],"mappings":"AAA;ACY;CDM;AEE;qDCoB;GDE;2CEO;GFE;CFW;qDKE;CLyB"}},"type":"js/module"}]}