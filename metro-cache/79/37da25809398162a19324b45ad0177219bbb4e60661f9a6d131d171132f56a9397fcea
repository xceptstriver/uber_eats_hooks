{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":336,"column":0}},{"start":{"line":19,"column":0},"end":{"line":19,"column":57}},{"start":{"line":20,"column":0},"end":{"line":20,"column":63}}]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":336,"column":0}}]}},{"name":"../Core/Devtools/getDevServer","data":{"asyncType":null,"locs":[{"start":{"line":19,"column":0},"end":{"line":19,"column":57}}]}},{"name":"../NativeModules/specs/NativeRedBox","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":0},"end":{"line":20,"column":63}}]}},{"name":"../LogBox/Data/LogBoxData","data":{"asyncType":null,"locs":[{"start":{"line":21,"column":0},"end":{"line":21,"column":56}}]}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":70,"column":4},"end":{"line":70,"column":71}},{"start":{"line":98,"column":4},"end":{"line":98,"column":71}},{"start":{"line":103,"column":4},"end":{"line":103,"column":71}},{"start":{"line":151,"column":4},"end":{"line":151,"column":64}},{"start":{"line":152,"column":4},"end":{"line":152,"column":70}},{"start":{"line":153,"column":4},"end":{"line":153,"column":56}},{"start":{"line":154,"column":4},"end":{"line":154,"column":62}},{"start":{"line":257,"column":2},"end":{"line":257,"column":69}}]}},{"name":"./LoadingView","data":{"asyncType":null,"locs":[{"start":{"line":71,"column":24},"end":{"line":71,"column":48}},{"start":{"line":157,"column":24},"end":{"line":157,"column":48}}]}},{"name":"pretty-format","data":{"asyncType":null,"locs":[{"start":{"line":126,"column":16},"end":{"line":132,"column":18}},{"start":{"line":131,"column":28},"end":{"line":131,"column":48}}]}},{"name":"metro-runtime/src/modules/HMRClient","data":{"asyncType":null,"locs":[{"start":{"line":160,"column":19},"end":{"line":160,"column":59}}]}},{"name":"./DevSettings","data":{"asyncType":null,"locs":[{"start":{"line":275,"column":4},"end":{"line":275,"column":22}}]}},{"name":"../Core/NativeExceptionsManager","data":{"asyncType":null,"locs":[{"start":{"line":308,"column":36},"end":{"line":308,"column":78}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _getDevServer2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"../Core/Devtools/getDevServer\"));\n\n  var _NativeRedBox = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"../NativeModules/specs/NativeRedBox\"));\n\n  var LogBoxData = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"../LogBox/Data/LogBoxData\"));\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var pendingEntryPoints = [];\n  var hmrClient = null;\n  var hmrUnavailableReason = null;\n  var currentCompileErrorMessage = null;\n  var didConnect = false;\n  var pendingLogs = [];\n  var HMRClient = {\n    enable: function enable() {\n      if (hmrUnavailableReason !== null) {\n        throw new Error(hmrUnavailableReason);\n      }\n\n      _$$_REQUIRE(_dependencyMap[5], \"invariant\")(hmrClient, 'Expected HMRClient.setup() call at startup.');\n\n      var LoadingView = _$$_REQUIRE(_dependencyMap[6], \"./LoadingView\");\n\n      hmrClient.send(JSON.stringify({\n        type: 'log-opt-in'\n      }));\n      var hasUpdates = hmrClient.hasPendingUpdates();\n\n      if (hasUpdates) {\n        LoadingView.showMessage('Refreshing...', 'refresh');\n      }\n\n      try {\n        hmrClient.enable();\n      } finally {\n        if (hasUpdates) {\n          LoadingView.hide();\n        }\n      }\n\n      showCompileError();\n    },\n    disable: function disable() {\n      _$$_REQUIRE(_dependencyMap[5], \"invariant\")(hmrClient, 'Expected HMRClient.setup() call at startup.');\n\n      hmrClient.disable();\n    },\n    registerBundle: function registerBundle(requestUrl) {\n      _$$_REQUIRE(_dependencyMap[5], \"invariant\")(hmrClient, 'Expected HMRClient.setup() call at startup.');\n\n      pendingEntryPoints.push(requestUrl);\n      registerBundleEntryPoints(hmrClient);\n    },\n    log: function log(level, data) {\n      if (!hmrClient) {\n        pendingLogs.push([level, data]);\n\n        if (pendingLogs.length > 100) {\n          pendingLogs.shift();\n        }\n\n        return;\n      }\n\n      try {\n        hmrClient.send(JSON.stringify({\n          type: 'log',\n          level: level,\n          data: data.map(function (item) {\n            return typeof item === 'string' ? item : _$$_REQUIRE(_dependencyMap[7], \"pretty-format\")(item, {\n              escapeString: true,\n              highlight: true,\n              maxDepth: 3,\n              min: true,\n              plugins: [_$$_REQUIRE(_dependencyMap[7], \"pretty-format\").plugins.ReactElement]\n            });\n          })\n        }));\n      } catch (error) {}\n    },\n    setup: function setup(platform, bundleEntry, host, port, isEnabled) {\n      _$$_REQUIRE(_dependencyMap[5], \"invariant\")(platform, 'Missing required parameter `platform`');\n\n      _$$_REQUIRE(_dependencyMap[5], \"invariant\")(bundleEntry, 'Missing required parameter `bundleEntry`');\n\n      _$$_REQUIRE(_dependencyMap[5], \"invariant\")(host, 'Missing required parameter `host`');\n\n      _$$_REQUIRE(_dependencyMap[5], \"invariant\")(!hmrClient, 'Cannot initialize hmrClient twice');\n\n      var LoadingView = _$$_REQUIRE(_dependencyMap[6], \"./LoadingView\");\n\n      var wsHost = port !== null && port !== '' ? host + \":\" + port : host;\n      var client = new (_$$_REQUIRE(_dependencyMap[8], \"metro-runtime/src/modules/HMRClient\"))(\"ws://\" + wsHost + \"/hot\");\n      hmrClient = client;\n\n      var _getDevServer = (0, _getDevServer2.default)(),\n          fullBundleUrl = _getDevServer.fullBundleUrl;\n\n      pendingEntryPoints.push(fullBundleUrl != null ? fullBundleUrl : \"ws://\" + wsHost + \"/hot?bundleEntry=\" + bundleEntry + \"&platform=\" + platform);\n      client.on('connection-error', function (e) {\n        var error = \"Cannot connect to Metro.\\n\\nTry the following to fix the issue:\\n- Ensure that Metro is running and available on the same network\";\n\n        if (\"android\" === 'ios') {\n          error += \"\\n- Ensure that the Metro URL is correctly set in AppDelegate\";\n        } else {\n          error += \"\\n- Ensure that your device/emulator is connected to your machine and has USB debugging enabled - run 'adb devices' to see a list of connected devices\\n- If you're on a physical device connected to the same machine, run 'adb reverse tcp:8081 tcp:8081' to forward requests from your device\\n- If your device is on the same Wi-Fi network, set 'Debug server host & port for device' in 'Dev settings' to your machine's IP address and the port of the local dev server - e.g. 10.0.1.1:8081\";\n        }\n\n        error += \"\\n\\nURL: \" + host + \":\" + port + \"\\n\\nError: \" + e.message;\n        setHMRUnavailableReason(error);\n      });\n      client.on('update-start', function (_ref) {\n        var isInitialUpdate = _ref.isInitialUpdate;\n        currentCompileErrorMessage = null;\n        didConnect = true;\n\n        if (client.isEnabled() && !isInitialUpdate) {\n          LoadingView.showMessage('Refreshing...', 'refresh');\n        }\n      });\n      client.on('update', function (_ref2) {\n        var isInitialUpdate = _ref2.isInitialUpdate;\n\n        if (client.isEnabled() && !isInitialUpdate) {\n          dismissRedbox();\n          LogBoxData.clear();\n        }\n      });\n      client.on('update-done', function () {\n        LoadingView.hide();\n      });\n      client.on('error', function (data) {\n        LoadingView.hide();\n\n        if (data.type === 'GraphNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro has restarted since the last edit. Reload to reconnect.');\n        } else if (data.type === 'RevisionNotFoundError') {\n          client.close();\n          setHMRUnavailableReason('Metro and the client are out of sync. Reload to reconnect.');\n        } else {\n          currentCompileErrorMessage = data.type + \" \" + data.message;\n\n          if (client.isEnabled()) {\n            showCompileError();\n          }\n        }\n      });\n      client.on('close', function (data) {\n        LoadingView.hide();\n        setHMRUnavailableReason('Disconnected from Metro.');\n      });\n\n      if (isEnabled) {\n        HMRClient.enable();\n      } else {\n        HMRClient.disable();\n      }\n\n      registerBundleEntryPoints(hmrClient);\n      flushEarlyLogs(hmrClient);\n    }\n  };\n\n  function setHMRUnavailableReason(reason) {\n    _$$_REQUIRE(_dependencyMap[5], \"invariant\")(hmrClient, 'Expected HMRClient.setup() call at startup.');\n\n    if (hmrUnavailableReason !== null) {\n      return;\n    }\n\n    hmrUnavailableReason = reason;\n\n    if (hmrClient.isEnabled() && didConnect) {\n      console.warn(reason);\n    }\n  }\n\n  function registerBundleEntryPoints(client) {\n    if (hmrUnavailableReason != null) {\n      _$$_REQUIRE(_dependencyMap[9], \"./DevSettings\").reload('Bundle Splitting – Metro disconnected');\n\n      return;\n    }\n\n    if (pendingEntryPoints.length > 0) {\n      client.send(JSON.stringify({\n        type: 'register-entrypoints',\n        entryPoints: pendingEntryPoints\n      }));\n      pendingEntryPoints.length = 0;\n    }\n  }\n\n  function flushEarlyLogs(client) {\n    try {\n      pendingLogs.forEach(function (_ref3) {\n        var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n            level = _ref4[0],\n            data = _ref4[1];\n\n        HMRClient.log(level, data);\n      });\n    } finally {\n      pendingLogs.length = 0;\n    }\n  }\n\n  function dismissRedbox() {\n    if (\"android\" === 'ios' && _NativeRedBox.default != null && _NativeRedBox.default.dismiss != null) {\n      _NativeRedBox.default.dismiss();\n    } else {\n      var NativeExceptionsManager = _$$_REQUIRE(_dependencyMap[10], \"../Core/NativeExceptionsManager\").default;\n\n      NativeExceptionsManager && NativeExceptionsManager.dismissRedbox && NativeExceptionsManager.dismissRedbox();\n    }\n  }\n\n  function showCompileError() {\n    if (currentCompileErrorMessage === null) {\n      return;\n    }\n\n    dismissRedbox();\n    var message = currentCompileErrorMessage;\n    currentCompileErrorMessage = null;\n    var error = new Error(message);\n    error.preventSymbolication = true;\n    throw error;\n  }\n\n  module.exports = HMRClient;\n});","lineCount":241,"map":[[2,0,11,0],[6,0,19,0],[8,0,20,0],[10,0,21,0],[16,0,24,0],[16,6,24,6,"pendingEntryPoints"],[16,24,24,24],[16,27,24,27],[16,29,24,0],[17,0,25,0],[17,6,25,4,"hmrClient"],[17,15,25,13],[17,18,25,16],[17,22,25,0],[18,0,26,0],[18,6,26,4,"hmrUnavailableReason"],[18,26,26,39],[18,29,26,42],[18,33,26,0],[19,0,27,0],[19,6,27,4,"currentCompileErrorMessage"],[19,32,27,45],[19,35,27,48],[19,39,27,0],[20,0,28,0],[20,6,28,4,"didConnect"],[20,16,28,23],[20,19,28,26],[20,24,28,0],[21,0,29,0],[21,6,29,4,"pendingLogs"],[21,17,29,48],[21,20,29,51],[21,22,29,0],[22,0,60,0],[22,6,60,6,"HMRClient"],[22,15,60,41],[22,18,60,44],[23,0,61,2,"enable"],[23,4,61,2,"enable"],[23,10,60,44],[23,30,61,11],[24,0,62,4],[24,10,62,8,"hmrUnavailableReason"],[24,30,62,28],[24,35,62,33],[24,39,62,4],[24,41,62,39],[25,0,67,6],[25,14,67,12],[25,18,67,16,"Error"],[25,23,67,12],[25,24,67,22,"hmrUnavailableReason"],[25,44,67,12],[25,45,67,6],[26,0,68,5],[28,0,70,4],[28,50,70,14,"hmrClient"],[28,59,70,4],[28,61,70,25],[28,106,70,4],[30,0,71,4],[30,10,71,10,"LoadingView"],[30,21,71,21],[30,24,71,24,"require"],[30,35,71,31],[30,71,71,4],[32,0,75,4,"hmrClient"],[32,6,75,4,"hmrClient"],[32,15,75,13],[32,16,75,14,"send"],[32,20,75,4],[32,21,75,19,"JSON"],[32,25,75,23],[32,26,75,24,"stringify"],[32,35,75,19],[32,36,75,34],[33,0,75,35,"type"],[33,8,75,35,"type"],[33,12,75,39],[33,14,75,41],[34,0,75,34],[34,7,75,19],[34,8,75,4],[35,0,79,4],[35,10,79,10,"hasUpdates"],[35,20,79,20],[35,23,79,23,"hmrClient"],[35,32,79,32],[35,33,79,33,"hasPendingUpdates"],[35,50,79,23],[35,52,79,4],[37,0,81,4],[37,10,81,8,"hasUpdates"],[37,20,81,4],[37,22,81,20],[38,0,82,6,"LoadingView"],[38,8,82,6,"LoadingView"],[38,19,82,17],[38,20,82,18,"showMessage"],[38,31,82,6],[38,32,82,30],[38,47,82,6],[38,49,82,47],[38,58,82,6],[39,0,83,5],[41,0,84,4],[41,10,84,8],[42,0,85,6,"hmrClient"],[42,8,85,6,"hmrClient"],[42,17,85,15],[42,18,85,16,"enable"],[42,24,85,6],[43,0,86,5],[43,7,84,4],[43,16,86,14],[44,0,87,6],[44,12,87,10,"hasUpdates"],[44,22,87,6],[44,24,87,22],[45,0,88,8,"LoadingView"],[45,10,88,8,"LoadingView"],[45,21,88,19],[45,22,88,20,"hide"],[45,26,88,8],[46,0,89,7],[47,0,90,5],[49,0,94,4,"showCompileError"],[49,6,94,4,"showCompileError"],[49,22,94,20],[50,0,95,3],[50,5,60,44],[51,0,97,2,"disable"],[51,4,97,2,"disable"],[51,11,60,44],[51,32,97,12],[52,0,98,4],[52,50,98,14,"hmrClient"],[52,59,98,4],[52,61,98,25],[52,106,98,4],[54,0,99,4,"hmrClient"],[54,6,99,4,"hmrClient"],[54,15,99,13],[54,16,99,14,"disable"],[54,23,99,4],[55,0,100,3],[55,5,60,44],[56,0,102,2,"registerBundle"],[56,4,102,2,"registerBundle"],[56,18,60,44],[56,44,102,17,"requestUrl"],[56,54,60,44],[56,56,102,37],[57,0,103,4],[57,50,103,14,"hmrClient"],[57,59,103,4],[57,61,103,25],[57,106,103,4],[59,0,104,4,"pendingEntryPoints"],[59,6,104,4,"pendingEntryPoints"],[59,24,104,22],[59,25,104,23,"push"],[59,29,104,4],[59,30,104,28,"requestUrl"],[59,40,104,4],[60,0,105,4,"registerBundleEntryPoints"],[60,6,105,4,"registerBundleEntryPoints"],[60,31,105,29],[60,32,105,30,"hmrClient"],[60,41,105,29],[60,42,105,4],[61,0,106,3],[61,5,60,44],[62,0,108,2,"log"],[62,4,108,2,"log"],[62,7,60,44],[62,22,108,6,"level"],[62,27,60,44],[62,29,108,23,"data"],[62,33,60,44],[62,35,108,43],[63,0,109,4],[63,10,109,8],[63,11,109,9,"hmrClient"],[63,20,109,4],[63,22,109,20],[64,0,112,6,"pendingLogs"],[64,8,112,6,"pendingLogs"],[64,19,112,17],[64,20,112,18,"push"],[64,24,112,6],[64,25,112,23],[64,26,112,24,"level"],[64,31,112,23],[64,33,112,31,"data"],[64,37,112,23],[64,38,112,6],[66,0,113,6],[66,12,113,10,"pendingLogs"],[66,23,113,21],[66,24,113,22,"length"],[66,30,113,10],[66,33,113,31],[66,36,113,6],[66,38,113,36],[67,0,114,8,"pendingLogs"],[67,10,114,8,"pendingLogs"],[67,21,114,19],[67,22,114,20,"shift"],[67,27,114,8],[68,0,115,7],[70,0,116,6],[71,0,117,5],[73,0,118,4],[73,10,118,8],[74,0,119,6,"hmrClient"],[74,8,119,6,"hmrClient"],[74,17,119,15],[74,18,119,16,"send"],[74,22,119,6],[74,23,120,8,"JSON"],[74,27,120,12],[74,28,120,13,"stringify"],[74,37,120,8],[74,38,120,23],[75,0,121,10,"type"],[75,10,121,10,"type"],[75,14,121,14],[75,16,121,16],[75,21,120,23],[76,0,122,10,"level"],[76,10,122,10,"level"],[76,15,122,15],[76,17,122,10,"level"],[76,22,120,23],[77,0,123,10,"data"],[77,10,123,10,"data"],[77,14,123,14],[77,16,123,16,"data"],[77,20,123,20],[77,21,123,21,"map"],[77,24,123,16],[77,25,123,25],[77,35,123,25,"item"],[77,39,123,29],[78,0,123,29],[78,19,124,12],[78,26,124,19,"item"],[78,30,124,12],[78,35,124,28],[78,43,124,12],[78,46,125,16,"item"],[78,50,124,12],[78,53,126,16],[78,101,126,29,"item"],[78,105,126,16],[78,107,126,35],[79,0,127,18,"escapeString"],[79,14,127,18,"escapeString"],[79,26,127,30],[79,28,127,32],[79,32,126,35],[80,0,128,18,"highlight"],[80,14,128,18,"highlight"],[80,23,128,27],[80,25,128,29],[80,29,126,35],[81,0,129,18,"maxDepth"],[81,14,129,18,"maxDepth"],[81,22,129,26],[81,24,129,28],[81,25,126,35],[82,0,130,18,"min"],[82,14,130,18,"min"],[82,17,130,21],[82,19,130,23],[82,23,126,35],[83,0,131,18,"plugins"],[83,14,131,18,"plugins"],[83,21,131,25],[83,23,131,27],[83,24,131,28],[83,72,131,41,"plugins"],[83,79,131,28],[83,80,131,49,"ReactElement"],[83,92,131,27],[84,0,126,35],[84,13,126,16],[84,14,123,29],[85,0,123,29],[85,11,123,16],[86,0,120,23],[86,9,120,8],[86,10,119,6],[87,0,136,5],[87,7,118,4],[87,8,136,6],[87,15,136,13,"error"],[87,20,136,6],[87,22,136,20],[87,23,139,5],[88,0,140,3],[88,5,60,44],[89,0,144,2,"setup"],[89,4,144,2,"setup"],[89,9,60,44],[89,26,145,4,"platform"],[89,34,60,44],[89,36,146,4,"bundleEntry"],[89,47,60,44],[89,49,147,4,"host"],[89,53,60,44],[89,55,148,4,"port"],[89,59,60,44],[89,61,149,4,"isEnabled"],[89,70,60,44],[89,72,150,4],[90,0,151,4],[90,50,151,14,"platform"],[90,58,151,4],[90,60,151,24],[90,99,151,4],[92,0,152,4],[92,50,152,14,"bundleEntry"],[92,61,152,4],[92,63,152,27],[92,105,152,4],[94,0,153,4],[94,50,153,14,"host"],[94,54,153,4],[94,56,153,20],[94,91,153,4],[96,0,154,4],[96,50,154,14],[96,51,154,15,"hmrClient"],[96,60,154,4],[96,62,154,26],[96,97,154,4],[98,0,157,4],[98,10,157,10,"LoadingView"],[98,21,157,21],[98,24,157,24,"require"],[98,35,157,31],[98,71,157,4],[100,0,159,4],[100,10,159,10,"wsHost"],[100,16,159,16],[100,19,159,19,"port"],[100,23,159,23],[100,28,159,28],[100,32,159,19],[100,36,159,36,"port"],[100,40,159,40],[100,45,159,45],[100,47,159,19],[100,50,159,53,"host"],[100,54,159,19],[100,63,159,61,"port"],[100,67,159,19],[100,70,159,70,"host"],[100,74,159,4],[101,0,160,4],[101,10,160,10,"client"],[101,16,160,16],[101,19,160,19],[101,105,160,46,"wsHost"],[101,111,160,19],[101,121,160,4],[102,0,161,4,"hmrClient"],[102,6,161,4,"hmrClient"],[102,15,161,13],[102,18,161,16,"client"],[102,24,161,4],[104,0,163,4],[104,26,163,28],[104,55,163,4],[105,0,163,4],[105,10,163,11,"fullBundleUrl"],[105,23,163,4],[105,40,163,11,"fullBundleUrl"],[105,53,163,4],[107,0,164,4,"pendingEntryPoints"],[107,6,164,4,"pendingEntryPoints"],[107,24,164,22],[107,25,164,23,"push"],[107,29,164,4],[107,30,168,6,"fullBundleUrl"],[107,43,164,4],[107,54,168,6,"fullBundleUrl"],[107,67,164,4],[107,80,171,16,"wsHost"],[107,86,164,4],[107,111,171,42,"bundleEntry"],[107,122,164,4],[107,140,171,66,"platform"],[107,148,164,4],[108,0,174,4,"client"],[108,6,174,4,"client"],[108,12,174,10],[108,13,174,11,"on"],[108,15,174,4],[108,16,174,14],[108,34,174,4],[108,36,174,34],[108,46,174,34,"e"],[108,47,174,35],[108,49,174,39],[109,0,175,6],[109,12,175,10,"error"],[109,17,175,15],[109,151,175,6],[111,0,180,6],[111,12,180,10],[111,26,180,26],[111,31,180,6],[111,33,180,33],[112,0,181,8,"error"],[112,10,181,8,"error"],[112,15,181,13],[112,82,181,8],[113,0,183,7],[113,9,180,6],[113,15,183,13],[114,0,184,8,"error"],[114,10,184,8,"error"],[114,15,184,13],[114,504,184,8],[115,0,188,7],[117,0,190,6,"error"],[117,8,190,6,"error"],[117,13,190,11],[117,31,192,7,"host"],[117,35,190,11],[117,44,192,15,"port"],[117,48,190,11],[117,67,194,9,"e"],[117,68,194,10],[117,69,194,11,"message"],[117,76,190,6],[118,0,196,6,"setHMRUnavailableReason"],[118,8,196,6,"setHMRUnavailableReason"],[118,31,196,29],[118,32,196,30,"error"],[118,37,196,29],[118,38,196,6],[119,0,197,5],[119,7,174,4],[120,0,199,4,"client"],[120,6,199,4,"client"],[120,12,199,10],[120,13,199,11,"on"],[120,15,199,4],[120,16,199,14],[120,30,199,4],[120,32,199,30],[120,48,199,53],[121,0,199,53],[121,12,199,32,"isInitialUpdate"],[121,27,199,53],[121,35,199,32,"isInitialUpdate"],[121,50,199,53],[122,0,200,6,"currentCompileErrorMessage"],[122,8,200,6,"currentCompileErrorMessage"],[122,34,200,32],[122,37,200,35],[122,41,200,6],[123,0,201,6,"didConnect"],[123,8,201,6,"didConnect"],[123,18,201,16],[123,21,201,19],[123,25,201,6],[125,0,203,6],[125,12,203,10,"client"],[125,18,203,16],[125,19,203,17,"isEnabled"],[125,28,203,10],[125,34,203,32],[125,35,203,33,"isInitialUpdate"],[125,50,203,6],[125,52,203,50],[126,0,204,8,"LoadingView"],[126,10,204,8,"LoadingView"],[126,21,204,19],[126,22,204,20,"showMessage"],[126,33,204,8],[126,34,204,32],[126,49,204,8],[126,51,204,49],[126,60,204,8],[127,0,205,7],[128,0,206,5],[128,7,199,4],[129,0,208,4,"client"],[129,6,208,4,"client"],[129,12,208,10],[129,13,208,11,"on"],[129,15,208,4],[129,16,208,14],[129,24,208,4],[129,26,208,24],[129,43,208,47],[130,0,208,47],[130,12,208,26,"isInitialUpdate"],[130,27,208,47],[130,36,208,26,"isInitialUpdate"],[130,51,208,47],[132,0,209,6],[132,12,209,10,"client"],[132,18,209,16],[132,19,209,17,"isEnabled"],[132,28,209,10],[132,34,209,32],[132,35,209,33,"isInitialUpdate"],[132,50,209,6],[132,52,209,50],[133,0,210,8,"dismissRedbox"],[133,10,210,8,"dismissRedbox"],[133,23,210,21],[134,0,211,8,"LogBoxData"],[134,10,211,8,"LogBoxData"],[134,20,211,18],[134,21,211,19,"clear"],[134,26,211,8],[135,0,212,7],[136,0,213,5],[136,7,208,4],[137,0,215,4,"client"],[137,6,215,4,"client"],[137,12,215,10],[137,13,215,11,"on"],[137,15,215,4],[137,16,215,14],[137,29,215,4],[137,31,215,29],[137,43,215,35],[138,0,216,6,"LoadingView"],[138,8,216,6,"LoadingView"],[138,19,216,17],[138,20,216,18,"hide"],[138,24,216,6],[139,0,217,5],[139,7,215,4],[140,0,219,4,"client"],[140,6,219,4,"client"],[140,12,219,10],[140,13,219,11,"on"],[140,15,219,4],[140,16,219,14],[140,23,219,4],[140,25,219,23],[140,35,219,23,"data"],[140,39,219,27],[140,41,219,31],[141,0,220,6,"LoadingView"],[141,8,220,6,"LoadingView"],[141,19,220,17],[141,20,220,18,"hide"],[141,24,220,6],[143,0,222,6],[143,12,222,10,"data"],[143,16,222,14],[143,17,222,15,"type"],[143,21,222,10],[143,26,222,24],[143,46,222,6],[143,48,222,46],[144,0,223,8,"client"],[144,10,223,8,"client"],[144,16,223,14],[144,17,223,15,"close"],[144,22,223,8],[145,0,224,8,"setHMRUnavailableReason"],[145,10,224,8,"setHMRUnavailableReason"],[145,33,224,31],[145,34,225,10],[145,97,224,31],[145,98,224,8],[146,0,227,7],[146,9,222,6],[146,15,227,13],[146,19,227,17,"data"],[146,23,227,21],[146,24,227,22,"type"],[146,28,227,17],[146,33,227,31],[146,56,227,13],[146,58,227,56],[147,0,228,8,"client"],[147,10,228,8,"client"],[147,16,228,14],[147,17,228,15,"close"],[147,22,228,8],[148,0,229,8,"setHMRUnavailableReason"],[148,10,229,8,"setHMRUnavailableReason"],[148,33,229,31],[148,34,230,10],[148,94,229,31],[148,95,229,8],[149,0,232,7],[149,9,227,13],[149,15,232,13],[150,0,233,8,"currentCompileErrorMessage"],[150,10,233,8,"currentCompileErrorMessage"],[150,36,233,34],[150,39,233,40,"data"],[150,43,233,44],[150,44,233,45,"type"],[150,48,233,34],[150,57,233,53,"data"],[150,61,233,57],[150,62,233,58,"message"],[150,69,233,8],[152,0,234,8],[152,14,234,12,"client"],[152,20,234,18],[152,21,234,19,"isEnabled"],[152,30,234,12],[152,32,234,8],[152,34,234,32],[153,0,235,10,"showCompileError"],[153,12,235,10,"showCompileError"],[153,28,235,26],[154,0,236,9],[155,0,237,7],[156,0,238,5],[156,7,219,4],[157,0,240,4,"client"],[157,6,240,4,"client"],[157,12,240,10],[157,13,240,11,"on"],[157,15,240,4],[157,16,240,14],[157,23,240,4],[157,25,240,23],[157,35,240,23,"data"],[157,39,240,27],[157,41,240,31],[158,0,241,6,"LoadingView"],[158,8,241,6,"LoadingView"],[158,19,241,17],[158,20,241,18,"hide"],[158,24,241,6],[159,0,242,6,"setHMRUnavailableReason"],[159,8,242,6,"setHMRUnavailableReason"],[159,31,242,29],[159,32,242,30],[159,58,242,29],[159,59,242,6],[160,0,243,5],[160,7,240,4],[162,0,245,4],[162,10,245,8,"isEnabled"],[162,19,245,4],[162,21,245,19],[163,0,246,6,"HMRClient"],[163,8,246,6,"HMRClient"],[163,17,246,15],[163,18,246,16,"enable"],[163,24,246,6],[164,0,247,5],[164,7,245,4],[164,13,247,11],[165,0,248,6,"HMRClient"],[165,8,248,6,"HMRClient"],[165,17,248,15],[165,18,248,16,"disable"],[165,25,248,6],[166,0,249,5],[168,0,251,4,"registerBundleEntryPoints"],[168,6,251,4,"registerBundleEntryPoints"],[168,31,251,29],[168,32,251,30,"hmrClient"],[168,41,251,29],[168,42,251,4],[169,0,252,4,"flushEarlyLogs"],[169,6,252,4,"flushEarlyLogs"],[169,20,252,18],[169,21,252,19,"hmrClient"],[169,30,252,18],[169,31,252,4],[170,0,253,3],[171,0,60,44],[171,3,60,0],[173,0,256,0],[173,11,256,9,"setHMRUnavailableReason"],[173,34,256,0],[173,35,256,33,"reason"],[173,41,256,0],[173,43,256,41],[174,0,257,2],[174,48,257,12,"hmrClient"],[174,57,257,2],[174,59,257,23],[174,104,257,2],[176,0,258,2],[176,8,258,6,"hmrUnavailableReason"],[176,28,258,26],[176,33,258,31],[176,37,258,2],[176,39,258,37],[177,0,260,4],[178,0,261,3],[180,0,262,2,"hmrUnavailableReason"],[180,4,262,2,"hmrUnavailableReason"],[180,24,262,22],[180,27,262,25,"reason"],[180,33,262,2],[182,0,267,2],[182,8,267,6,"hmrClient"],[182,17,267,15],[182,18,267,16,"isEnabled"],[182,27,267,6],[182,33,267,31,"didConnect"],[182,43,267,2],[182,45,267,43],[183,0,268,4,"console"],[183,6,268,4,"console"],[183,13,268,11],[183,14,268,12,"warn"],[183,18,268,4],[183,19,268,17,"reason"],[183,25,268,4],[184,0,270,3],[185,0,271,1],[187,0,273,0],[187,11,273,9,"registerBundleEntryPoints"],[187,36,273,0],[187,37,273,35,"client"],[187,43,273,0],[187,45,273,43],[188,0,274,2],[188,8,274,6,"hmrUnavailableReason"],[188,28,274,26],[188,32,274,30],[188,36,274,2],[188,38,274,36],[189,0,275,4],[189,54,275,16,"reload"],[189,60,275,4],[189,61,275,23],[189,100,275,4],[191,0,276,4],[192,0,277,3],[194,0,279,2],[194,8,279,6,"pendingEntryPoints"],[194,26,279,24],[194,27,279,25,"length"],[194,33,279,6],[194,36,279,34],[194,37,279,2],[194,39,279,37],[195,0,280,4,"client"],[195,6,280,4,"client"],[195,12,280,10],[195,13,280,11,"send"],[195,17,280,4],[195,18,281,6,"JSON"],[195,22,281,10],[195,23,281,11,"stringify"],[195,32,281,6],[195,33,281,21],[196,0,282,8,"type"],[196,8,282,8,"type"],[196,12,282,12],[196,14,282,14],[196,36,281,21],[197,0,283,8,"entryPoints"],[197,8,283,8,"entryPoints"],[197,19,283,19],[197,21,283,21,"pendingEntryPoints"],[198,0,281,21],[198,7,281,6],[198,8,280,4],[199,0,286,4,"pendingEntryPoints"],[199,6,286,4,"pendingEntryPoints"],[199,24,286,22],[199,25,286,23,"length"],[199,31,286,4],[199,34,286,32],[199,35,286,4],[200,0,287,3],[201,0,288,1],[203,0,290,0],[203,11,290,9,"flushEarlyLogs"],[203,25,290,0],[203,26,290,24,"client"],[203,32,290,0],[203,34,290,32],[204,0,291,2],[204,8,291,6],[205,0,292,4,"pendingLogs"],[205,6,292,4,"pendingLogs"],[205,17,292,15],[205,18,292,16,"forEach"],[205,25,292,4],[205,26,292,24],[205,43,292,67],[206,0,292,67],[207,0,292,67],[207,12,292,26,"level"],[207,17,292,67],[208,0,292,67],[208,12,292,43,"data"],[208,16,292,67],[210,0,293,6,"HMRClient"],[210,8,293,6,"HMRClient"],[210,17,293,15],[210,18,293,16,"log"],[210,21,293,6],[210,22,293,20,"level"],[210,27,293,6],[210,29,293,27,"data"],[210,33,293,6],[211,0,294,5],[211,7,292,4],[212,0,295,3],[212,5,291,2],[212,14,295,12],[213,0,296,4,"pendingLogs"],[213,6,296,4,"pendingLogs"],[213,17,296,15],[213,18,296,16,"length"],[213,24,296,4],[213,27,296,25],[213,28,296,4],[214,0,297,3],[215,0,298,1],[217,0,300,0],[217,11,300,9,"dismissRedbox"],[217,24,300,0],[217,27,300,25],[218,0,301,2],[218,8,302,4],[218,22,302,20],[218,27,302,4],[218,31,303,4,"NativeRedBox"],[218,56,303,20],[218,60,302,4],[218,64,304,4,"NativeRedBox"],[218,86,304,17,"dismiss"],[218,93,304,4],[218,97,304,28],[218,101,301,2],[218,103,305,4],[219,0,306,4,"NativeRedBox"],[219,28,306,17,"dismiss"],[219,35,306,4],[220,0,307,3],[220,5,301,2],[220,11,307,9],[221,0,308,4],[221,10,308,10,"NativeExceptionsManager"],[221,33,308,33],[221,36,308,36,"require"],[221,47,308,43],[221,102,308,36],[221,103,309,7,"default"],[221,110,308,4],[223,0,310,4,"NativeExceptionsManager"],[223,6,310,4,"NativeExceptionsManager"],[223,29,310,27],[223,33,311,6,"NativeExceptionsManager"],[223,56,311,29],[223,57,311,30,"dismissRedbox"],[223,70,310,4],[223,74,312,6,"NativeExceptionsManager"],[223,97,312,29],[223,98,312,30,"dismissRedbox"],[223,111,312,6],[223,113,310,4],[224,0,313,3],[225,0,314,1],[227,0,316,0],[227,11,316,9,"showCompileError"],[227,27,316,0],[227,30,316,28],[228,0,317,2],[228,8,317,6,"currentCompileErrorMessage"],[228,34,317,32],[228,39,317,37],[228,43,317,2],[228,45,317,43],[229,0,318,4],[230,0,319,3],[232,0,323,2,"dismissRedbox"],[232,4,323,2,"dismissRedbox"],[232,17,323,15],[233,0,325,2],[233,8,325,8,"message"],[233,15,325,15],[233,18,325,18,"currentCompileErrorMessage"],[233,44,325,2],[234,0,326,2,"currentCompileErrorMessage"],[234,4,326,2,"currentCompileErrorMessage"],[234,30,326,28],[234,33,326,31],[234,37,326,2],[235,0,328,2],[235,8,328,8,"error"],[235,13,328,28],[235,16,328,31],[235,20,328,35,"Error"],[235,25,328,31],[235,26,328,41,"message"],[235,33,328,31],[235,34,328,2],[236,0,331,2,"error"],[236,4,331,2,"error"],[236,9,331,7],[236,10,331,8,"preventSymbolication"],[236,30,331,2],[236,33,331,31],[236,37,331,2],[237,0,332,2],[237,10,332,8,"error"],[237,15,332,2],[238,0,333,1],[240,0,335,0,"module"],[240,2,335,0,"module"],[240,8,335,6],[240,9,335,7,"exports"],[240,16,335,0],[240,19,335,17,"HMRClient"],[240,28,335,0]],"functionMap":{"names":["<global>","enable","disable","registerBundle","log","data.map$argument_0","setup","client.on$argument_1","setHMRUnavailableReason","registerBundleEntryPoints","flushEarlyLogs","pendingLogs.forEach$argument_0","dismissRedbox","showCompileError"],"mappings":"AAA;EC4D;GDkC;EEE;GFG;EGE;GHI;EIE;yBCe;kBDS;GJQ;EMI;kCC8B;KDuB;8BCE;KDO;wBCE;KDK;6BCE;KDE;uBCE;KDmB;uBCE;KDG;GNU;AQG;CRe;ASE;CTe;AUE;wBCE;KDE;CVI;AYE;CZc;AaE;CbiB"}},"type":"js/module"}]}