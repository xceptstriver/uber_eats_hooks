{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":145,"column":0}},{"start":{"line":1,"column":0},"end":{"line":145,"column":0}}]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":145,"column":0}}]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":145,"column":0}}]}},{"name":"./LogBoxSymbolication","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0},"end":{"line":13,"column":61}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var LogBoxSymbolication = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"./LogBoxSymbolication\"));\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var LogBoxLog = function () {\n    function LogBoxLog(data) {\n      (0, _classCallCheck2.default)(this, LogBoxLog);\n      this.symbolicated = {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      };\n      this.level = data.level;\n      this.type = data.type;\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.count = 1;\n    }\n\n    (0, _createClass2.default)(LogBoxLog, [{\n      key: \"incrementCount\",\n      value: function incrementCount() {\n        this.count += 1;\n      }\n    }, {\n      key: \"getAvailableStack\",\n      value: function getAvailableStack() {\n        return this.symbolicated.status === 'COMPLETE' ? this.symbolicated.stack : this.stack;\n      }\n    }, {\n      key: \"retrySymbolicate\",\n      value: function retrySymbolicate(callback) {\n        if (this.symbolicated.status !== 'COMPLETE') {\n          LogBoxSymbolication.deleteStack(this.stack);\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"symbolicate\",\n      value: function symbolicate(callback) {\n        if (this.symbolicated.status === 'NONE') {\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"handleSymbolicate\",\n      value: function handleSymbolicate(callback) {\n        var _this = this;\n\n        if (this.symbolicated.status !== 'PENDING') {\n          this.updateStatus(null, null, null, callback);\n          LogBoxSymbolication.symbolicate(this.stack).then(function (data) {\n            _this.updateStatus(null, data == null ? void 0 : data.stack, data == null ? void 0 : data.codeFrame, callback);\n          }, function (error) {\n            _this.updateStatus(error, null, null, callback);\n          });\n        }\n      }\n    }, {\n      key: \"updateStatus\",\n      value: function updateStatus(error, stack, codeFrame, callback) {\n        var lastStatus = this.symbolicated.status;\n\n        if (error != null) {\n          this.symbolicated = {\n            error: error,\n            stack: null,\n            status: 'FAILED'\n          };\n        } else if (stack != null) {\n          if (codeFrame) {\n            this.codeFrame = codeFrame;\n          }\n\n          this.symbolicated = {\n            error: null,\n            stack: stack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicated = {\n            error: null,\n            stack: null,\n            status: 'PENDING'\n          };\n        }\n\n        if (callback && lastStatus !== this.symbolicated.status) {\n          callback(this.symbolicated.status);\n        }\n      }\n    }]);\n    return LogBoxLog;\n  }();\n\n  var _default = LogBoxLog;\n  exports.default = _default;\n});","lineCount":116,"map":[[2,0,11,0],[13,0,13,0],[19,6,38,6,"LogBoxLog"],[19,15],[20,0,58,2],[20,23,58,14,"data"],[20,27,58,2],[20,29,58,35],[21,0,58,35],[22,0,58,35],[22,11,48,2,"symbolicated"],[22,23,58,35],[22,26,52,67],[23,0,53,4,"error"],[23,8,53,4,"error"],[23,13,53,9],[23,15,53,11],[23,19,52,67],[24,0,54,4,"stack"],[24,8,54,4,"stack"],[24,13,54,9],[24,15,54,11],[24,19,52,67],[25,0,55,4,"status"],[25,8,55,4,"status"],[25,14,55,10],[25,16,55,12],[26,0,52,67],[26,7,58,35],[27,0,59,4],[27,11,59,9,"level"],[27,16,59,4],[27,19,59,17,"data"],[27,23,59,21],[27,24,59,22,"level"],[27,29,59,4],[28,0,60,4],[28,11,60,9,"type"],[28,15,60,4],[28,18,60,16,"data"],[28,22,60,20],[28,23,60,21,"type"],[28,27,60,4],[29,0,61,4],[29,11,61,9,"message"],[29,18,61,4],[29,21,61,19,"data"],[29,25,61,23],[29,26,61,24,"message"],[29,33,61,4],[30,0,62,4],[30,11,62,9,"stack"],[30,16,62,4],[30,19,62,17,"data"],[30,23,62,21],[30,24,62,22,"stack"],[30,29,62,4],[31,0,63,4],[31,11,63,9,"category"],[31,19,63,4],[31,22,63,20,"data"],[31,26,63,24],[31,27,63,25,"category"],[31,35,63,4],[32,0,64,4],[32,11,64,9,"componentStack"],[32,25,64,4],[32,28,64,26,"data"],[32,32,64,30],[32,33,64,31,"componentStack"],[32,47,64,4],[33,0,65,4],[33,11,65,9,"codeFrame"],[33,20,65,4],[33,23,65,21,"data"],[33,27,65,25],[33,28,65,26,"codeFrame"],[33,37,65,4],[34,0,66,4],[34,11,66,9,"isComponentError"],[34,27,66,4],[34,30,66,28,"data"],[34,34,66,32],[34,35,66,33,"isComponentError"],[34,51,66,4],[35,0,67,4],[35,11,67,9,"count"],[35,16,67,4],[35,19,67,17],[35,20,67,4],[36,0,68,3],[40,13,70,2],[40,39,70,25],[41,0,71,4],[41,13,71,9,"count"],[41,18,71,4],[41,22,71,18],[41,23,71,4],[42,0,72,3],[45,13,74,2],[45,42,74,29],[46,0,75,4],[46,15,75,11],[46,20,75,16,"symbolicated"],[46,32,75,11],[46,33,75,29,"status"],[46,39,75,11],[46,44,75,40],[46,54,75,11],[46,57,76,8],[46,62,76,13,"symbolicated"],[46,74,76,8],[46,75,76,26,"stack"],[46,80,75,11],[46,83,77,8],[46,88,77,13,"stack"],[46,93,75,4],[47,0,78,3],[50,13,80,2],[50,39,80,19,"callback"],[50,47,80,2],[50,49,80,75],[51,0,81,4],[51,12,81,8],[51,17,81,13,"symbolicated"],[51,29,81,8],[51,30,81,26,"status"],[51,36,81,8],[51,41,81,37],[51,51,81,4],[51,53,81,49],[52,0,82,6,"LogBoxSymbolication"],[52,10,82,6,"LogBoxSymbolication"],[52,29,82,25],[52,30,82,26,"deleteStack"],[52,41,82,6],[52,42,82,38],[52,47,82,43,"stack"],[52,52,82,6],[53,0,83,6],[53,15,83,11,"handleSymbolicate"],[53,32,83,6],[53,33,83,29,"callback"],[53,41,83,6],[54,0,84,5],[55,0,85,3],[58,13,87,2],[58,34,87,14,"callback"],[58,42,87,2],[58,44,87,70],[59,0,88,4],[59,12,88,8],[59,17,88,13,"symbolicated"],[59,29,88,8],[59,30,88,26,"status"],[59,36,88,8],[59,41,88,37],[59,47,88,4],[59,49,88,45],[60,0,89,6],[60,15,89,11,"handleSymbolicate"],[60,32,89,6],[60,33,89,29,"callback"],[60,41,89,6],[61,0,90,5],[62,0,91,3],[65,13,93,2],[65,40,93,20,"callback"],[65,48,93,2],[65,50,93,76],[66,0,93,76],[68,0,94,4],[68,12,94,8],[68,17,94,13,"symbolicated"],[68,29,94,8],[68,30,94,26,"status"],[68,36,94,8],[68,41,94,37],[68,50,94,4],[68,52,94,48],[69,0,95,6],[69,15,95,11,"updateStatus"],[69,27,95,6],[69,28,95,24],[69,32,95,6],[69,34,95,30],[69,38,95,6],[69,40,95,36],[69,44,95,6],[69,46,95,42,"callback"],[69,54,95,6],[70,0,96,6,"LogBoxSymbolication"],[70,10,96,6,"LogBoxSymbolication"],[70,29,96,25],[70,30,96,26,"symbolicate"],[70,41,96,6],[70,42,96,38],[70,47,96,43,"stack"],[70,52,96,6],[70,54,96,50,"then"],[70,58,96,6],[70,59,97,8],[70,69,97,8,"data"],[70,73,97,12],[70,75,97,16],[71,0,98,10],[71,12,98,10],[71,17,98,14],[71,18,98,15,"updateStatus"],[71,30,98,10],[71,31,98,28],[71,35,98,10],[71,37,98,34,"data"],[71,41,98,10],[71,61,98,34,"data"],[71,65,98,38],[71,66,98,40,"stack"],[71,71,98,10],[71,73,98,47,"data"],[71,77,98,10],[71,97,98,47,"data"],[71,101,98,51],[71,102,98,53,"codeFrame"],[71,111,98,10],[71,113,98,64,"callback"],[71,121,98,10],[72,0,99,9],[72,11,96,6],[72,13,100,8],[72,23,100,8,"error"],[72,28,100,13],[72,30,100,17],[73,0,101,10],[73,12,101,10],[73,17,101,14],[73,18,101,15,"updateStatus"],[73,30,101,10],[73,31,101,28,"error"],[73,36,101,10],[73,38,101,35],[73,42,101,10],[73,44,101,41],[73,48,101,10],[73,50,101,47,"callback"],[73,58,101,10],[74,0,102,9],[74,11,96,6],[75,0,104,5],[76,0,105,3],[79,13,107,2],[79,35,108,4,"error"],[79,40,107,2],[79,42,109,4,"stack"],[79,47,107,2],[79,49,110,4,"codeFrame"],[79,58,107,2],[79,60,111,4,"callback"],[79,68,107,2],[79,70,112,10],[80,0,113,4],[80,12,113,10,"lastStatus"],[80,22,113,20],[80,25,113,23],[80,30,113,28,"symbolicated"],[80,42,113,23],[80,43,113,41,"status"],[80,49,113,4],[82,0,114,4],[82,12,114,8,"error"],[82,17,114,13],[82,21,114,17],[82,25,114,4],[82,27,114,23],[83,0,115,6],[83,15,115,11,"symbolicated"],[83,27,115,6],[83,30,115,26],[84,0,116,8,"error"],[84,12,116,8,"error"],[84,17,116,13],[84,19,116,8,"error"],[84,24,115,26],[85,0,117,8,"stack"],[85,12,117,8,"stack"],[85,17,117,13],[85,19,117,15],[85,23,115,26],[86,0,118,8,"status"],[86,12,118,8,"status"],[86,18,118,14],[86,20,118,16],[87,0,115,26],[87,11,115,6],[88,0,120,5],[88,9,114,4],[88,15,120,11],[88,19,120,15,"stack"],[88,24,120,20],[88,28,120,24],[88,32,120,11],[88,34,120,30],[89,0,121,6],[89,14,121,10,"codeFrame"],[89,23,121,6],[89,25,121,21],[90,0,122,8],[90,17,122,13,"codeFrame"],[90,26,122,8],[90,29,122,25,"codeFrame"],[90,38,122,8],[91,0,123,7],[93,0,125,6],[93,15,125,11,"symbolicated"],[93,27,125,6],[93,30,125,26],[94,0,126,8,"error"],[94,12,126,8,"error"],[94,17,126,13],[94,19,126,15],[94,23,125,26],[95,0,127,8,"stack"],[95,12,127,8,"stack"],[95,17,127,13],[95,19,127,8,"stack"],[95,24,125,26],[96,0,128,8,"status"],[96,12,128,8,"status"],[96,18,128,14],[96,20,128,16],[97,0,125,26],[97,11,125,6],[98,0,130,5],[98,9,120,11],[98,15,130,11],[99,0,131,6],[99,15,131,11,"symbolicated"],[99,27,131,6],[99,30,131,26],[100,0,132,8,"error"],[100,12,132,8,"error"],[100,17,132,13],[100,19,132,15],[100,23,131,26],[101,0,133,8,"stack"],[101,12,133,8,"stack"],[101,17,133,13],[101,19,133,15],[101,23,131,26],[102,0,134,8,"status"],[102,12,134,8,"status"],[102,18,134,14],[102,20,134,16],[103,0,131,26],[103,11,131,6],[104,0,136,5],[106,0,138,4],[106,12,138,8,"callback"],[106,20,138,16],[106,24,138,20,"lastStatus"],[106,34,138,30],[106,39,138,35],[106,44,138,40,"symbolicated"],[106,56,138,35],[106,57,138,53,"status"],[106,63,138,4],[106,65,138,61],[107,0,139,6,"callback"],[107,10,139,6,"callback"],[107,18,139,14],[107,19,139,15],[107,24,139,20,"symbolicated"],[107,36,139,15],[107,37,139,33,"status"],[107,43,139,14],[107,44,139,6],[108,0,140,5],[109,0,141,3],[114,17,144,15,"LogBoxLog"],[114,26]],"functionMap":{"names":["<global>","LogBoxLog","constructor","incrementCount","getAvailableStack","retrySymbolicate","symbolicate","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus"],"mappings":"AAA;ACqC;ECoB;GDU;EEE;GFE;EGE;GHI;EIE;GJK;EKE;GLI;EME;QCI;SDE;QEC;SFE;GNG;ESE;GTkC;CDC"}},"type":"js/module"}]}