{"dependencies":[{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":41,"column":10},"end":{"line":45,"column":11}}]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":157,"column":2},"end":{"line":161,"column":4}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function elementsThatOverlapOffsets(offsets, itemCount, getFrameMetrics) {\n    var out = [];\n    var outLength = 0;\n\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = getFrameMetrics(ii);\n      var trailingOffset = frame.offset + frame.length;\n\n      for (var kk = 0; kk < offsets.length; kk++) {\n        if (out[kk] == null && trailingOffset >= offsets[kk]) {\n          out[kk] = ii;\n          outLength++;\n\n          if (kk === offsets.length - 1) {\n            _$$_REQUIRE(_dependencyMap[0], \"invariant\")(outLength === offsets.length, 'bad offsets input, should be in increasing order: %s', JSON.stringify(offsets));\n\n            return out;\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  function newRangeCount(prev, next) {\n    return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));\n  }\n\n  function computeWindowedRenderLimits(props, prev, getFrameMetricsApprox, scrollMetrics) {\n    var data = props.data,\n        getItemCount = props.getItemCount,\n        maxToRenderPerBatch = props.maxToRenderPerBatch,\n        windowSize = props.windowSize;\n    var itemCount = getItemCount(data);\n\n    if (itemCount === 0) {\n      return prev;\n    }\n\n    var offset = scrollMetrics.offset,\n        velocity = scrollMetrics.velocity,\n        visibleLength = scrollMetrics.visibleLength;\n    var visibleBegin = Math.max(0, offset);\n    var visibleEnd = visibleBegin + visibleLength;\n    var overscanLength = (windowSize - 1) * visibleLength;\n    var leadFactor = 0.5;\n    var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';\n    var overscanBegin = Math.max(0, visibleBegin - (1 - leadFactor) * overscanLength);\n    var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);\n    var lastItemOffset = getFrameMetricsApprox(itemCount - 1).offset;\n\n    if (lastItemOffset < overscanBegin) {\n      return {\n        first: Math.max(0, itemCount - 1 - maxToRenderPerBatch),\n        last: itemCount - 1\n      };\n    }\n\n    var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props.getItemCount(props.data), getFrameMetricsApprox),\n        _elementsThatOverlapO2 = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\")(_elementsThatOverlapO, 4),\n        overscanFirst = _elementsThatOverlapO2[0],\n        first = _elementsThatOverlapO2[1],\n        last = _elementsThatOverlapO2[2],\n        overscanLast = _elementsThatOverlapO2[3];\n\n    overscanFirst = overscanFirst == null ? 0 : overscanFirst;\n    first = first == null ? Math.max(0, overscanFirst) : first;\n    overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;\n    last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;\n    var visible = {\n      first: first,\n      last: last\n    };\n    var newCellCount = newRangeCount(prev, visible);\n\n    while (true) {\n      if (first <= overscanFirst && last >= overscanLast) {\n        break;\n      }\n\n      var maxNewCells = newCellCount >= maxToRenderPerBatch;\n      var firstWillAddMore = first <= prev.first || first > prev.last;\n      var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);\n      var lastWillAddMore = last >= prev.last || last < prev.first;\n      var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);\n\n      if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {\n        break;\n      }\n\n      if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {\n        if (firstWillAddMore) {\n          newCellCount++;\n        }\n\n        first--;\n      }\n\n      if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {\n        if (lastWillAddMore) {\n          newCellCount++;\n        }\n\n        last++;\n      }\n    }\n\n    if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {\n      throw new Error('Bad window calculation ' + JSON.stringify({\n        first: first,\n        last: last,\n        itemCount: itemCount,\n        overscanFirst: overscanFirst,\n        overscanLast: overscanLast,\n        visible: visible\n      }));\n    }\n\n    return {\n      first: first,\n      last: last\n    };\n  }\n\n  var VirtualizeUtils = {\n    computeWindowedRenderLimits: computeWindowedRenderLimits,\n    elementsThatOverlapOffsets: elementsThatOverlapOffsets,\n    newRangeCount: newRangeCount\n  };\n  module.exports = VirtualizeUtils;\n});","lineCount":135,"map":[[2,0,11,0],[4,0,20,0],[4,11,20,9,"elementsThatOverlapOffsets"],[4,37,20,0],[4,38,21,2,"offsets"],[4,45,20,0],[4,47,22,2,"itemCount"],[4,56,20,0],[4,58,23,2,"getFrameMetrics"],[4,73,20,0],[4,75,30,17],[5,0,31,2],[5,8,31,8,"out"],[5,11,31,11],[5,14,31,14],[5,16,31,2],[6,0,32,2],[6,8,32,6,"outLength"],[6,17,32,15],[6,20,32,18],[6,21,32,2],[8,0,33,2],[8,9,33,7],[8,13,33,11,"ii"],[8,15,33,13],[8,18,33,16],[8,19,33,2],[8,21,33,19,"ii"],[8,23,33,21],[8,26,33,24,"itemCount"],[8,35,33,2],[8,37,33,35,"ii"],[8,39,33,37],[8,41,33,2],[8,43,33,41],[9,0,34,4],[9,10,34,10,"frame"],[9,15,34,15],[9,18,34,18,"getFrameMetrics"],[9,33,34,33],[9,34,34,34,"ii"],[9,36,34,33],[9,37,34,4],[10,0,35,4],[10,10,35,10,"trailingOffset"],[10,24,35,24],[10,27,35,27,"frame"],[10,32,35,32],[10,33,35,33,"offset"],[10,39,35,27],[10,42,35,42,"frame"],[10,47,35,47],[10,48,35,48,"length"],[10,54,35,4],[12,0,36,4],[12,11,36,9],[12,15,36,13,"kk"],[12,17,36,15],[12,20,36,18],[12,21,36,4],[12,23,36,21,"kk"],[12,25,36,23],[12,28,36,26,"offsets"],[12,35,36,33],[12,36,36,34,"length"],[12,42,36,4],[12,44,36,42,"kk"],[12,46,36,44],[12,48,36,4],[12,50,36,48],[13,0,37,6],[13,12,37,10,"out"],[13,15,37,13],[13,16,37,14,"kk"],[13,18,37,13],[13,19,37,10],[13,23,37,21],[13,27,37,10],[13,31,37,29,"trailingOffset"],[13,45,37,43],[13,49,37,47,"offsets"],[13,56,37,54],[13,57,37,55,"kk"],[13,59,37,54],[13,60,37,6],[13,62,37,60],[14,0,38,8,"out"],[14,10,38,8,"out"],[14,13,38,11],[14,14,38,12,"kk"],[14,16,38,11],[14,17,38,8],[14,20,38,18,"ii"],[14,22,38,8],[15,0,39,8,"outLength"],[15,10,39,8,"outLength"],[15,19,39,17],[17,0,40,8],[17,14,40,12,"kk"],[17,16,40,14],[17,21,40,19,"offsets"],[17,28,40,26],[17,29,40,27,"length"],[17,35,40,19],[17,38,40,36],[17,39,40,8],[17,41,40,39],[18,0,41,10],[18,56,42,12,"outLength"],[18,65,42,21],[18,70,42,26,"offsets"],[18,77,42,33],[18,78,42,34,"length"],[18,84,41,10],[18,86,43,12],[18,140,41,10],[18,142,44,12,"JSON"],[18,146,44,16],[18,147,44,17,"stringify"],[18,156,44,12],[18,157,44,27,"offsets"],[18,164,44,12],[18,165,41,10],[20,0,46,10],[20,19,46,17,"out"],[20,22,46,10],[21,0,47,9],[22,0,48,7],[23,0,49,5],[24,0,50,3],[26,0,51,2],[26,11,51,9,"out"],[26,14,51,2],[27,0,52,1],[29,0,60,0],[29,11,60,9,"newRangeCount"],[29,24,60,0],[29,25,61,2,"prev"],[29,29,60,0],[29,31,66,2,"next"],[29,35,60,0],[29,37,71,10],[30,0,72,2],[30,11,73,4,"next"],[30,15,73,8],[30,16,73,9,"last"],[30,20,73,4],[30,23,74,4,"next"],[30,27,74,8],[30,28,74,9,"first"],[30,33,73,4],[30,36,75,4],[30,37,73,4],[30,40,76,4,"Math"],[30,44,76,8],[30,45,76,9,"max"],[30,48,76,4],[30,49,77,6],[30,50,76,4],[30,52,78,6],[30,56,78,10,"Math"],[30,60,78,14],[30,61,78,15,"min"],[30,64,78,10],[30,65,78,19,"next"],[30,69,78,23],[30,70,78,24,"last"],[30,74,78,10],[30,76,78,30,"prev"],[30,80,78,34],[30,81,78,35,"last"],[30,85,78,10],[30,86,78,6],[30,89,78,43,"Math"],[30,93,78,47],[30,94,78,48,"max"],[30,97,78,43],[30,98,78,52,"next"],[30,102,78,56],[30,103,78,57,"first"],[30,108,78,43],[30,110,78,64,"prev"],[30,114,78,68],[30,115,78,69,"first"],[30,120,78,43],[30,121,76,4],[30,122,72,2],[31,0,81,1],[33,0,89,0],[33,11,89,9,"computeWindowedRenderLimits"],[33,38,89,0],[33,39,90,2,"props"],[33,44,89,0],[33,46,97,2,"prev"],[33,50,89,0],[33,52,102,2,"getFrameMetricsApprox"],[33,73,89,0],[33,75,109,2,"scrollMetrics"],[33,88,89,0],[33,90,120,2],[34,0,121,2],[34,8,121,9,"data"],[34,12,121,2],[34,15,121,64,"props"],[34,20,121,2],[34,21,121,9,"data"],[34,25,121,2],[35,0,121,2],[35,8,121,15,"getItemCount"],[35,20,121,2],[35,23,121,64,"props"],[35,28,121,2],[35,29,121,15,"getItemCount"],[35,41,121,2],[36,0,121,2],[36,8,121,29,"maxToRenderPerBatch"],[36,27,121,2],[36,30,121,64,"props"],[36,35,121,2],[36,36,121,29,"maxToRenderPerBatch"],[36,55,121,2],[37,0,121,2],[37,8,121,50,"windowSize"],[37,18,121,2],[37,21,121,64,"props"],[37,26,121,2],[37,27,121,50,"windowSize"],[37,37,121,2],[38,0,122,2],[38,8,122,8,"itemCount"],[38,17,122,17],[38,20,122,20,"getItemCount"],[38,32,122,32],[38,33,122,33,"data"],[38,37,122,32],[38,38,122,2],[40,0,123,2],[40,8,123,6,"itemCount"],[40,17,123,15],[40,22,123,20],[40,23,123,2],[40,25,123,23],[41,0,124,4],[41,13,124,11,"prev"],[41,17,124,4],[42,0,125,3],[44,0,126,2],[44,8,126,9,"offset"],[44,14,126,2],[44,17,126,44,"scrollMetrics"],[44,30,126,2],[44,31,126,9,"offset"],[44,37,126,2],[45,0,126,2],[45,8,126,17,"velocity"],[45,16,126,2],[45,19,126,44,"scrollMetrics"],[45,32,126,2],[45,33,126,17,"velocity"],[45,41,126,2],[46,0,126,2],[46,8,126,27,"visibleLength"],[46,21,126,2],[46,24,126,44,"scrollMetrics"],[46,37,126,2],[46,38,126,27,"visibleLength"],[46,51,126,2],[47,0,131,2],[47,8,131,8,"visibleBegin"],[47,20,131,20],[47,23,131,23,"Math"],[47,27,131,27],[47,28,131,28,"max"],[47,31,131,23],[47,32,131,32],[47,33,131,23],[47,35,131,35,"offset"],[47,41,131,23],[47,42,131,2],[48,0,132,2],[48,8,132,8,"visibleEnd"],[48,18,132,18],[48,21,132,21,"visibleBegin"],[48,33,132,33],[48,36,132,36,"visibleLength"],[48,49,132,2],[49,0,133,2],[49,8,133,8,"overscanLength"],[49,22,133,22],[49,25,133,25],[49,26,133,26,"windowSize"],[49,36,133,36],[49,39,133,39],[49,40,133,25],[49,44,133,44,"visibleLength"],[49,57,133,2],[50,0,136,2],[50,8,136,8,"leadFactor"],[50,18,136,18],[50,21,136,21],[50,24,136,2],[51,0,138,2],[51,8,138,8,"fillPreference"],[51,22,138,22],[51,25,139,4,"velocity"],[51,33,139,12],[51,36,139,15],[51,37,139,4],[51,40,139,19],[51,47,139,4],[51,50,139,29,"velocity"],[51,58,139,37],[51,61,139,40],[51,62,139,41],[51,63,139,29],[51,66,139,45],[51,74,139,29],[51,77,139,56],[51,83,138,2],[52,0,141,2],[52,8,141,8,"overscanBegin"],[52,21,141,21],[52,24,141,24,"Math"],[52,28,141,28],[52,29,141,29,"max"],[52,32,141,24],[52,33,142,4],[52,34,141,24],[52,36,143,4,"visibleBegin"],[52,48,143,16],[52,51,143,19],[52,52,143,20],[52,56,143,24,"leadFactor"],[52,66,143,19],[52,70,143,38,"overscanLength"],[52,84,141,24],[52,85,141,2],[53,0,145,2],[53,8,145,8,"overscanEnd"],[53,19,145,19],[53,22,145,22,"Math"],[53,26,145,26],[53,27,145,27,"max"],[53,30,145,22],[53,31,145,31],[53,32,145,22],[53,34,145,34,"visibleEnd"],[53,44,145,44],[53,47,145,47,"leadFactor"],[53,57,145,57],[53,60,145,60,"overscanLength"],[53,74,145,22],[53,75,145,2],[54,0,147,2],[54,8,147,8,"lastItemOffset"],[54,22,147,22],[54,25,147,25,"getFrameMetricsApprox"],[54,46,147,46],[54,47,147,47,"itemCount"],[54,56,147,56],[54,59,147,59],[54,60,147,46],[54,61,147,25],[54,62,147,62,"offset"],[54,68,147,2],[56,0,148,2],[56,8,148,6,"lastItemOffset"],[56,22,148,20],[56,25,148,23,"overscanBegin"],[56,38,148,2],[56,40,148,38],[57,0,150,4],[57,13,150,11],[58,0,151,6,"first"],[58,8,151,6,"first"],[58,13,151,11],[58,15,151,13,"Math"],[58,19,151,17],[58,20,151,18,"max"],[58,23,151,13],[58,24,151,22],[58,25,151,13],[58,27,151,25,"itemCount"],[58,36,151,34],[58,39,151,37],[58,40,151,25],[58,43,151,41,"maxToRenderPerBatch"],[58,62,151,13],[58,63,150,11],[59,0,152,6,"last"],[59,8,152,6,"last"],[59,12,152,10],[59,14,152,12,"itemCount"],[59,23,152,21],[59,26,152,24],[60,0,150,11],[60,7,150,4],[61,0,154,3],[63,0,157,2],[63,32,157,51,"elementsThatOverlapOffsets"],[63,58,157,77],[63,59,158,4],[63,60,158,5,"overscanBegin"],[63,73,158,4],[63,75,158,20,"visibleBegin"],[63,87,158,4],[63,89,158,34,"visibleEnd"],[63,99,158,4],[63,101,158,46,"overscanEnd"],[63,112,158,4],[63,113,157,77],[63,115,159,4,"props"],[63,120,159,9],[63,121,159,10,"getItemCount"],[63,133,159,4],[63,134,159,23,"props"],[63,139,159,28],[63,140,159,29,"data"],[63,144,159,4],[63,145,157,77],[63,147,160,4,"getFrameMetricsApprox"],[63,168,157,77],[63,169,157,2],[64,0,157,2],[65,0,157,2],[65,8,157,7,"overscanFirst"],[65,21,157,2],[66,0,157,2],[66,8,157,22,"first"],[66,13,157,2],[67,0,157,2],[67,8,157,29,"last"],[67,12,157,2],[68,0,157,2],[68,8,157,35,"overscanLast"],[68,20,157,2],[70,0,162,2,"overscanFirst"],[70,4,162,2,"overscanFirst"],[70,17,162,15],[70,20,162,18,"overscanFirst"],[70,33,162,31],[70,37,162,35],[70,41,162,18],[70,44,162,42],[70,45,162,18],[70,48,162,46,"overscanFirst"],[70,61,162,2],[71,0,163,2,"first"],[71,4,163,2,"first"],[71,9,163,7],[71,12,163,10,"first"],[71,17,163,15],[71,21,163,19],[71,25,163,10],[71,28,163,26,"Math"],[71,32,163,30],[71,33,163,31,"max"],[71,36,163,26],[71,37,163,35],[71,38,163,26],[71,40,163,38,"overscanFirst"],[71,53,163,26],[71,54,163,10],[71,57,163,55,"first"],[71,62,163,2],[72,0,164,2,"overscanLast"],[72,4,164,2,"overscanLast"],[72,16,164,14],[72,19,164,17,"overscanLast"],[72,31,164,29],[72,35,164,33],[72,39,164,17],[72,42,164,40,"itemCount"],[72,51,164,49],[72,54,164,52],[72,55,164,17],[72,58,164,56,"overscanLast"],[72,70,164,2],[73,0,165,2,"last"],[73,4,165,2,"last"],[73,8,165,6],[73,11,166,4,"last"],[73,15,166,8],[73,19,166,12],[73,23,166,4],[73,26,167,8,"Math"],[73,30,167,12],[73,31,167,13,"min"],[73,34,167,8],[73,35,167,17,"overscanLast"],[73,47,167,8],[73,49,167,31,"first"],[73,54,167,36],[73,57,167,39,"maxToRenderPerBatch"],[73,76,167,31],[73,79,167,61],[73,80,167,8],[73,81,166,4],[73,84,168,8,"last"],[73,88,165,2],[74,0,169,2],[74,8,169,8,"visible"],[74,15,169,15],[74,18,169,18],[75,0,169,19,"first"],[75,6,169,19,"first"],[75,11,169,24],[75,13,169,19,"first"],[75,18,169,18],[76,0,169,26,"last"],[76,6,169,26,"last"],[76,10,169,30],[76,12,169,26,"last"],[77,0,169,18],[77,5,169,2],[78,0,175,2],[78,8,175,6,"newCellCount"],[78,20,175,18],[78,23,175,21,"newRangeCount"],[78,36,175,34],[78,37,175,35,"prev"],[78,41,175,34],[78,43,175,41,"visible"],[78,50,175,34],[78,51,175,2],[80,0,177,2],[80,11,177,9],[80,15,177,2],[80,17,177,15],[81,0,178,4],[81,10,178,8,"first"],[81,15,178,13],[81,19,178,17,"overscanFirst"],[81,32,178,8],[81,36,178,34,"last"],[81,40,178,38],[81,44,178,42,"overscanLast"],[81,56,178,4],[81,58,178,56],[82,0,180,6],[83,0,181,5],[85,0,182,4],[85,10,182,10,"maxNewCells"],[85,21,182,21],[85,24,182,24,"newCellCount"],[85,36,182,36],[85,40,182,40,"maxToRenderPerBatch"],[85,59,182,4],[86,0,183,4],[86,10,183,10,"firstWillAddMore"],[86,26,183,26],[86,29,183,29,"first"],[86,34,183,34],[86,38,183,38,"prev"],[86,42,183,42],[86,43,183,43,"first"],[86,48,183,29],[86,52,183,52,"first"],[86,57,183,57],[86,60,183,60,"prev"],[86,64,183,64],[86,65,183,65,"last"],[86,69,183,4],[87,0,184,4],[87,10,184,10,"firstShouldIncrement"],[87,30,184,30],[87,33,185,6,"first"],[87,38,185,11],[87,41,185,14,"overscanFirst"],[87,54,185,6],[87,59,185,32],[87,60,185,33,"maxNewCells"],[87,71,185,32],[87,75,185,48],[87,76,185,49,"firstWillAddMore"],[87,92,185,6],[87,93,184,4],[88,0,186,4],[88,10,186,10,"lastWillAddMore"],[88,25,186,25],[88,28,186,28,"last"],[88,32,186,32],[88,36,186,36,"prev"],[88,40,186,40],[88,41,186,41,"last"],[88,45,186,28],[88,49,186,49,"last"],[88,53,186,53],[88,56,186,56,"prev"],[88,60,186,60],[88,61,186,61,"first"],[88,66,186,4],[89,0,187,4],[89,10,187,10,"lastShouldIncrement"],[89,29,187,29],[89,32,188,6,"last"],[89,36,188,10],[89,39,188,13,"overscanLast"],[89,51,188,6],[89,56,188,30],[89,57,188,31,"maxNewCells"],[89,68,188,30],[89,72,188,46],[89,73,188,47,"lastWillAddMore"],[89,88,188,6],[89,89,187,4],[91,0,189,4],[91,10,189,8,"maxNewCells"],[91,21,189,19],[91,25,189,23],[91,26,189,24,"firstShouldIncrement"],[91,46,189,8],[91,50,189,48],[91,51,189,49,"lastShouldIncrement"],[91,70,189,4],[91,72,189,70],[92,0,194,6],[93,0,195,5],[95,0,196,4],[95,10,197,6,"firstShouldIncrement"],[95,30,197,26],[95,34,198,6],[95,36,198,8,"fillPreference"],[95,50,198,22],[95,55,198,27],[95,62,198,8],[95,66,198,38,"lastShouldIncrement"],[95,85,198,8],[95,89,198,61,"lastWillAddMore"],[95,104,198,6],[95,105,196,4],[95,107,199,6],[96,0,200,6],[96,12,200,10,"firstWillAddMore"],[96,28,200,6],[96,30,200,28],[97,0,201,8,"newCellCount"],[97,10,201,8,"newCellCount"],[97,22,201,20],[98,0,202,7],[100,0,203,6,"first"],[100,8,203,6,"first"],[100,13,203,11],[101,0,204,5],[103,0,205,4],[103,10,206,6,"lastShouldIncrement"],[103,29,206,25],[103,33,207,6],[103,35,207,8,"fillPreference"],[103,49,207,22],[103,54,207,27],[103,62,207,8],[103,66,207,39,"firstShouldIncrement"],[103,86,207,8],[103,90,207,63,"firstWillAddMore"],[103,106,207,6],[103,107,205,4],[103,109,208,6],[104,0,209,6],[104,12,209,10,"lastWillAddMore"],[104,27,209,6],[104,29,209,27],[105,0,210,8,"newCellCount"],[105,10,210,8,"newCellCount"],[105,22,210,20],[106,0,211,7],[108,0,212,6,"last"],[108,8,212,6,"last"],[108,12,212,10],[109,0,213,5],[110,0,214,3],[112,0,215,2],[112,8,216,4],[112,10,217,6,"last"],[112,14,217,10],[112,18,217,14,"first"],[112,23,217,6],[112,27,218,6,"first"],[112,32,218,11],[112,36,218,15],[112,37,217,6],[112,41,219,6,"last"],[112,45,219,10],[112,48,219,13,"itemCount"],[112,57,217,6],[112,61,220,6,"first"],[112,66,220,11],[112,70,220,15,"overscanFirst"],[112,83,217,6],[112,87,221,6,"last"],[112,91,221,10],[112,95,221,14,"overscanLast"],[112,107,217,6],[112,111,222,6,"first"],[112,116,222,11],[112,120,222,15,"visible"],[112,127,222,22],[112,128,222,23,"first"],[112,133,217,6],[112,137,223,6,"last"],[112,141,223,10],[112,145,223,14,"visible"],[112,152,223,21],[112,153,223,22,"last"],[112,157,216,4],[112,158,215,2],[112,160,225,4],[113,0,226,4],[113,12,226,10],[113,16,226,14,"Error"],[113,21,226,10],[113,22,227,6],[113,50,228,8,"JSON"],[113,54,228,12],[113,55,228,13,"stringify"],[113,64,228,8],[113,65,228,23],[114,0,229,10,"first"],[114,8,229,10,"first"],[114,13,229,15],[114,15,229,10,"first"],[114,20,228,23],[115,0,230,10,"last"],[115,8,230,10,"last"],[115,12,230,14],[115,14,230,10,"last"],[115,18,228,23],[116,0,231,10,"itemCount"],[116,8,231,10,"itemCount"],[116,17,231,19],[116,19,231,10,"itemCount"],[116,28,228,23],[117,0,232,10,"overscanFirst"],[117,8,232,10,"overscanFirst"],[117,21,232,23],[117,23,232,10,"overscanFirst"],[117,36,228,23],[118,0,233,10,"overscanLast"],[118,8,233,10,"overscanLast"],[118,20,233,22],[118,22,233,10,"overscanLast"],[118,34,228,23],[119,0,234,10,"visible"],[119,8,234,10,"visible"],[119,15,234,17],[119,17,234,10,"visible"],[120,0,228,23],[120,7,228,8],[120,8,226,10],[120,9,226,4],[121,0,237,3],[123,0,238,2],[123,11,238,9],[124,0,238,10,"first"],[124,6,238,10,"first"],[124,11,238,15],[124,13,238,10,"first"],[124,18,238,9],[125,0,238,17,"last"],[125,6,238,17,"last"],[125,10,238,21],[125,12,238,17,"last"],[126,0,238,9],[126,5,238,2],[127,0,239,1],[129,0,241,0],[129,6,241,6,"VirtualizeUtils"],[129,21,241,21],[129,24,241,24],[130,0,242,2,"computeWindowedRenderLimits"],[130,4,242,2,"computeWindowedRenderLimits"],[130,31,242,29],[130,33,242,2,"computeWindowedRenderLimits"],[130,60,241,24],[131,0,243,2,"elementsThatOverlapOffsets"],[131,4,243,2,"elementsThatOverlapOffsets"],[131,30,243,28],[131,32,243,2,"elementsThatOverlapOffsets"],[131,58,241,24],[132,0,244,2,"newRangeCount"],[132,4,244,2,"newRangeCount"],[132,17,244,15],[132,19,244,2,"newRangeCount"],[133,0,241,24],[133,3,241,0],[134,0,247,0,"module"],[134,2,247,0,"module"],[134,8,247,6],[134,9,247,7,"exports"],[134,16,247,0],[134,19,247,17,"VirtualizeUtils"],[134,34,247,0]],"functionMap":{"names":["<global>","elementsThatOverlapOffsets","newRangeCount","computeWindowedRenderLimits"],"mappings":"AAA;ACmB;CDgC;AEQ;CFqB;AGQ;CHsJ"}},"type":"js/module"}]}