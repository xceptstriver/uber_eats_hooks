{"dependencies":[{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":122,"column":0}},{"start":{"line":1,"column":0},"end":{"line":122,"column":0}},{"start":{"line":34,"column":4},"end":{"line":34,"column":25}},{"start":{"line":88,"column":4},"end":{"line":88,"column":21}}]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":122,"column":0}}]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":122,"column":0}}]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":20,"column":50},"end":{"line":23,"column":3}}]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":122,"column":0}}]}},{"name":"./AnimatedNode","data":{"asyncType":null,"locs":[{"start":{"line":29,"column":12},"end":{"line":29,"column":41}},{"start":{"line":42,"column":12},"end":{"line":42,"column":41}},{"start":{"line":57,"column":12},"end":{"line":57,"column":41}},{"start":{"line":72,"column":12},"end":{"line":72,"column":41}},{"start":{"line":83,"column":12},"end":{"line":83,"column":41}},{"start":{"line":97,"column":12},"end":{"line":97,"column":41}}]}},{"name":"@babel/runtime/helpers/get","data":{"asyncType":null,"locs":[{"start":{"line":34,"column":4},"end":{"line":34,"column":25}},{"start":{"line":88,"column":4},"end":{"line":88,"column":21}}]}},{"name":"../NativeAnimatedHelper","data":{"asyncType":null,"locs":[{"start":{"line":107,"column":19},"end":{"line":107,"column":57}},{"start":{"line":113,"column":4},"end":{"line":113,"column":42}}]}},{"name":"./AnimatedWithChildren","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":122,"column":0}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/getPrototypeOf\")(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/getPrototypeOf\")(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/possibleConstructorReturn\")(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  var AnimatedTransform = function (_AnimatedWithChildren) {\n    _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/inherits\")(AnimatedTransform, _AnimatedWithChildren);\n\n    var _super = _createSuper(AnimatedTransform);\n\n    function AnimatedTransform(transforms) {\n      var _this;\n\n      _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\")(this, AnimatedTransform);\n\n      _this = _super.call(this);\n      _this._transforms = transforms;\n      return _this;\n    }\n\n    _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\")(AnimatedTransform, [{\n      key: \"__makeNative\",\n      value: function __makeNative() {\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof _$$_REQUIRE(_dependencyMap[5], \"./AnimatedNode\")) {\n              value.__makeNative();\n            }\n          }\n        });\n\n        _$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/get\")(_$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/getPrototypeOf\")(AnimatedTransform.prototype), \"__makeNative\", this).call(this);\n      }\n    }, {\n      key: \"__getValue\",\n      value: function __getValue() {\n        return this._transforms.map(function (transform) {\n          var result = {};\n\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof _$$_REQUIRE(_dependencyMap[5], \"./AnimatedNode\")) {\n              result[key] = value.__getValue();\n            } else {\n              result[key] = value;\n            }\n          }\n\n          return result;\n        });\n      }\n    }, {\n      key: \"__getAnimatedValue\",\n      value: function __getAnimatedValue() {\n        return this._transforms.map(function (transform) {\n          var result = {};\n\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof _$$_REQUIRE(_dependencyMap[5], \"./AnimatedNode\")) {\n              result[key] = value.__getAnimatedValue();\n            } else {\n              result[key] = value;\n            }\n          }\n\n          return result;\n        });\n      }\n    }, {\n      key: \"__attach\",\n      value: function __attach() {\n        var _this2 = this;\n\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof _$$_REQUIRE(_dependencyMap[5], \"./AnimatedNode\")) {\n              value.__addChild(_this2);\n            }\n          }\n        });\n      }\n    }, {\n      key: \"__detach\",\n      value: function __detach() {\n        var _this3 = this;\n\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof _$$_REQUIRE(_dependencyMap[5], \"./AnimatedNode\")) {\n              value.__removeChild(_this3);\n            }\n          }\n        });\n\n        _$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/get\")(_$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/getPrototypeOf\")(AnimatedTransform.prototype), \"__detach\", this).call(this);\n      }\n    }, {\n      key: \"__getNativeConfig\",\n      value: function __getNativeConfig() {\n        var transConfigs = [];\n\n        this._transforms.forEach(function (transform) {\n          for (var key in transform) {\n            var value = transform[key];\n\n            if (value instanceof _$$_REQUIRE(_dependencyMap[5], \"./AnimatedNode\")) {\n              transConfigs.push({\n                type: 'animated',\n                property: key,\n                nodeTag: value.__getNativeTag()\n              });\n            } else {\n              transConfigs.push({\n                type: 'static',\n                property: key,\n                value: _$$_REQUIRE(_dependencyMap[7], \"../NativeAnimatedHelper\").transformDataType(value)\n              });\n            }\n          }\n        });\n\n        _$$_REQUIRE(_dependencyMap[7], \"../NativeAnimatedHelper\").validateTransform(transConfigs);\n\n        return {\n          type: 'transform',\n          transforms: transConfigs\n        };\n      }\n    }]);\n\n    return AnimatedTransform;\n  }(_$$_REQUIRE(_dependencyMap[8], \"./AnimatedWithChildren\"));\n\n  module.exports = AnimatedTransform;\n});","lineCount":146,"map":[[2,0,11,0],[8,6,17,6,"AnimatedTransform"],[8,23],[13,0,20,2],[13,31,20,14,"transforms"],[13,41,20,2],[13,43,20,50],[14,0,20,50],[16,0,20,50],[18,0,21,4],[19,0,22,4],[19,12,22,9,"_transforms"],[19,23,22,4],[19,26,22,23,"transforms"],[19,36,22,4],[20,0,20,50],[21,0,23,3],[25,13,25,2],[25,37,25,17],[26,0,26,4],[26,13,26,9,"_transforms"],[26,24,26,4],[26,25,26,21,"forEach"],[26,32,26,4],[26,33,26,29],[26,43,26,29,"transform"],[26,52,26,38],[26,54,26,42],[27,0,27,6],[27,15,27,11],[27,19,27,17,"key"],[27,22,27,6],[27,26,27,24,"transform"],[27,35,27,6],[27,37,27,35],[28,0,28,8],[28,16,28,14,"value"],[28,21,28,19],[28,24,28,22,"transform"],[28,33,28,31],[28,34,28,32,"key"],[28,37,28,31],[28,38,28,8],[30,0,29,8],[30,16,29,12,"value"],[30,21,29,17],[30,81,29,8],[30,83,29,43],[31,0,30,10,"value"],[31,14,30,10,"value"],[31,19,30,15],[31,20,30,16,"__makeNative"],[31,32,30,10],[32,0,31,9],[33,0,32,7],[34,0,33,5],[34,9,26,4],[36,0,34,4],[37,0,35,3],[40,13,37,2],[40,35,37,39],[41,0,38,4],[41,15,38,11],[41,20,38,16,"_transforms"],[41,31,38,11],[41,32,38,28,"map"],[41,35,38,11],[41,36,38,32],[41,46,38,32,"transform"],[41,55,38,41],[41,57,38,45],[42,0,39,6],[42,14,39,12,"result"],[42,20,39,18],[42,23,39,21],[42,25,39,6],[44,0,40,6],[44,15,40,11],[44,19,40,17,"key"],[44,22,40,6],[44,26,40,24,"transform"],[44,35,40,6],[44,37,40,35],[45,0,41,8],[45,16,41,14,"value"],[45,21,41,19],[45,24,41,22,"transform"],[45,33,41,31],[45,34,41,32,"key"],[45,37,41,31],[45,38,41,8],[47,0,42,8],[47,16,42,12,"value"],[47,21,42,17],[47,81,42,8],[47,83,42,43],[48,0,43,10,"result"],[48,14,43,10,"result"],[48,20,43,16],[48,21,43,17,"key"],[48,24,43,16],[48,25,43,10],[48,28,43,24,"value"],[48,33,43,29],[48,34,43,30,"__getValue"],[48,44,43,24],[48,46,43,10],[49,0,44,9],[49,13,42,8],[49,19,44,15],[50,0,45,10,"result"],[50,14,45,10,"result"],[50,20,45,16],[50,21,45,17,"key"],[50,24,45,16],[50,25,45,10],[50,28,45,24,"value"],[50,33,45,10],[51,0,46,9],[52,0,47,7],[54,0,48,6],[54,17,48,13,"result"],[54,23,48,6],[55,0,49,5],[55,9,38,11],[55,10,38,4],[56,0,50,3],[59,13,52,2],[59,43,52,47],[60,0,53,4],[60,15,53,11],[60,20,53,16,"_transforms"],[60,31,53,11],[60,32,53,28,"map"],[60,35,53,11],[60,36,53,32],[60,46,53,32,"transform"],[60,55,53,41],[60,57,53,45],[61,0,54,6],[61,14,54,12,"result"],[61,20,54,18],[61,23,54,21],[61,25,54,6],[63,0,55,6],[63,15,55,11],[63,19,55,17,"key"],[63,22,55,6],[63,26,55,24,"transform"],[63,35,55,6],[63,37,55,35],[64,0,56,8],[64,16,56,14,"value"],[64,21,56,19],[64,24,56,22,"transform"],[64,33,56,31],[64,34,56,32,"key"],[64,37,56,31],[64,38,56,8],[66,0,57,8],[66,16,57,12,"value"],[66,21,57,17],[66,81,57,8],[66,83,57,43],[67,0,58,10,"result"],[67,14,58,10,"result"],[67,20,58,16],[67,21,58,17,"key"],[67,24,58,16],[67,25,58,10],[67,28,58,24,"value"],[67,33,58,29],[67,34,58,30,"__getAnimatedValue"],[67,52,58,24],[67,54,58,10],[68,0,59,9],[68,13,57,8],[68,19,59,15],[69,0,61,10,"result"],[69,14,61,10,"result"],[69,20,61,16],[69,21,61,17,"key"],[69,24,61,16],[69,25,61,10],[69,28,61,24,"value"],[69,33,61,10],[70,0,62,9],[71,0,63,7],[73,0,64,6],[73,17,64,13,"result"],[73,23,64,6],[74,0,65,5],[74,9,53,11],[74,10,53,4],[75,0,66,3],[78,13,68,2],[78,33,68,19],[79,0,68,19],[81,0,69,4],[81,13,69,9,"_transforms"],[81,24,69,4],[81,25,69,21,"forEach"],[81,32,69,4],[81,33,69,29],[81,43,69,29,"transform"],[81,52,69,38],[81,54,69,42],[82,0,70,6],[82,15,70,11],[82,19,70,17,"key"],[82,22,70,6],[82,26,70,24,"transform"],[82,35,70,6],[82,37,70,35],[83,0,71,8],[83,16,71,14,"value"],[83,21,71,19],[83,24,71,22,"transform"],[83,33,71,31],[83,34,71,32,"key"],[83,37,71,31],[83,38,71,8],[85,0,72,8],[85,16,72,12,"value"],[85,21,72,17],[85,81,72,8],[85,83,72,43],[86,0,73,10,"value"],[86,14,73,10,"value"],[86,19,73,15],[86,20,73,16,"__addChild"],[86,30,73,10],[86,31,73,27],[86,37,73,10],[87,0,74,9],[88,0,75,7],[89,0,76,5],[89,9,69,4],[90,0,77,3],[93,13,79,2],[93,33,79,19],[94,0,79,19],[96,0,80,4],[96,13,80,9,"_transforms"],[96,24,80,4],[96,25,80,21,"forEach"],[96,32,80,4],[96,33,80,29],[96,43,80,29,"transform"],[96,52,80,38],[96,54,80,42],[97,0,81,6],[97,15,81,11],[97,19,81,17,"key"],[97,22,81,6],[97,26,81,24,"transform"],[97,35,81,6],[97,37,81,35],[98,0,82,8],[98,16,82,14,"value"],[98,21,82,19],[98,24,82,22,"transform"],[98,33,82,31],[98,34,82,32,"key"],[98,37,82,31],[98,38,82,8],[100,0,83,8],[100,16,83,12,"value"],[100,21,83,17],[100,81,83,8],[100,83,83,43],[101,0,84,10,"value"],[101,14,84,10,"value"],[101,19,84,15],[101,20,84,16,"__removeChild"],[101,33,84,10],[101,34,84,30],[101,40,84,10],[102,0,85,9],[103,0,86,7],[104,0,87,5],[104,9,80,4],[106,0,88,4],[107,0,89,3],[110,13,91,2],[110,42,91,27],[111,0,92,4],[111,12,92,10,"transConfigs"],[111,24,92,22],[111,27,92,25],[111,29,92,4],[113,0,94,4],[113,13,94,9,"_transforms"],[113,24,94,4],[113,25,94,21,"forEach"],[113,32,94,4],[113,33,94,29],[113,43,94,29,"transform"],[113,52,94,38],[113,54,94,42],[114,0,95,6],[114,15,95,11],[114,19,95,17,"key"],[114,22,95,6],[114,26,95,24,"transform"],[114,35,95,6],[114,37,95,35],[115,0,96,8],[115,16,96,14,"value"],[115,21,96,19],[115,24,96,22,"transform"],[115,33,96,31],[115,34,96,32,"key"],[115,37,96,31],[115,38,96,8],[117,0,97,8],[117,16,97,12,"value"],[117,21,97,17],[117,81,97,8],[117,83,97,43],[118,0,98,10,"transConfigs"],[118,14,98,10,"transConfigs"],[118,26,98,22],[118,27,98,23,"push"],[118,31,98,10],[118,32,98,28],[119,0,99,12,"type"],[119,16,99,12,"type"],[119,20,99,16],[119,22,99,18],[119,32,98,28],[120,0,100,12,"property"],[120,16,100,12,"property"],[120,24,100,20],[120,26,100,22,"key"],[120,29,98,28],[121,0,101,12,"nodeTag"],[121,16,101,12,"nodeTag"],[121,23,101,19],[121,25,101,21,"value"],[121,30,101,26],[121,31,101,27,"__getNativeTag"],[121,45,101,21],[122,0,98,28],[122,15,98,10],[123,0,103,9],[123,13,97,8],[123,19,103,15],[124,0,104,10,"transConfigs"],[124,14,104,10,"transConfigs"],[124,26,104,22],[124,27,104,23,"push"],[124,31,104,10],[124,32,104,28],[125,0,105,12,"type"],[125,16,105,12,"type"],[125,20,105,16],[125,22,105,18],[125,30,104,28],[126,0,106,12,"property"],[126,16,106,12,"property"],[126,24,106,20],[126,26,106,22,"key"],[126,29,104,28],[127,0,107,12,"value"],[127,16,107,12,"value"],[127,21,107,17],[127,23,107,19],[127,81,107,40,"transformDataType"],[127,98,107,19],[127,99,107,58,"value"],[127,104,107,19],[128,0,104,28],[128,15,104,10],[129,0,109,9],[130,0,110,7],[131,0,111,5],[131,9,94,4],[133,0,113,4],[133,66,113,25,"validateTransform"],[133,83,113,4],[133,84,113,43,"transConfigs"],[133,96,113,4],[135,0,114,4],[135,15,114,11],[136,0,115,6,"type"],[136,10,115,6,"type"],[136,14,115,10],[136,16,115,12],[136,27,114,11],[137,0,116,6,"transforms"],[137,10,116,6,"transforms"],[137,20,116,16],[137,22,116,18,"transConfigs"],[138,0,114,11],[138,9,114,4],[139,0,118,3],[145,0,121,0,"module"],[145,2,121,0,"module"],[145,8,121,6],[145,9,121,7,"exports"],[145,16,121,0],[145,19,121,17,"AnimatedTransform"],[145,36,121,0]],"functionMap":{"names":["<global>","AnimatedTransform","constructor","__makeNative","_transforms.forEach$argument_0","__getValue","_transforms.map$argument_0","__getAnimatedValue","__attach","__detach","__getNativeConfig"],"mappings":"AAA;ACgB;ECG;GDG;EEE;6BCC;KDO;GFE;EIE;gCCC;KDW;GJC;EME;gCDC;KCY;GNC;EOE;6BJC;KIO;GPC;EQE;6BLC;KKO;GRE;ESE;6BNG;KMiB;GTO;CDC"}},"type":"js/module"}]}