{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":427,"column":0}},{"start":{"line":1,"column":0},"end":{"line":427,"column":0}},{"start":{"line":25,"column":0},"end":{"line":25,"column":86}},{"start":{"line":26,"column":0},"end":{"line":26,"column":68}},{"start":{"line":28,"column":0},"end":{"line":28,"column":62}}]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":427,"column":0}}]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":427,"column":0}}]}},{"name":"@react-native-firebase/app/lib/internal/NativeFirebaseError","data":{"asyncType":null,"locs":[{"start":{"line":25,"column":0},"end":{"line":25,"column":86}}]}},{"name":"./FirestoreDocumentSnapshot","data":{"asyncType":null,"locs":[{"start":{"line":26,"column":0},"end":{"line":26,"column":68}}]}},{"name":"./FirestoreFieldPath","data":{"asyncType":null,"locs":[{"start":{"line":27,"column":0},"end":{"line":27,"column":82}}]}},{"name":"./FirestoreQuerySnapshot","data":{"asyncType":null,"locs":[{"start":{"line":28,"column":0},"end":{"line":28,"column":62}}]}},{"name":"@react-native-firebase/app/lib/common","data":{"asyncType":null,"locs":[{"start":{"line":47,"column":8},"end":{"line":47,"column":19},"identifierName":"isUndefined"},{"start":{"line":149,"column":9},"end":{"line":149,"column":20},"identifierName":"isUndefined"},{"start":{"line":149,"column":34},"end":{"line":149,"column":42},"identifierName":"isObject"},{"start":{"line":302,"column":9},"end":{"line":302,"column":17},"identifierName":"isString"},{"start":{"line":310,"column":8},"end":{"line":310,"column":16},"identifierName":"isString"},{"start":{"line":320,"column":9},"end":{"line":320,"column":20},"identifierName":"isUndefined"},{"start":{"line":366,"column":9},"end":{"line":366,"column":17},"identifierName":"isString"},{"start":{"line":374,"column":8},"end":{"line":374,"column":16},"identifierName":"isString"},{"start":{"line":390,"column":8},"end":{"line":390,"column":19},"identifierName":"isUndefined"},{"start":{"line":396,"column":8},"end":{"line":396,"column":14},"identifierName":"isNull"},{"start":{"line":403,"column":11},"end":{"line":403,"column":18},"identifierName":"isArray"}]}},{"name":"./utils","data":{"asyncType":null,"locs":[{"start":{"line":246,"column":22},"end":{"line":246,"column":39},"identifierName":"parseSnapshotArgs"}],"isOptional":true}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _NativeFirebaseError = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/internal/NativeFirebaseError\"));\n\n  var _FirestoreDocumentSnapshot = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"./FirestoreDocumentSnapshot\"));\n\n  var _FirestoreFieldPath = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5], \"./FirestoreFieldPath\"));\n\n  var _FirestoreQuerySnapshot = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[6], \"./FirestoreQuerySnapshot\"));\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var _id = 0;\n\n  var FirestoreQuery = function () {\n    function FirestoreQuery(firestore, collectionPath, modifiers) {\n      (0, _classCallCheck2.default)(this, FirestoreQuery);\n      this._firestore = firestore;\n      this._collectionPath = collectionPath;\n      this._modifiers = modifiers;\n    }\n\n    (0, _createClass2.default)(FirestoreQuery, [{\n      key: \"firestore\",\n      get: function get() {\n        return this._firestore;\n      }\n    }, {\n      key: \"_handleQueryCursor\",\n      value: function _handleQueryCursor(cursor, docOrField, fields) {\n        var modifiers = this._modifiers._copy();\n\n        if ((0, _$$_REQUIRE(_dependencyMap[7], \"@react-native-firebase/app/lib/common\").isUndefined)(docOrField)) {\n          throw new Error(\"firebase.firestore().collection().\" + cursor + \"(*) Expected a DocumentSnapshot or list of field values but got undefined.\");\n        }\n\n        if (docOrField instanceof _FirestoreDocumentSnapshot.default) {\n          if (fields.length > 0) {\n            throw new Error(\"firebase.firestore().collection().\" + cursor + \"(*) Too many arguments provided. Expected DocumentSnapshot or list of field values.\");\n          }\n\n          var documentSnapshot = docOrField;\n\n          if (!documentSnapshot.exists) {\n            throw new Error(\"firebase.firestore().collection().\" + cursor + \"(*) Can't use a DocumentSnapshot that doesn't exist.\");\n          }\n\n          var currentOrders = modifiers.orders;\n          var values = [];\n\n          for (var i = 0; i < currentOrders.length; i++) {\n            var order = currentOrders[i];\n\n            if (order.fieldPath === '__name__') {\n              continue;\n            }\n\n            var value = documentSnapshot.get(order.fieldPath);\n\n            if (value === undefined) {\n              throw new Error(\"firebase.firestore().collection().\" + cursor + \"(*) You are trying to start or end a query using a document for which the field '\" + order.fieldPath + \"' (used as the orderBy) does not exist.\");\n            }\n\n            values.push(value);\n          }\n\n          if (modifiers._orders.length) {\n            var lastOrder = modifiers._orders[modifiers._orders.length - 1];\n\n            if (lastOrder.fieldPath !== '__name__') {\n              modifiers._orders.push({\n                fieldPath: '__name__',\n                direction: lastOrder.direction\n              });\n            }\n          } else {\n            modifiers._orders.push({\n              fieldPath: '__name__',\n              direction: 'ASCENDING'\n            });\n          }\n\n          if (this._modifiers.isCollectionGroupQuery()) {\n            values.push(documentSnapshot.ref.path);\n          } else {\n            values.push(documentSnapshot.id);\n          }\n\n          return modifiers.setFieldsCursor(cursor, values);\n        }\n\n        var allFields = [docOrField].concat(fields);\n\n        if (allFields.length > modifiers.orders.length) {\n          throw new Error(\"firebase.firestore().collection().\" + cursor + \"(*) Too many arguments provided. The number of arguments must be less than or equal to the number of orderBy() clauses.\");\n        }\n\n        return modifiers.setFieldsCursor(cursor, allFields);\n      }\n    }, {\n      key: \"endAt\",\n      value: function endAt(docOrField) {\n        for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          fields[_key - 1] = arguments[_key];\n        }\n\n        return new FirestoreQuery(this._firestore, this._collectionPath, this._handleQueryCursor('endAt', docOrField, fields));\n      }\n    }, {\n      key: \"endBefore\",\n      value: function endBefore(docOrField) {\n        for (var _len2 = arguments.length, fields = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          fields[_key2 - 1] = arguments[_key2];\n        }\n\n        return new FirestoreQuery(this._firestore, this._collectionPath, this._handleQueryCursor('endBefore', docOrField, fields));\n      }\n    }, {\n      key: \"get\",\n      value: function get(options) {\n        var _this = this;\n\n        if (!(0, _$$_REQUIRE(_dependencyMap[7], \"@react-native-firebase/app/lib/common\").isUndefined)(options) && !(0, _$$_REQUIRE(_dependencyMap[7], \"@react-native-firebase/app/lib/common\").isObject)(options)) {\n          throw new Error(\"firebase.firestore().collection().get(*) 'options' must be an object is provided.\");\n        }\n\n        if (options && options.source && options.source !== 'default' && options.source !== 'server' && options.source !== 'cache') {\n          throw new Error(\"firebase.firestore().collection().get(*) 'options' GetOptions.source must be one of 'default', 'server' or 'cache'.\");\n        }\n\n        this._modifiers.validatelimitToLast();\n\n        return this._firestore.native.collectionGet(this._collectionPath.relativeName, this._modifiers.type, this._modifiers.filters, this._modifiers.orders, this._modifiers.options, options).then(function (data) {\n          return new _FirestoreQuerySnapshot.default(_this._firestore, _this, data);\n        });\n      }\n    }, {\n      key: \"isEqual\",\n      value: function isEqual(other) {\n        if (!(other instanceof FirestoreQuery)) {\n          throw new Error(\"firebase.firestore().collection().isEqual(*) 'other' expected a Query instance.\");\n        }\n\n        if (this.firestore.app.name !== other.firestore.app.name || this._modifiers.type !== other._modifiers.type || this._modifiers.filters.length !== other._modifiers.filters.length || this._modifiers.orders.length !== other._modifiers.orders.length || this._collectionPath.relativeName !== other._collectionPath.relativeName || Object.keys(this._modifiers.options).length !== Object.keys(other._modifiers.options).length) {\n          return false;\n        }\n\n        if (JSON.stringify(this._modifiers.filters) !== JSON.stringify(other._modifiers.filters) || JSON.stringify(this._modifiers.orders) !== JSON.stringify(other._modifiers.orders) || JSON.stringify(this._modifiers.options) !== JSON.stringify(other._modifiers.options)) {\n          return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"limit\",\n      value: function limit(_limit) {\n        if (this._modifiers.isValidLimit(_limit)) {\n          throw new Error(\"firebase.firestore().collection().limit(*) 'limit' must be a positive integer value.\");\n        }\n\n        var modifiers = this._modifiers._copy().limit(_limit);\n\n        return new FirestoreQuery(this._firestore, this._collectionPath, modifiers);\n      }\n    }, {\n      key: \"limitToLast\",\n      value: function limitToLast(_limitToLast) {\n        if (this._modifiers.isValidLimitToLast(_limitToLast)) {\n          throw new Error(\"firebase.firestore().collection().limitToLast(*) 'limitToLast' must be a positive integer value.\");\n        }\n\n        var modifiers = this._modifiers._copy().limitToLast(_limitToLast);\n\n        return new FirestoreQuery(this._firestore, this._collectionPath, modifiers);\n      }\n    }, {\n      key: \"onSnapshot\",\n      value: function onSnapshot() {\n        var _this2 = this;\n\n        var snapshotListenOptions;\n        var callback;\n        var onNext;\n        var onError;\n\n        this._modifiers.validatelimitToLast();\n\n        try {\n          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          var options = (0, _$$_REQUIRE(_dependencyMap[8], \"./utils\").parseSnapshotArgs)(args);\n          snapshotListenOptions = options.snapshotListenOptions;\n          callback = options.callback;\n          onNext = options.onNext;\n          onError = options.onError;\n        } catch (e) {\n          throw new Error(\"firebase.firestore().collection().onSnapshot(*) \" + e.message);\n        }\n\n        function handleSuccess(querySnapshot) {\n          callback(querySnapshot, null);\n          onNext(querySnapshot);\n        }\n\n        function handleError(error) {\n          callback(null, error);\n          onError(error);\n        }\n\n        var listenerId = _id++;\n\n        var onSnapshotSubscription = this._firestore.emitter.addListener(this._firestore.eventNameForApp(\"firestore_collection_sync_event:\" + listenerId), function (event) {\n          if (event.body.error) {\n            handleError(_NativeFirebaseError.default.fromEvent(event.body.error, 'firestore'));\n          } else {\n            var querySnapshot = new _FirestoreQuerySnapshot.default(_this2._firestore, _this2, event.body.snapshot);\n            handleSuccess(querySnapshot);\n          }\n        });\n\n        var unsubscribe = function unsubscribe() {\n          onSnapshotSubscription.remove();\n\n          _this2._firestore.native.collectionOffSnapshot(listenerId);\n        };\n\n        this._firestore.native.collectionOnSnapshot(this._collectionPath.relativeName, this._modifiers.type, this._modifiers.filters, this._modifiers.orders, this._modifiers.options, listenerId, snapshotListenOptions);\n\n        return unsubscribe;\n      }\n    }, {\n      key: \"orderBy\",\n      value: function orderBy(fieldPath, directionStr) {\n        if (!(0, _$$_REQUIRE(_dependencyMap[7], \"@react-native-firebase/app/lib/common\").isString)(fieldPath) && !(fieldPath instanceof _FirestoreFieldPath.default)) {\n          throw new Error(\"firebase.firestore().collection().orderBy(*) 'fieldPath' must be a string or instance of FieldPath.\");\n        }\n\n        var path;\n\n        if ((0, _$$_REQUIRE(_dependencyMap[7], \"@react-native-firebase/app/lib/common\").isString)(fieldPath)) {\n          try {\n            path = (0, _FirestoreFieldPath.fromDotSeparatedString)(fieldPath);\n          } catch (e) {\n            throw new Error(\"firebase.firestore().collection().orderBy(*) 'fieldPath' \" + e.message + \".\");\n          }\n        } else {\n          path = fieldPath;\n        }\n\n        if (!(0, _$$_REQUIRE(_dependencyMap[7], \"@react-native-firebase/app/lib/common\").isUndefined)(directionStr) && !this._modifiers.isValidDirection(directionStr)) {\n          throw new Error(\"firebase.firestore().collection().orderBy(_, *) 'directionStr' must be one of 'asc' or 'desc'.\");\n        }\n\n        if (this._modifiers.hasStart()) {\n          throw new Error('firebase.firestore().collection().orderBy() Invalid query. You must not call startAt() or startAfter() before calling orderBy().');\n        }\n\n        if (this._modifiers.hasEnd()) {\n          throw new Error('firebase.firestore().collection().orderBy() Invalid query. You must not call endAt() or endBefore() before calling orderBy().');\n        }\n\n        var modifiers = this._modifiers._copy().orderBy(path, directionStr);\n\n        try {\n          modifiers.validateOrderBy();\n        } catch (e) {\n          throw new Error(\"firebase.firestore().collection().orderBy() \" + e.message);\n        }\n\n        return new FirestoreQuery(this._firestore, this._collectionPath, modifiers);\n      }\n    }, {\n      key: \"startAfter\",\n      value: function startAfter(docOrField) {\n        for (var _len4 = arguments.length, fields = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n          fields[_key4 - 1] = arguments[_key4];\n        }\n\n        return new FirestoreQuery(this._firestore, this._collectionPath, this._handleQueryCursor('startAfter', docOrField, fields));\n      }\n    }, {\n      key: \"startAt\",\n      value: function startAt(docOrField) {\n        for (var _len5 = arguments.length, fields = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n          fields[_key5 - 1] = arguments[_key5];\n        }\n\n        return new FirestoreQuery(this._firestore, this._collectionPath, this._handleQueryCursor('startAt', docOrField, fields));\n      }\n    }, {\n      key: \"where\",\n      value: function where(fieldPath, opStr, value) {\n        if (!(0, _$$_REQUIRE(_dependencyMap[7], \"@react-native-firebase/app/lib/common\").isString)(fieldPath) && !(fieldPath instanceof _FirestoreFieldPath.default)) {\n          throw new Error(\"firebase.firestore().collection().where(*) 'fieldPath' must be a string or instance of FieldPath.\");\n        }\n\n        var path;\n\n        if ((0, _$$_REQUIRE(_dependencyMap[7], \"@react-native-firebase/app/lib/common\").isString)(fieldPath)) {\n          try {\n            path = (0, _FirestoreFieldPath.fromDotSeparatedString)(fieldPath);\n          } catch (e) {\n            throw new Error(\"firebase.firestore().collection().where(*) 'fieldPath' \" + e.message + \".\");\n          }\n        } else {\n          path = fieldPath;\n        }\n\n        if (!this._modifiers.isValidOperator(opStr)) {\n          throw new Error(\"firebase.firestore().collection().where(_, *) 'opStr' is invalid. Expected one of '==', '>', '>=', '<', '<=', '!=', 'array-contains', 'not-in', 'array-contains-any' or 'in'.\");\n        }\n\n        if ((0, _$$_REQUIRE(_dependencyMap[7], \"@react-native-firebase/app/lib/common\").isUndefined)(value)) {\n          throw new Error(\"firebase.firestore().collection().where(_, _, *) 'value' argument expected.\");\n        }\n\n        if ((0, _$$_REQUIRE(_dependencyMap[7], \"@react-native-firebase/app/lib/common\").isNull)(value) && !this._modifiers.isEqualOperator(opStr)) {\n          throw new Error(\"firebase.firestore().collection().where(_, _, *) 'value' is invalid. You can only perform equals comparisons on null\");\n        }\n\n        if (this._modifiers.isInOperator(opStr)) {\n          if (!(0, _$$_REQUIRE(_dependencyMap[7], \"@react-native-firebase/app/lib/common\").isArray)(value) || !value.length) {\n            throw new Error(\"firebase.firestore().collection().where(_, _, *) 'value' is invalid. A non-empty array is required for '\" + opStr + \"' filters.\");\n          }\n\n          if (value.length > 10) {\n            throw new Error(\"firebase.firestore().collection().where(_, _, *) 'value' is invalid. '\" + opStr + \"' filters support a maximum of 10 elements in the value array.\");\n          }\n        }\n\n        var modifiers = this._modifiers._copy().where(path, opStr, value);\n\n        try {\n          modifiers.validateWhere();\n        } catch (e) {\n          throw new Error(\"firebase.firestore().collection().where() \" + e.message);\n        }\n\n        return new FirestoreQuery(this._firestore, this._collectionPath, modifiers);\n      }\n    }]);\n    return FirestoreQuery;\n  }();\n\n  exports.default = FirestoreQuery;\n});","lineCount":358,"map":[[11,0,25,0],[13,0,26,0],[15,0,27,0],[17,0,28,0],[23,0,31,0],[23,6,31,4,"_id"],[23,9,31,7],[23,12,31,10],[23,13,31,0],[25,6,33,21,"FirestoreQuery"],[25,20],[26,0,34,2],[26,28,34,14,"firestore"],[26,37,34,2],[26,39,34,25,"collectionPath"],[26,53,34,2],[26,55,34,41,"modifiers"],[26,64,34,2],[26,66,34,52],[27,0,34,52],[28,0,35,4],[28,11,35,9,"_firestore"],[28,21,35,4],[28,24,35,22,"firestore"],[28,33,35,4],[29,0,36,4],[29,11,36,9,"_collectionPath"],[29,26,36,4],[29,29,36,27,"collectionPath"],[29,43,36,4],[30,0,37,4],[30,11,37,9,"_modifiers"],[30,21,37,4],[30,24,37,22,"modifiers"],[30,33,37,4],[31,0,38,3],[35,11,40,2],[35,26,40,18],[36,0,41,4],[36,15,41,11],[36,20,41,16,"_firestore"],[36,30,41,4],[37,0,42,3],[40,13,44,2],[40,41,44,21,"cursor"],[40,47,44,2],[40,49,44,29,"docOrField"],[40,59,44,2],[40,61,44,41,"fields"],[40,67,44,2],[40,69,44,49],[41,0,45,4],[41,12,45,10,"modifiers"],[41,21,45,19],[41,24,45,22],[41,29,45,27,"_modifiers"],[41,39,45,22],[41,40,45,38,"_copy"],[41,45,45,22],[41,47,45,4],[43,0,47,4],[43,12,47,8],[43,101,47,20,"docOrField"],[43,111,47,8],[43,112,47,4],[43,114,47,33],[44,0,48,6],[44,16,48,12],[44,20,48,16,"Error"],[44,25,48,12],[44,65,49,45,"cursor"],[44,71,48,12],[44,151,48,6],[45,0,51,5],[47,0,54,4],[47,12,54,8,"docOrField"],[47,22,54,18],[47,34,54,30,"FirestoreDocumentSnapshot"],[47,68,54,4],[47,70,54,57],[48,0,55,6],[48,14,55,10,"fields"],[48,20,55,16],[48,21,55,17,"length"],[48,27,55,10],[48,30,55,26],[48,31,55,6],[48,33,55,29],[49,0,56,8],[49,18,56,14],[49,22,56,18,"Error"],[49,27,56,14],[49,67,57,47,"cursor"],[49,73,56,14],[49,162,56,8],[50,0,59,7],[52,0,61,6],[52,14,61,12,"documentSnapshot"],[52,30,61,28],[52,33,61,31,"docOrField"],[52,43,61,6],[54,0,63,6],[54,14,63,10],[54,15,63,11,"documentSnapshot"],[54,31,63,27],[54,32,63,28,"exists"],[54,38,63,6],[54,40,63,36],[55,0,64,8],[55,18,64,14],[55,22,64,18,"Error"],[55,27,64,14],[55,67,65,47,"cursor"],[55,73,64,14],[55,131,64,8],[56,0,67,7],[58,0,69,6],[58,14,69,12,"currentOrders"],[58,27,69,25],[58,30,69,28,"modifiers"],[58,39,69,37],[58,40,69,38,"orders"],[58,46,69,6],[59,0,71,6],[59,14,71,12,"values"],[59,20,71,18],[59,23,71,21],[59,25,71,6],[61,0,73,6],[61,15,73,11],[61,19,73,15,"i"],[61,20,73,16],[61,23,73,19],[61,24,73,6],[61,26,73,22,"i"],[61,27,73,23],[61,30,73,26,"currentOrders"],[61,43,73,39],[61,44,73,40,"length"],[61,50,73,6],[61,52,73,48,"i"],[61,53,73,49],[61,55,73,6],[61,57,73,53],[62,0,74,8],[62,16,74,14,"order"],[62,21,74,19],[62,24,74,22,"currentOrders"],[62,37,74,35],[62,38,74,36,"i"],[62,39,74,35],[62,40,74,8],[64,0,76,8],[64,16,76,12,"order"],[64,21,76,17],[64,22,76,18,"fieldPath"],[64,31,76,12],[64,36,76,32],[64,46,76,8],[64,48,76,44],[65,0,77,10],[66,0,78,9],[68,0,80,8],[68,16,80,14,"value"],[68,21,80,19],[68,24,80,22,"documentSnapshot"],[68,40,80,38],[68,41,80,39,"get"],[68,44,80,22],[68,45,80,43,"order"],[68,50,80,48],[68,51,80,49,"fieldPath"],[68,60,80,22],[68,61,80,8],[70,0,82,8],[70,16,82,12,"value"],[70,21,82,17],[70,26,82,22,"undefined"],[70,35,82,8],[70,37,82,33],[71,0,83,10],[71,20,83,16],[71,24,83,20,"Error"],[71,29,83,16],[71,69,84,49,"cursor"],[71,75,83,16],[71,164,84,139,"order"],[71,169,84,144],[71,170,84,145,"fieldPath"],[71,179,83,16],[71,224,83,10],[72,0,86,9],[74,0,88,8,"values"],[74,12,88,8,"values"],[74,18,88,14],[74,19,88,15,"push"],[74,23,88,8],[74,24,88,20,"value"],[74,29,88,8],[75,0,89,7],[77,0,92,6],[77,14,92,10,"modifiers"],[77,23,92,19],[77,24,92,20,"_orders"],[77,31,92,10],[77,32,92,28,"length"],[77,38,92,6],[77,40,92,36],[78,0,93,8],[78,16,93,14,"lastOrder"],[78,25,93,23],[78,28,93,26,"modifiers"],[78,37,93,35],[78,38,93,36,"_orders"],[78,45,93,26],[78,46,93,44,"modifiers"],[78,55,93,53],[78,56,93,54,"_orders"],[78,63,93,44],[78,64,93,62,"length"],[78,70,93,44],[78,73,93,71],[78,74,93,26],[78,75,93,8],[80,0,95,8],[80,16,95,12,"lastOrder"],[80,25,95,21],[80,26,95,22,"fieldPath"],[80,35,95,12],[80,40,95,36],[80,50,95,8],[80,52,95,48],[81,0,96,10,"modifiers"],[81,14,96,10,"modifiers"],[81,23,96,19],[81,24,96,20,"_orders"],[81,31,96,10],[81,32,96,28,"push"],[81,36,96,10],[81,37,96,33],[82,0,97,12,"fieldPath"],[82,16,97,12,"fieldPath"],[82,25,97,21],[82,27,97,23],[82,37,96,33],[83,0,98,12,"direction"],[83,16,98,12,"direction"],[83,25,98,21],[83,27,98,23,"lastOrder"],[83,36,98,32],[83,37,98,33,"direction"],[84,0,96,33],[84,15,96,10],[85,0,100,9],[86,0,101,7],[86,11,92,6],[86,17,101,13],[87,0,102,8,"modifiers"],[87,12,102,8,"modifiers"],[87,21,102,17],[87,22,102,18,"_orders"],[87,29,102,8],[87,30,102,26,"push"],[87,34,102,8],[87,35,102,31],[88,0,103,10,"fieldPath"],[88,14,103,10,"fieldPath"],[88,23,103,19],[88,25,103,21],[88,35,102,31],[89,0,104,10,"direction"],[89,14,104,10,"direction"],[89,23,104,19],[89,25,104,21],[90,0,102,31],[90,13,102,8],[91,0,106,7],[93,0,108,6],[93,14,108,10],[93,19,108,15,"_modifiers"],[93,29,108,10],[93,30,108,26,"isCollectionGroupQuery"],[93,52,108,10],[93,54,108,6],[93,56,108,52],[94,0,109,8,"values"],[94,12,109,8,"values"],[94,18,109,14],[94,19,109,15,"push"],[94,23,109,8],[94,24,109,20,"documentSnapshot"],[94,40,109,36],[94,41,109,37,"ref"],[94,44,109,20],[94,45,109,41,"path"],[94,49,109,8],[95,0,110,7],[95,11,108,6],[95,17,110,13],[96,0,111,8,"values"],[96,12,111,8,"values"],[96,18,111,14],[96,19,111,15,"push"],[96,23,111,8],[96,24,111,20,"documentSnapshot"],[96,40,111,36],[96,41,111,37,"id"],[96,43,111,8],[97,0,112,7],[99,0,114,6],[99,17,114,13,"modifiers"],[99,26,114,22],[99,27,114,23,"setFieldsCursor"],[99,42,114,13],[99,43,114,39,"cursor"],[99,49,114,13],[99,51,114,47,"values"],[99,57,114,13],[99,58,114,6],[100,0,115,5],[102,0,121,4],[102,12,121,10,"allFields"],[102,21,121,19],[102,24,121,22],[102,25,121,23,"docOrField"],[102,35,121,22],[102,37,121,35,"concat"],[102,43,121,22],[102,44,121,42,"fields"],[102,50,121,22],[102,51,121,4],[104,0,123,4],[104,12,123,8,"allFields"],[104,21,123,17],[104,22,123,18,"length"],[104,28,123,8],[104,31,123,27,"modifiers"],[104,40,123,36],[104,41,123,37,"orders"],[104,47,123,27],[104,48,123,44,"length"],[104,54,123,4],[104,56,123,52],[105,0,124,6],[105,16,124,12],[105,20,124,16,"Error"],[105,25,124,12],[105,65,125,45,"cursor"],[105,71,124,12],[105,196,124,6],[106,0,127,5],[108,0,129,4],[108,15,129,11,"modifiers"],[108,24,129,20],[108,25,129,21,"setFieldsCursor"],[108,40,129,11],[108,41,129,37,"cursor"],[108,47,129,11],[108,49,129,45,"allFields"],[108,58,129,11],[108,59,129,4],[109,0,130,3],[112,13,132,2],[112,28,132,8,"docOrField"],[112,38,132,2],[112,40,132,31],[113,0,132,31],[113,42,132,23,"fields"],[113,48,132,31],[114,0,132,23,"fields"],[114,10,132,23,"fields"],[114,16,132,31],[115,0,132,31],[117,0,133,4],[117,15,133,11],[117,19,133,15,"FirestoreQuery"],[117,33,133,11],[117,34,134,6],[117,39,134,11,"_firestore"],[117,49,133,11],[117,51,135,6],[117,56,135,11,"_collectionPath"],[117,71,133,11],[117,73,136,6],[117,78,136,11,"_handleQueryCursor"],[117,96,136,6],[117,97,136,30],[117,104,136,6],[117,106,136,39,"docOrField"],[117,116,136,6],[117,118,136,51,"fields"],[117,124,136,6],[117,125,133,11],[117,126,133,4],[118,0,138,3],[121,13,140,2],[121,32,140,12,"docOrField"],[121,42,140,2],[121,44,140,35],[122,0,140,35],[122,43,140,27,"fields"],[122,49,140,35],[123,0,140,27,"fields"],[123,10,140,27,"fields"],[123,16,140,35],[124,0,140,35],[126,0,141,4],[126,15,141,11],[126,19,141,15,"FirestoreQuery"],[126,33,141,11],[126,34,142,6],[126,39,142,11,"_firestore"],[126,49,141,11],[126,51,143,6],[126,56,143,11,"_collectionPath"],[126,71,141,11],[126,73,144,6],[126,78,144,11,"_handleQueryCursor"],[126,96,144,6],[126,97,144,30],[126,108,144,6],[126,110,144,43,"docOrField"],[126,120,144,6],[126,122,144,55,"fields"],[126,128,144,6],[126,129,141,11],[126,130,141,4],[127,0,146,3],[130,13,148,2],[130,26,148,6,"options"],[130,33,148,2],[130,35,148,15],[131,0,148,15],[133,0,149,4],[133,12,149,8],[133,13,149,9],[133,102,149,21,"options"],[133,109,149,9],[133,110,149,8],[133,114,149,33],[133,115,149,34],[133,201,149,43,"options"],[133,208,149,34],[133,209,149,4],[133,211,149,53],[134,0,150,6],[134,16,150,12],[134,20,150,16,"Error"],[134,25,150,12],[134,26,151,8],[134,109,150,12],[134,110,150,6],[135,0,153,5],[137,0,155,4],[137,12,156,6,"options"],[137,19,156,13],[137,23,157,6,"options"],[137,30,157,13],[137,31,157,14,"source"],[137,37,156,6],[137,41,158,6,"options"],[137,48,158,13],[137,49,158,14,"source"],[137,55,158,6],[137,60,158,25],[137,69,156,6],[137,73,159,6,"options"],[137,80,159,13],[137,81,159,14,"source"],[137,87,159,6],[137,92,159,25],[137,100,156,6],[137,104,160,6,"options"],[137,111,160,13],[137,112,160,14,"source"],[137,118,160,6],[137,123,160,25],[137,130,155,4],[137,132,161,6],[138,0,162,6],[138,16,162,12],[138,20,162,16,"Error"],[138,25,162,12],[138,26,163,8],[138,143,162,12],[138,144,162,6],[139,0,165,5],[141,0,167,4],[141,13,167,9,"_modifiers"],[141,23,167,4],[141,24,167,20,"validatelimitToLast"],[141,43,167,4],[143,0,169,4],[143,15,169,11],[143,20,169,16,"_firestore"],[143,30,169,11],[143,31,169,27,"native"],[143,37,169,11],[143,38,170,7,"collectionGet"],[143,51,169,11],[143,52,171,8],[143,57,171,13,"_collectionPath"],[143,72,171,8],[143,73,171,29,"relativeName"],[143,85,169,11],[143,87,172,8],[143,92,172,13,"_modifiers"],[143,102,172,8],[143,103,172,24,"type"],[143,107,169,11],[143,109,173,8],[143,114,173,13,"_modifiers"],[143,124,173,8],[143,125,173,24,"filters"],[143,132,169,11],[143,134,174,8],[143,139,174,13,"_modifiers"],[143,149,174,8],[143,150,174,24,"orders"],[143,156,169,11],[143,158,175,8],[143,163,175,13,"_modifiers"],[143,173,175,8],[143,174,175,24,"options"],[143,181,169,11],[143,183,176,8,"options"],[143,190,169,11],[143,192,178,7,"then"],[143,196,169,11],[143,197,178,12],[143,207,178,12,"data"],[143,211,178,16],[144,0,178,16],[144,17,178,20],[144,21,178,24,"FirestoreQuerySnapshot"],[144,52,178,20],[144,53,178,47],[144,58,178,51],[144,59,178,52,"_firestore"],[144,69,178,20],[144,71,178,64],[144,76,178,20],[144,78,178,70,"data"],[144,82,178,20],[144,83,178,16],[145,0,178,16],[145,9,169,11],[145,10,169,4],[146,0,179,3],[149,13,181,2],[149,30,181,10,"other"],[149,35,181,2],[149,37,181,17],[150,0,182,4],[150,12,182,8],[150,14,182,10,"other"],[150,19,182,15],[150,31,182,27,"FirestoreQuery"],[150,45,182,8],[150,46,182,4],[150,48,182,44],[151,0,183,6],[151,16,183,12],[151,20,183,16,"Error"],[151,25,183,12],[151,26,184,8],[151,107,183,12],[151,108,183,6],[152,0,186,5],[154,0,189,4],[154,12,190,6],[154,17,190,11,"firestore"],[154,26,190,6],[154,27,190,21,"app"],[154,30,190,6],[154,31,190,25,"name"],[154,35,190,6],[154,40,190,34,"other"],[154,45,190,39],[154,46,190,40,"firestore"],[154,55,190,34],[154,56,190,50,"app"],[154,59,190,34],[154,60,190,54,"name"],[154,64,190,6],[154,68,191,6],[154,73,191,11,"_modifiers"],[154,83,191,6],[154,84,191,22,"type"],[154,88,191,6],[154,93,191,31,"other"],[154,98,191,36],[154,99,191,37,"_modifiers"],[154,109,191,31],[154,110,191,48,"type"],[154,114,190,6],[154,118,192,6],[154,123,192,11,"_modifiers"],[154,133,192,6],[154,134,192,22,"filters"],[154,141,192,6],[154,142,192,30,"length"],[154,148,192,6],[154,153,192,41,"other"],[154,158,192,46],[154,159,192,47,"_modifiers"],[154,169,192,41],[154,170,192,58,"filters"],[154,177,192,41],[154,178,192,66,"length"],[154,184,190,6],[154,188,193,6],[154,193,193,11,"_modifiers"],[154,203,193,6],[154,204,193,22,"orders"],[154,210,193,6],[154,211,193,29,"length"],[154,217,193,6],[154,222,193,40,"other"],[154,227,193,45],[154,228,193,46,"_modifiers"],[154,238,193,40],[154,239,193,57,"orders"],[154,245,193,40],[154,246,193,64,"length"],[154,252,190,6],[154,256,194,6],[154,261,194,11,"_collectionPath"],[154,276,194,6],[154,277,194,27,"relativeName"],[154,289,194,6],[154,294,194,44,"other"],[154,299,194,49],[154,300,194,50,"_collectionPath"],[154,315,194,44],[154,316,194,66,"relativeName"],[154,328,190,6],[154,332,195,6,"Object"],[154,338,195,12],[154,339,195,13,"keys"],[154,343,195,6],[154,344,195,18],[154,349,195,23,"_modifiers"],[154,359,195,18],[154,360,195,34,"options"],[154,367,195,6],[154,369,195,43,"length"],[154,375,195,6],[154,380,195,54,"Object"],[154,386,195,60],[154,387,195,61,"keys"],[154,391,195,54],[154,392,195,66,"other"],[154,397,195,71],[154,398,195,72,"_modifiers"],[154,408,195,66],[154,409,195,83,"options"],[154,416,195,54],[154,418,195,92,"length"],[154,424,189,4],[154,426,196,6],[155,0,197,6],[155,17,197,13],[155,22,197,6],[156,0,198,5],[158,0,202,4],[158,12,203,6,"JSON"],[158,16,203,10],[158,17,203,11,"stringify"],[158,26,203,6],[158,27,203,21],[158,32,203,26,"_modifiers"],[158,42,203,21],[158,43,203,37,"filters"],[158,50,203,6],[158,56,203,50,"JSON"],[158,60,203,54],[158,61,203,55,"stringify"],[158,70,203,50],[158,71,203,65,"other"],[158,76,203,70],[158,77,203,71,"_modifiers"],[158,87,203,65],[158,88,203,82,"filters"],[158,95,203,50],[158,96,203,6],[158,100,204,6,"JSON"],[158,104,204,10],[158,105,204,11,"stringify"],[158,114,204,6],[158,115,204,21],[158,120,204,26,"_modifiers"],[158,130,204,21],[158,131,204,37,"orders"],[158,137,204,6],[158,143,204,49,"JSON"],[158,147,204,53],[158,148,204,54,"stringify"],[158,157,204,49],[158,158,204,64,"other"],[158,163,204,69],[158,164,204,70,"_modifiers"],[158,174,204,64],[158,175,204,81,"orders"],[158,181,204,49],[158,182,203,6],[158,186,205,6,"JSON"],[158,190,205,10],[158,191,205,11,"stringify"],[158,200,205,6],[158,201,205,21],[158,206,205,26,"_modifiers"],[158,216,205,21],[158,217,205,37,"options"],[158,224,205,6],[158,230,205,50,"JSON"],[158,234,205,54],[158,235,205,55,"stringify"],[158,244,205,50],[158,245,205,65,"other"],[158,250,205,70],[158,251,205,71,"_modifiers"],[158,261,205,65],[158,262,205,82,"options"],[158,269,205,50],[158,270,202,4],[158,272,206,6],[159,0,207,6],[159,17,207,13],[159,22,207,6],[160,0,208,5],[162,0,210,4],[162,15,210,11],[162,19,210,4],[163,0,211,3],[166,13,213,2],[166,28,213,8,"limit"],[166,34,213,2],[166,36,213,15],[167,0,214,4],[167,12,214,8],[167,17,214,13,"_modifiers"],[167,27,214,8],[167,28,214,24,"isValidLimit"],[167,40,214,8],[167,41,214,37,"limit"],[167,47,214,8],[167,48,214,4],[167,50,214,45],[168,0,215,6],[168,16,215,12],[168,20,215,16,"Error"],[168,25,215,12],[168,26,216,8],[168,112,215,12],[168,113,215,6],[169,0,218,5],[171,0,220,4],[171,12,220,10,"modifiers"],[171,21,220,19],[171,24,220,22],[171,29,220,27,"_modifiers"],[171,39,220,22],[171,40,220,38,"_copy"],[171,45,220,22],[171,48,220,46,"limit"],[171,53,220,22],[171,54,220,52,"limit"],[171,60,220,22],[171,61,220,4],[173,0,222,4],[173,15,222,11],[173,19,222,15,"FirestoreQuery"],[173,33,222,11],[173,34,222,30],[173,39,222,35,"_firestore"],[173,49,222,11],[173,51,222,47],[173,56,222,52,"_collectionPath"],[173,71,222,11],[173,73,222,69,"modifiers"],[173,82,222,11],[173,83,222,4],[174,0,223,3],[177,13,225,2],[177,34,225,14,"limitToLast"],[177,46,225,2],[177,48,225,27],[178,0,226,4],[178,12,226,8],[178,17,226,13,"_modifiers"],[178,27,226,8],[178,28,226,24,"isValidLimitToLast"],[178,46,226,8],[178,47,226,43,"limitToLast"],[178,59,226,8],[178,60,226,4],[178,62,226,57],[179,0,227,6],[179,16,227,12],[179,20,227,16,"Error"],[179,25,227,12],[179,26,228,8],[179,124,227,12],[179,125,227,6],[180,0,230,5],[182,0,232,4],[182,12,232,10,"modifiers"],[182,21,232,19],[182,24,232,22],[182,29,232,27,"_modifiers"],[182,39,232,22],[182,40,232,38,"_copy"],[182,45,232,22],[182,48,232,46,"limitToLast"],[182,59,232,22],[182,60,232,58,"limitToLast"],[182,72,232,22],[182,73,232,4],[184,0,234,4],[184,15,234,11],[184,19,234,15,"FirestoreQuery"],[184,33,234,11],[184,34,234,30],[184,39,234,35,"_firestore"],[184,49,234,11],[184,51,234,47],[184,56,234,52,"_collectionPath"],[184,71,234,11],[184,73,234,69,"modifiers"],[184,82,234,11],[184,83,234,4],[185,0,235,3],[188,13,237,2],[188,35,237,22],[189,0,237,22],[191,0,238,4],[191,12,238,8,"snapshotListenOptions"],[191,33,238,4],[192,0,239,4],[192,12,239,8,"callback"],[192,20,239,4],[193,0,240,4],[193,12,240,8,"onNext"],[193,18,240,4],[194,0,241,4],[194,12,241,8,"onError"],[194,19,241,4],[196,0,243,4],[196,13,243,9,"_modifiers"],[196,23,243,4],[196,24,243,20,"validatelimitToLast"],[196,43,243,4],[198,0,245,4],[198,12,245,8],[199,0,245,8],[199,45,237,16,"args"],[199,49,245,8],[200,0,237,16,"args"],[200,12,237,16,"args"],[200,16,245,8],[201,0,245,8],[203,0,246,6],[203,14,246,12,"options"],[203,21,246,19],[203,24,246,22],[203,89,246,40,"args"],[203,93,246,22],[203,94,246,6],[204,0,247,6,"snapshotListenOptions"],[204,10,247,6,"snapshotListenOptions"],[204,31,247,27],[204,34,247,30,"options"],[204,41,247,37],[204,42,247,38,"snapshotListenOptions"],[204,63,247,6],[205,0,248,6,"callback"],[205,10,248,6,"callback"],[205,18,248,14],[205,21,248,17,"options"],[205,28,248,24],[205,29,248,25,"callback"],[205,37,248,6],[206,0,249,6,"onNext"],[206,10,249,6,"onNext"],[206,16,249,12],[206,19,249,15,"options"],[206,26,249,22],[206,27,249,23,"onNext"],[206,33,249,6],[207,0,250,6,"onError"],[207,10,250,6,"onError"],[207,17,250,13],[207,20,250,16,"options"],[207,27,250,23],[207,28,250,24,"onError"],[207,35,250,6],[208,0,251,5],[208,9,245,4],[208,10,251,6],[208,17,251,13,"e"],[208,18,251,6],[208,20,251,16],[209,0,252,6],[209,16,252,12],[209,20,252,16,"Error"],[209,25,252,12],[209,79,252,73,"e"],[209,80,252,74],[209,81,252,75,"message"],[209,88,252,12],[209,89,252,6],[210,0,253,5],[212,0,255,4],[212,17,255,13,"handleSuccess"],[212,30,255,4],[212,31,255,27,"querySnapshot"],[212,44,255,4],[212,46,255,42],[213,0,256,6,"callback"],[213,10,256,6,"callback"],[213,18,256,14],[213,19,256,15,"querySnapshot"],[213,32,256,14],[213,34,256,30],[213,38,256,14],[213,39,256,6],[214,0,257,6,"onNext"],[214,10,257,6,"onNext"],[214,16,257,12],[214,17,257,13,"querySnapshot"],[214,30,257,12],[214,31,257,6],[215,0,258,5],[217,0,260,4],[217,17,260,13,"handleError"],[217,28,260,4],[217,29,260,25,"error"],[217,34,260,4],[217,36,260,32],[218,0,261,6,"callback"],[218,10,261,6,"callback"],[218,18,261,14],[218,19,261,15],[218,23,261,14],[218,25,261,21,"error"],[218,30,261,14],[218,31,261,6],[219,0,262,6,"onError"],[219,10,262,6,"onError"],[219,17,262,13],[219,18,262,14,"error"],[219,23,262,13],[219,24,262,6],[220,0,263,5],[222,0,265,4],[222,12,265,10,"listenerId"],[222,22,265,20],[222,25,265,23,"_id"],[222,28,265,26],[222,30,265,4],[224,0,267,4],[224,12,267,10,"onSnapshotSubscription"],[224,34,267,32],[224,37,267,35],[224,42,267,40,"_firestore"],[224,52,267,35],[224,53,267,51,"emitter"],[224,60,267,35],[224,61,267,59,"addListener"],[224,72,267,35],[224,73,268,6],[224,78,268,11,"_firestore"],[224,88,268,6],[224,89,268,22,"eventNameForApp"],[224,104,268,6],[224,142,268,73,"listenerId"],[224,152,268,6],[224,153,267,35],[224,155,269,6],[224,165,269,6,"event"],[224,170,269,11],[224,172,269,15],[225,0,270,8],[225,14,270,12,"event"],[225,19,270,17],[225,20,270,18,"body"],[225,24,270,12],[225,25,270,23,"error"],[225,30,270,8],[225,32,270,30],[226,0,271,10,"handleError"],[226,12,271,10,"handleError"],[226,23,271,21],[226,24,271,22,"NativeError"],[226,53,271,34,"fromEvent"],[226,62,271,22],[226,63,271,44,"event"],[226,68,271,49],[226,69,271,50,"body"],[226,73,271,44],[226,74,271,55,"error"],[226,79,271,22],[226,81,271,62],[226,92,271,22],[226,93,271,21],[226,94,271,10],[227,0,272,9],[227,11,270,8],[227,17,272,15],[228,0,273,10],[228,16,273,16,"querySnapshot"],[228,29,273,29],[228,32,273,32],[228,36,273,36,"FirestoreQuerySnapshot"],[228,67,273,32],[228,68,274,12],[228,74,274,16],[228,75,274,17,"_firestore"],[228,85,273,32],[228,87,275,12],[228,93,273,32],[228,95,276,12,"event"],[228,100,276,17],[228,101,276,18,"body"],[228,105,276,12],[228,106,276,23,"snapshot"],[228,114,273,32],[228,115,273,10],[229,0,278,10,"handleSuccess"],[229,12,278,10,"handleSuccess"],[229,25,278,23],[229,26,278,24,"querySnapshot"],[229,39,278,23],[229,40,278,10],[230,0,279,9],[231,0,280,7],[231,9,267,35],[231,10,267,4],[233,0,283,4],[233,12,283,10,"unsubscribe"],[233,23,283,21],[233,26,283,24],[233,35,283,10,"unsubscribe"],[233,46,283,24],[233,49,283,30],[234,0,284,6,"onSnapshotSubscription"],[234,10,284,6,"onSnapshotSubscription"],[234,32,284,28],[234,33,284,29,"remove"],[234,39,284,6],[236,0,285,6],[236,10,285,6],[236,16,285,10],[236,17,285,11,"_firestore"],[236,27,285,6],[236,28,285,22,"native"],[236,34,285,6],[236,35,285,29,"collectionOffSnapshot"],[236,56,285,6],[236,57,285,51,"listenerId"],[236,67,285,6],[237,0,286,5],[237,9,283,4],[239,0,288,4],[239,13,288,9,"_firestore"],[239,23,288,4],[239,24,288,20,"native"],[239,30,288,4],[239,31,288,27,"collectionOnSnapshot"],[239,51,288,4],[239,52,289,6],[239,57,289,11,"_collectionPath"],[239,72,289,6],[239,73,289,27,"relativeName"],[239,85,288,4],[239,87,290,6],[239,92,290,11,"_modifiers"],[239,102,290,6],[239,103,290,22,"type"],[239,107,288,4],[239,109,291,6],[239,114,291,11,"_modifiers"],[239,124,291,6],[239,125,291,22,"filters"],[239,132,288,4],[239,134,292,6],[239,139,292,11,"_modifiers"],[239,149,292,6],[239,150,292,22,"orders"],[239,156,288,4],[239,158,293,6],[239,163,293,11,"_modifiers"],[239,173,293,6],[239,174,293,22,"options"],[239,181,288,4],[239,183,294,6,"listenerId"],[239,193,288,4],[239,195,295,6,"snapshotListenOptions"],[239,216,288,4],[241,0,298,4],[241,15,298,11,"unsubscribe"],[241,26,298,4],[242,0,299,3],[245,13,301,2],[245,30,301,10,"fieldPath"],[245,39,301,2],[245,41,301,21,"directionStr"],[245,53,301,2],[245,55,301,35],[246,0,302,4],[246,12,302,8],[246,13,302,9],[246,99,302,18,"fieldPath"],[246,108,302,9],[246,109,302,8],[246,113,302,32],[246,115,302,34,"fieldPath"],[246,124,302,43],[246,136,302,55,"FirestoreFieldPath"],[246,163,302,32],[246,164,302,4],[246,166,302,76],[247,0,303,6],[247,16,303,12],[247,20,303,16,"Error"],[247,25,303,12],[247,26,304,8],[247,127,303,12],[247,128,303,6],[248,0,306,5],[250,0,308,4],[250,12,308,8,"path"],[250,16,308,4],[252,0,310,4],[252,12,310,8],[252,98,310,17,"fieldPath"],[252,107,310,8],[252,108,310,4],[252,110,310,29],[253,0,311,6],[253,14,311,10],[254,0,312,8,"path"],[254,12,312,8,"path"],[254,16,312,12],[254,19,312,15],[254,67,312,38,"fieldPath"],[254,76,312,15],[254,77,312,8],[255,0,313,7],[255,11,311,6],[255,12,313,8],[255,19,313,15,"e"],[255,20,313,8],[255,22,313,18],[256,0,314,8],[256,18,314,14],[256,22,314,18,"Error"],[256,27,314,14],[256,90,314,84,"e"],[256,91,314,85],[256,92,314,86,"message"],[256,99,314,14],[256,106,314,8],[257,0,315,7],[258,0,316,5],[258,9,310,4],[258,15,316,11],[259,0,317,6,"path"],[259,10,317,6,"path"],[259,14,317,10],[259,17,317,13,"fieldPath"],[259,26,317,6],[260,0,318,5],[262,0,320,4],[262,12,320,8],[262,13,320,9],[262,102,320,21,"directionStr"],[262,114,320,9],[262,115,320,8],[262,119,320,38],[262,120,320,39],[262,125,320,44,"_modifiers"],[262,135,320,39],[262,136,320,55,"isValidDirection"],[262,152,320,39],[262,153,320,72,"directionStr"],[262,165,320,39],[262,166,320,4],[262,168,320,87],[263,0,321,6],[263,16,321,12],[263,20,321,16,"Error"],[263,25,321,12],[263,26,322,8],[263,122,321,12],[263,123,321,6],[264,0,324,5],[266,0,326,4],[266,12,326,8],[266,17,326,13,"_modifiers"],[266,27,326,8],[266,28,326,24,"hasStart"],[266,36,326,8],[266,38,326,4],[266,40,326,36],[267,0,327,6],[267,16,327,12],[267,20,327,16,"Error"],[267,25,327,12],[267,26,328,8],[267,156,327,12],[267,157,327,6],[268,0,330,5],[270,0,332,4],[270,12,332,8],[270,17,332,13,"_modifiers"],[270,27,332,8],[270,28,332,24,"hasEnd"],[270,34,332,8],[270,36,332,4],[270,38,332,34],[271,0,333,6],[271,16,333,12],[271,20,333,16,"Error"],[271,25,333,12],[271,26,334,8],[271,153,333,12],[271,154,333,6],[272,0,336,5],[274,0,338,4],[274,12,338,10,"modifiers"],[274,21,338,19],[274,24,338,22],[274,29,338,27,"_modifiers"],[274,39,338,22],[274,40,338,38,"_copy"],[274,45,338,22],[274,48,338,46,"orderBy"],[274,55,338,22],[274,56,338,54,"path"],[274,60,338,22],[274,62,338,60,"directionStr"],[274,74,338,22],[274,75,338,4],[276,0,340,4],[276,12,340,8],[277,0,341,6,"modifiers"],[277,10,341,6,"modifiers"],[277,19,341,15],[277,20,341,16,"validateOrderBy"],[277,35,341,6],[278,0,342,5],[278,9,340,4],[278,10,342,6],[278,17,342,13,"e"],[278,18,342,6],[278,20,342,16],[279,0,343,6],[279,16,343,12],[279,20,343,16,"Error"],[279,25,343,12],[279,75,343,69,"e"],[279,76,343,70],[279,77,343,71,"message"],[279,84,343,12],[279,85,343,6],[280,0,344,5],[282,0,346,4],[282,15,346,11],[282,19,346,15,"FirestoreQuery"],[282,33,346,11],[282,34,346,30],[282,39,346,35,"_firestore"],[282,49,346,11],[282,51,346,47],[282,56,346,52,"_collectionPath"],[282,71,346,11],[282,73,346,69,"modifiers"],[282,82,346,11],[282,83,346,4],[283,0,347,3],[286,13,349,2],[286,33,349,13,"docOrField"],[286,43,349,2],[286,45,349,36],[287,0,349,36],[287,43,349,28,"fields"],[287,49,349,36],[288,0,349,28,"fields"],[288,10,349,28,"fields"],[288,16,349,36],[289,0,349,36],[291,0,350,4],[291,15,350,11],[291,19,350,15,"FirestoreQuery"],[291,33,350,11],[291,34,351,6],[291,39,351,11,"_firestore"],[291,49,350,11],[291,51,352,6],[291,56,352,11,"_collectionPath"],[291,71,350,11],[291,73,353,6],[291,78,353,11,"_handleQueryCursor"],[291,96,353,6],[291,97,353,30],[291,109,353,6],[291,111,353,44,"docOrField"],[291,121,353,6],[291,123,353,56,"fields"],[291,129,353,6],[291,130,350,11],[291,131,350,4],[292,0,355,3],[295,13,357,2],[295,30,357,10,"docOrField"],[295,40,357,2],[295,42,357,33],[296,0,357,33],[296,43,357,25,"fields"],[296,49,357,33],[297,0,357,25,"fields"],[297,10,357,25,"fields"],[297,16,357,33],[298,0,357,33],[300,0,358,4],[300,15,358,11],[300,19,358,15,"FirestoreQuery"],[300,33,358,11],[300,34,359,6],[300,39,359,11,"_firestore"],[300,49,358,11],[300,51,360,6],[300,56,360,11,"_collectionPath"],[300,71,358,11],[300,73,361,6],[300,78,361,11,"_handleQueryCursor"],[300,96,361,6],[300,97,361,30],[300,106,361,6],[300,108,361,41,"docOrField"],[300,118,361,6],[300,120,361,53,"fields"],[300,126,361,6],[300,127,358,11],[300,128,358,4],[301,0,363,3],[304,13,365,2],[304,28,365,8,"fieldPath"],[304,37,365,2],[304,39,365,19,"opStr"],[304,44,365,2],[304,46,365,26,"value"],[304,51,365,2],[304,53,365,33],[305,0,366,4],[305,12,366,8],[305,13,366,9],[305,99,366,18,"fieldPath"],[305,108,366,9],[305,109,366,8],[305,113,366,32],[305,115,366,34,"fieldPath"],[305,124,366,43],[305,136,366,55,"FirestoreFieldPath"],[305,163,366,32],[305,164,366,4],[305,166,366,76],[306,0,367,6],[306,16,367,12],[306,20,367,16,"Error"],[306,25,367,12],[306,26,368,8],[306,125,367,12],[306,126,367,6],[307,0,370,5],[309,0,372,4],[309,12,372,8,"path"],[309,16,372,4],[311,0,374,4],[311,12,374,8],[311,98,374,17,"fieldPath"],[311,107,374,8],[311,108,374,4],[311,110,374,29],[312,0,375,6],[312,14,375,10],[313,0,376,8,"path"],[313,12,376,8,"path"],[313,16,376,12],[313,19,376,15],[313,67,376,38,"fieldPath"],[313,76,376,15],[313,77,376,8],[314,0,377,7],[314,11,375,6],[314,12,377,8],[314,19,377,15,"e"],[314,20,377,8],[314,22,377,18],[315,0,378,8],[315,18,378,14],[315,22,378,18,"Error"],[315,27,378,14],[315,88,378,82,"e"],[315,89,378,83],[315,90,378,84,"message"],[315,97,378,14],[315,104,378,8],[316,0,379,7],[317,0,380,5],[317,9,374,4],[317,15,380,11],[318,0,381,6,"path"],[318,10,381,6,"path"],[318,14,381,10],[318,17,381,13,"fieldPath"],[318,26,381,6],[319,0,382,5],[321,0,384,4],[321,12,384,8],[321,13,384,9],[321,18,384,14,"_modifiers"],[321,28,384,9],[321,29,384,25,"isValidOperator"],[321,44,384,9],[321,45,384,41,"opStr"],[321,50,384,9],[321,51,384,4],[321,53,384,49],[322,0,385,6],[322,16,385,12],[322,20,385,16,"Error"],[322,25,385,12],[322,26,386,8],[322,201,385,12],[322,202,385,6],[323,0,388,5],[325,0,390,4],[325,12,390,8],[325,101,390,20,"value"],[325,106,390,8],[325,107,390,4],[325,109,390,28],[326,0,391,6],[326,16,391,12],[326,20,391,16,"Error"],[326,25,391,12],[326,26,392,8],[326,103,391,12],[326,104,391,6],[327,0,394,5],[329,0,396,4],[329,12,396,8],[329,96,396,15,"value"],[329,101,396,8],[329,106,396,25],[329,107,396,26],[329,112,396,31,"_modifiers"],[329,122,396,26],[329,123,396,42,"isEqualOperator"],[329,138,396,26],[329,139,396,58,"opStr"],[329,144,396,26],[329,145,396,4],[329,147,396,66],[330,0,397,6],[330,16,397,12],[330,20,397,16,"Error"],[330,25,397,12],[330,26,398,8],[330,144,397,12],[330,145,397,6],[331,0,400,5],[333,0,402,4],[333,12,402,8],[333,17,402,13,"_modifiers"],[333,27,402,8],[333,28,402,24,"isInOperator"],[333,40,402,8],[333,41,402,37,"opStr"],[333,46,402,8],[333,47,402,4],[333,49,402,45],[334,0,403,6],[334,14,403,10],[334,15,403,11],[334,100,403,19,"value"],[334,105,403,11],[334,106,403,10],[334,110,403,29],[334,111,403,30,"value"],[334,116,403,35],[334,117,403,36,"length"],[334,123,403,6],[334,125,403,44],[335,0,404,8],[335,18,404,14],[335,22,404,18,"Error"],[335,27,404,14],[335,137,405,117,"opStr"],[335,142,404,14],[335,158,404,8],[336,0,407,7],[338,0,409,6],[338,14,409,10,"value"],[338,19,409,15],[338,20,409,16,"length"],[338,26,409,10],[338,29,409,25],[338,31,409,6],[338,33,409,29],[339,0,410,8],[339,18,410,14],[339,22,410,18,"Error"],[339,27,410,14],[339,103,411,83,"opStr"],[339,108,410,14],[339,176,410,8],[340,0,413,7],[341,0,414,5],[343,0,416,4],[343,12,416,10,"modifiers"],[343,21,416,19],[343,24,416,22],[343,29,416,27,"_modifiers"],[343,39,416,22],[343,40,416,38,"_copy"],[343,45,416,22],[343,48,416,46,"where"],[343,53,416,22],[343,54,416,52,"path"],[343,58,416,22],[343,60,416,58,"opStr"],[343,65,416,22],[343,67,416,65,"value"],[343,72,416,22],[343,73,416,4],[345,0,418,4],[345,12,418,8],[346,0,419,6,"modifiers"],[346,10,419,6,"modifiers"],[346,19,419,15],[346,20,419,16,"validateWhere"],[346,33,419,6],[347,0,420,5],[347,9,418,4],[347,10,420,6],[347,17,420,13,"e"],[347,18,420,6],[347,20,420,16],[348,0,421,6],[348,16,421,12],[348,20,421,16,"Error"],[348,25,421,12],[348,73,421,67,"e"],[348,74,421,68],[348,75,421,69,"message"],[348,82,421,12],[348,83,421,6],[349,0,422,5],[351,0,424,4],[351,15,424,11],[351,19,424,15,"FirestoreQuery"],[351,33,424,11],[351,34,424,30],[351,39,424,35,"_firestore"],[351,49,424,11],[351,51,424,47],[351,56,424,52,"_collectionPath"],[351,71,424,11],[351,73,424,69,"modifiers"],[351,82,424,11],[351,83,424,4],[352,0,425,3]],"functionMap":{"names":["<global>","FirestoreQuery","constructor","get__firestore","_handleQueryCursor","endAt","endBefore","get","_firestore.native.collectionGet.then$argument_0","isEqual","limit","limitToLast","onSnapshot","handleSuccess","handleError","_firestore.emitter.addListener$argument_1","unsubscribe","orderBy","startAfter","startAt","where"],"mappings":"AAA;eCgC;ECC;GDI;EEE;GFE;EGE;GHsF;EIE;GJM;EKE;GLM;EME;YC8B,+DD;GNC;EQE;GR8B;ESE;GTU;EUE;GVU;EWE;ICkB;KDG;IEE;KFG;MGM;OHW;wBIG;KJG;GXa;EgBE;GhB8C;EiBE;GjBM;EkBE;GlBM;EmBE;GnB4D;CDC"}},"type":"js/module"}]}