{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":386,"column":0}},{"start":{"line":2,"column":0},"end":{"line":2,"column":38}}]}},{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":386,"column":0}}]}},{"name":"./BaseRouter","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0},"end":{"line":2,"column":38}}]}},{"name":"nanoid/non-secure","data":{"asyncType":null,"locs":[{"start":{"line":161,"column":24},"end":{"line":161,"column":30},"identifierName":"nanoid"},{"start":{"line":175,"column":20},"end":{"line":175,"column":26},"identifierName":"nanoid"},{"start":{"line":201,"column":27},"end":{"line":201,"column":33},"identifierName":"nanoid"},{"start":{"line":227,"column":22},"end":{"line":227,"column":28},"identifierName":"nanoid"},{"start":{"line":244,"column":28},"end":{"line":244,"column":34},"identifierName":"nanoid"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.TabActions = void 0;\n  exports.default = TabRouter;\n\n  var _extends2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _BaseRouter = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"./BaseRouter\"));\n\n  var TYPE_ROUTE = 'route';\n  var TabActions = {\n    jumpTo: function jumpTo(name, params) {\n      return {\n        type: 'JUMP_TO',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    }\n  };\n  exports.TabActions = TabActions;\n\n  var getRouteHistory = function getRouteHistory(routes, index, backBehavior, initialRouteName) {\n    var history = [{\n      type: TYPE_ROUTE,\n      key: routes[index].key\n    }];\n    var initialRouteIndex;\n\n    switch (backBehavior) {\n      case 'order':\n        for (var i = index; i > 0; i--) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[i - 1].key\n          });\n        }\n\n        break;\n\n      case 'firstRoute':\n        if (index !== 0) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[0].key\n          });\n        }\n\n        break;\n\n      case 'initialRoute':\n        initialRouteIndex = routes.findIndex(function (route) {\n          return route.name === initialRouteName;\n        });\n        initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n\n        if (index !== initialRouteIndex) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[initialRouteIndex].key\n          });\n        }\n\n        break;\n\n      case 'history':\n        break;\n    }\n\n    return history;\n  };\n\n  var changeIndex = function changeIndex(state, index, backBehavior, initialRouteName) {\n    var history;\n\n    if (backBehavior === 'history') {\n      var currentKey = state.routes[index].key;\n      history = state.history.filter(function (it) {\n        return it.type === 'route' ? it.key !== currentKey : false;\n      }).concat({\n        type: TYPE_ROUTE,\n        key: currentKey\n      });\n    } else {\n      history = getRouteHistory(state.routes, index, backBehavior, initialRouteName);\n    }\n\n    return (0, _extends2.default)({}, state, {\n      index: index,\n      history: history\n    });\n  };\n\n  function TabRouter(_ref) {\n    var initialRouteName = _ref.initialRouteName,\n        _ref$backBehavior = _ref.backBehavior,\n        backBehavior = _ref$backBehavior === void 0 ? 'history' : _ref$backBehavior;\n    var router = (0, _extends2.default)({}, _BaseRouter.default, {\n      type: 'tab',\n      getInitialState: function getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList;\n        var index = initialRouteName !== undefined && routeNames.includes(initialRouteName) ? routeNames.indexOf(initialRouteName) : 0;\n        var routes = routeNames.map(function (name) {\n          return {\n            name: name,\n            key: name + \"-\" + (0, _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\").nanoid)(),\n            params: routeParamList[name]\n          };\n        });\n        var history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        return {\n          stale: false,\n          type: 'tab',\n          key: \"tab-\" + (0, _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\").nanoid)(),\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes\n        };\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref3) {\n        var _state$routes, _state$index, _state$history$filter, _state$history;\n\n        var routeNames = _ref3.routeNames,\n            routeParamList = _ref3.routeParamList;\n        var state = partialState;\n\n        if (state.stale === false) {\n          return state;\n        }\n\n        var routes = routeNames.map(function (name) {\n          var route = state.routes.find(function (r) {\n            return r.name === name;\n          });\n          return (0, _extends2.default)({}, route, {\n            name: name,\n            key: route && route.name === name && route.key ? route.key : name + \"-\" + (0, _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\").nanoid)(),\n            params: routeParamList[name] !== undefined ? (0, _extends2.default)({}, routeParamList[name], route ? route.params : undefined) : route ? route.params : undefined\n          });\n        });\n        var index = Math.min(Math.max(routeNames.indexOf((_state$routes = state.routes[(_state$index = state == null ? void 0 : state.index) != null ? _state$index : 0]) == null ? void 0 : _state$routes.name), 0), routes.length - 1);\n        var history = (_state$history$filter = (_state$history = state.history) == null ? void 0 : _state$history.filter(function (it) {\n          return routes.find(function (r) {\n            return r.key === it.key;\n          });\n        })) != null ? _state$history$filter : [];\n        return changeIndex({\n          stale: false,\n          type: 'tab',\n          key: \"tab-\" + (0, _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\").nanoid)(),\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes\n        }, index, backBehavior, initialRouteName);\n      },\n      getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref4) {\n        var routeNames = _ref4.routeNames,\n            routeParamList = _ref4.routeParamList;\n        var routes = routeNames.map(function (name) {\n          return state.routes.find(function (r) {\n            return r.name === name;\n          }) || {\n            name: name,\n            key: name + \"-\" + (0, _$$_REQUIRE(_dependencyMap[3], \"nanoid/non-secure\").nanoid)(),\n            params: routeParamList[name]\n          };\n        });\n        var index = Math.max(0, routeNames.indexOf(state.routes[state.index].name));\n        var history = state.history.filter(function (it) {\n          return it.type !== 'route' || routes.find(function (r) {\n            return r.key === it.key;\n          });\n        });\n\n        if (!history.length) {\n          history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        }\n\n        return (0, _extends2.default)({}, state, {\n          history: history,\n          routeNames: routeNames,\n          routes: routes,\n          index: index\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(function (r) {\n          return r.key === key;\n        });\n\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n\n        return changeIndex(state, index, backBehavior, initialRouteName);\n      },\n      getStateForAction: function getStateForAction(state, action, _ref5) {\n        var routeParamList = _ref5.routeParamList;\n\n        switch (action.type) {\n          case 'JUMP_TO':\n          case 'NAVIGATE':\n            {\n              var index = -1;\n\n              if (action.type === 'NAVIGATE' && action.payload.key) {\n                index = state.routes.findIndex(function (route) {\n                  return route.key === action.payload.key;\n                });\n              } else {\n                index = state.routes.findIndex(function (route) {\n                  return route.name === action.payload.name;\n                });\n              }\n\n              if (index === -1) {\n                return null;\n              }\n\n              return changeIndex((0, _extends2.default)({}, state, {\n                routes: action.payload.params !== undefined ? state.routes.map(function (route, i) {\n                  if (i !== index) {\n                    return route;\n                  }\n\n                  var params;\n\n                  if (action.type === 'NAVIGATE' && action.payload.merge === false) {\n                    params = routeParamList[route.name] !== undefined ? (0, _extends2.default)({}, routeParamList[route.name], action.payload.params) : action.payload.params;\n                  } else {\n                    params = action.payload.params ? (0, _extends2.default)({}, route.params, action.payload.params) : route.params;\n                  }\n\n                  return params !== route.params ? (0, _extends2.default)({}, route, {\n                    params: params\n                  }) : route;\n                }) : state.routes\n              }), index, backBehavior, initialRouteName);\n            }\n\n          case 'GO_BACK':\n            {\n              if (state.history.length === 1) {\n                return null;\n              }\n\n              var previousKey = state.history[state.history.length - 2].key;\n\n              var _index = state.routes.findIndex(function (route) {\n                return route.key === previousKey;\n              });\n\n              if (_index === -1) {\n                return null;\n              }\n\n              return (0, _extends2.default)({}, state, {\n                history: state.history.slice(0, -1),\n                index: _index\n              });\n            }\n\n          default:\n            return _BaseRouter.default.getStateForAction(state, action);\n        }\n      },\n      shouldActionChangeFocus: function shouldActionChangeFocus(action) {\n        return action.type === 'NAVIGATE';\n      },\n      actionCreators: TabActions\n    });\n    return router;\n  }\n});","lineCount":280,"map":[[10,0,2,0],[12,0,59,0],[12,6,59,6,"TYPE_ROUTE"],[12,16,59,16],[12,19,59,19],[12,26,59,0],[13,0,61,7],[13,6,61,13,"TabActions"],[13,16,61,23],[13,19,61,26],[14,0,62,2,"jumpTo"],[14,4,62,2,"jumpTo"],[14,10,61,26],[14,28,62,9,"name"],[14,32,61,26],[14,34,62,23,"params"],[14,40,61,26],[14,42,62,55],[15,0,63,4],[15,13,63,11],[16,0,63,13,"type"],[16,8,63,13,"type"],[16,12,63,17],[16,14,63,19],[16,23,63,11],[17,0,63,30,"payload"],[17,8,63,30,"payload"],[17,15,63,37],[17,17,63,39],[18,0,63,41,"name"],[18,10,63,41,"name"],[18,14,63,45],[18,16,63,41,"name"],[18,20,63,39],[19,0,63,47,"params"],[19,10,63,47,"params"],[19,16,63,53],[19,18,63,47,"params"],[20,0,63,39],[21,0,63,11],[21,7,63,4],[22,0,64,3],[23,0,61,26],[23,3,61,7],[26,0,67,0],[26,6,67,6,"getRouteHistory"],[26,21,67,21],[26,24,67,24],[26,33,67,6,"getRouteHistory"],[26,48,67,24],[26,49,68,2,"routes"],[26,55,67,24],[26,57,69,2,"index"],[26,62,67,24],[26,64,70,2,"backBehavior"],[26,76,67,24],[26,78,71,2,"initialRouteName"],[26,94,67,24],[26,96,72,5],[27,0,73,2],[27,8,73,8,"history"],[27,15,73,15],[27,18,73,18],[27,19,73,19],[28,0,73,21,"type"],[28,6,73,21,"type"],[28,10,73,25],[28,12,73,27,"TYPE_ROUTE"],[28,22,73,19],[29,0,73,39,"key"],[29,6,73,39,"key"],[29,9,73,42],[29,11,73,44,"routes"],[29,17,73,50],[29,18,73,51,"index"],[29,23,73,50],[29,24,73,44],[29,25,73,58,"key"],[30,0,73,19],[30,5,73,18],[30,6,73,2],[31,0,74,2],[31,8,74,6,"initialRouteIndex"],[31,25,74,2],[33,0,76,2],[33,12,76,10,"backBehavior"],[33,24,76,2],[34,0,77,4],[34,11,77,9],[34,18,77,4],[35,0,78,6],[35,13,78,11],[35,17,78,15,"i"],[35,18,78,16],[35,21,78,19,"index"],[35,26,78,6],[35,28,78,26,"i"],[35,29,78,27],[35,32,78,30],[35,33,78,6],[35,35,78,33,"i"],[35,36,78,34],[35,38,78,6],[35,40,78,38],[36,0,79,8,"history"],[36,10,79,8,"history"],[36,17,79,15],[36,18,79,16,"unshift"],[36,25,79,8],[36,26,79,24],[37,0,79,26,"type"],[37,12,79,26,"type"],[37,16,79,30],[37,18,79,32,"TYPE_ROUTE"],[37,28,79,24],[38,0,79,44,"key"],[38,12,79,44,"key"],[38,15,79,47],[38,17,79,49,"routes"],[38,23,79,55],[38,24,79,56,"i"],[38,25,79,57],[38,28,79,60],[38,29,79,55],[38,30,79,49],[38,31,79,63,"key"],[39,0,79,24],[39,11,79,8],[40,0,80,7],[42,0,81,6],[44,0,82,4],[44,11,82,9],[44,23,82,4],[45,0,83,6],[45,12,83,10,"index"],[45,17,83,15],[45,22,83,20],[45,23,83,6],[45,25,83,23],[46,0,84,8,"history"],[46,10,84,8,"history"],[46,17,84,15],[46,18,84,16,"unshift"],[46,25,84,8],[46,26,84,24],[47,0,85,10,"type"],[47,12,85,10,"type"],[47,16,85,14],[47,18,85,16,"TYPE_ROUTE"],[47,28,84,24],[48,0,86,10,"key"],[48,12,86,10,"key"],[48,15,86,13],[48,17,86,15,"routes"],[48,23,86,21],[48,24,86,22],[48,25,86,21],[48,26,86,15],[48,27,86,25,"key"],[49,0,84,24],[49,11,84,8],[50,0,88,7],[52,0,89,6],[54,0,90,4],[54,11,90,9],[54,25,90,4],[55,0,91,6,"initialRouteIndex"],[55,8,91,6,"initialRouteIndex"],[55,25,91,23],[55,28,91,26,"routes"],[55,34,91,32],[55,35,91,33,"findIndex"],[55,44,91,26],[55,45,92,8],[55,55,92,9,"route"],[55,60,92,8],[56,0,92,8],[56,17,92,19,"route"],[56,22,92,24],[56,23,92,25,"name"],[56,27,92,19],[56,32,92,34,"initialRouteName"],[56,48,92,8],[57,0,92,8],[57,9,91,26],[57,10,91,6],[58,0,94,6,"initialRouteIndex"],[58,8,94,6,"initialRouteIndex"],[58,25,94,23],[58,28,94,26,"initialRouteIndex"],[58,45,94,43],[58,50,94,48],[58,51,94,49],[58,52,94,26],[58,55,94,53],[58,56,94,26],[58,59,94,57,"initialRouteIndex"],[58,76,94,6],[60,0,96,6],[60,12,96,10,"index"],[60,17,96,15],[60,22,96,20,"initialRouteIndex"],[60,39,96,6],[60,41,96,39],[61,0,97,8,"history"],[61,10,97,8,"history"],[61,17,97,15],[61,18,97,16,"unshift"],[61,25,97,8],[61,26,97,24],[62,0,98,10,"type"],[62,12,98,10,"type"],[62,16,98,14],[62,18,98,16,"TYPE_ROUTE"],[62,28,97,24],[63,0,99,10,"key"],[63,12,99,10,"key"],[63,15,99,13],[63,17,99,15,"routes"],[63,23,99,21],[63,24,99,22,"initialRouteIndex"],[63,41,99,21],[63,42,99,15],[63,43,99,41,"key"],[64,0,97,24],[64,11,97,8],[65,0,101,7],[67,0,102,6],[69,0,103,4],[69,11,103,9],[69,20,103,4],[70,0,105,6],[71,0,76,2],[73,0,108,2],[73,11,108,9,"history"],[73,18,108,2],[74,0,109,1],[74,3,67,0],[76,0,111,0],[76,6,111,6,"changeIndex"],[76,17,111,17],[76,20,111,20],[76,29,111,6,"changeIndex"],[76,40,111,20],[76,41,112,2,"state"],[76,46,111,20],[76,48,113,2,"index"],[76,53,111,20],[76,55,114,2,"backBehavior"],[76,67,111,20],[76,69,115,2,"initialRouteName"],[76,85,111,20],[76,87,116,5],[77,0,117,2],[77,8,117,6,"history"],[77,15,117,2],[79,0,119,2],[79,8,119,6,"backBehavior"],[79,20,119,18],[79,25,119,23],[79,34,119,2],[79,36,119,34],[80,0,120,4],[80,10,120,10,"currentKey"],[80,20,120,20],[80,23,120,23,"state"],[80,28,120,28],[80,29,120,29,"routes"],[80,35,120,23],[80,36,120,36,"index"],[80,41,120,23],[80,43,120,43,"key"],[80,46,120,4],[81,0,122,4,"history"],[81,6,122,4,"history"],[81,13,122,11],[81,16,122,14,"state"],[81,21,122,19],[81,22,122,20,"history"],[81,29,122,14],[81,30,123,7,"filter"],[81,36,122,14],[81,37,123,14],[81,47,123,15,"it"],[81,49,123,14],[82,0,123,14],[82,15,123,23,"it"],[82,17,123,25],[82,18,123,26,"type"],[82,22,123,23],[82,27,123,35],[82,34,123,23],[82,37,123,45,"it"],[82,39,123,47],[82,40,123,48,"key"],[82,43,123,45],[82,48,123,56,"currentKey"],[82,58,123,23],[82,61,123,69],[82,66,123,14],[83,0,123,14],[83,7,122,14],[83,9,124,7,"concat"],[83,15,122,14],[83,16,124,14],[84,0,124,16,"type"],[84,8,124,16,"type"],[84,12,124,20],[84,14,124,22,"TYPE_ROUTE"],[84,24,124,14],[85,0,124,34,"key"],[85,8,124,34,"key"],[85,11,124,37],[85,13,124,39,"currentKey"],[86,0,124,14],[86,7,122,14],[86,8,122,4],[87,0,125,3],[87,5,119,2],[87,11,125,9],[88,0,126,4,"history"],[88,6,126,4,"history"],[88,13,126,11],[88,16,126,14,"getRouteHistory"],[88,31,126,29],[88,32,127,6,"state"],[88,37,127,11],[88,38,127,12,"routes"],[88,44,126,29],[88,46,128,6,"index"],[88,51,126,29],[88,53,129,6,"backBehavior"],[88,65,126,29],[88,67,130,6,"initialRouteName"],[88,83,126,29],[88,84,126,4],[89,0,132,3],[91,0,134,2],[91,38,135,7,"state"],[91,43,134,2],[92,0,136,4,"index"],[92,6,136,4,"index"],[92,11,136,9],[92,13,136,4,"index"],[92,18,134,2],[93,0,137,4,"history"],[93,6,137,4,"history"],[93,13,137,11],[93,15,137,4,"history"],[94,0,134,2],[95,0,139,1],[95,3,111,0],[97,0,141,15],[97,11,141,24,"TabRouter"],[97,20,141,15],[97,27,144,21],[98,0,144,21],[98,8,142,2,"initialRouteName"],[98,24,144,21],[98,32,142,2,"initialRouteName"],[98,48,144,21],[99,0,144,21],[99,33,143,2,"backBehavior"],[99,45,144,21],[100,0,144,21],[100,8,143,2,"backBehavior"],[100,20,144,21],[100,54,143,17],[100,63,144,21],[101,0,145,2],[101,8,145,8,"router"],[101,14,148,3],[101,44,149,7,"BaseRouter"],[101,63,148,3],[102,0,151,4,"type"],[102,6,151,4,"type"],[102,10,151,8],[102,12,151,10],[102,17,148,3],[103,0,153,4,"getInitialState"],[103,6,153,4,"getInitialState"],[103,21,148,3],[103,55,153,52],[104,0,153,52],[104,12,153,22,"routeNames"],[104,22,153,52],[104,31,153,22,"routeNames"],[104,41,153,52],[105,0,153,52],[105,12,153,34,"routeParamList"],[105,26,153,52],[105,35,153,34,"routeParamList"],[105,49,153,52],[106,0,154,6],[106,12,154,12,"index"],[106,17,154,17],[106,20,155,8,"initialRouteName"],[106,36,155,24],[106,41,155,29,"undefined"],[106,50,155,8],[106,54,155,42,"routeNames"],[106,64,155,52],[106,65,155,53,"includes"],[106,73,155,42],[106,74,155,62,"initialRouteName"],[106,90,155,42],[106,91,155,8],[106,94,156,12,"routeNames"],[106,104,156,22],[106,105,156,23,"indexOf"],[106,112,156,12],[106,113,156,31,"initialRouteName"],[106,129,156,12],[106,130,155,8],[106,133,157,12],[106,134,154,6],[107,0,159,6],[107,12,159,12,"routes"],[107,18,159,18],[107,21,159,21,"routeNames"],[107,31,159,31],[107,32,159,32,"map"],[107,35,159,21],[107,36,159,36],[107,46,159,37,"name"],[107,50,159,36],[108,0,159,36],[108,17,159,47],[109,0,160,8,"name"],[109,12,160,8,"name"],[109,16,160,12],[109,18,160,8,"name"],[109,22,159,47],[110,0,161,8,"key"],[110,12,161,8,"key"],[110,15,161,11],[110,17,161,16,"name"],[110,21,161,11],[110,30,161,24],[110,95,159,47],[111,0,162,8,"params"],[111,12,162,8,"params"],[111,18,162,14],[111,20,162,16,"routeParamList"],[111,34,162,30],[111,35,162,31,"name"],[111,39,162,30],[112,0,159,47],[112,11,159,36],[113,0,159,36],[113,9,159,21],[113,10,159,6],[114,0,165,6],[114,12,165,12,"history"],[114,19,165,19],[114,22,165,22,"getRouteHistory"],[114,37,165,37],[114,38,166,8,"routes"],[114,44,165,37],[114,46,167,8,"index"],[114,51,165,37],[114,53,168,8,"backBehavior"],[114,65,165,37],[114,67,169,8,"initialRouteName"],[114,83,165,37],[114,84,165,6],[115,0,172,6],[115,15,172,13],[116,0,173,8,"stale"],[116,10,173,8,"stale"],[116,15,173,13],[116,17,173,15],[116,22,172,13],[117,0,174,8,"type"],[117,10,174,8,"type"],[117,14,174,12],[117,16,174,14],[117,21,172,13],[118,0,175,8,"key"],[118,10,175,8,"key"],[118,13,175,11],[118,24,175,20],[118,89,172,13],[119,0,176,8,"index"],[119,10,176,8,"index"],[119,15,176,13],[119,17,176,8,"index"],[119,22,172,13],[120,0,177,8,"routeNames"],[120,10,177,8,"routeNames"],[120,20,177,18],[120,22,177,8,"routeNames"],[120,32,172,13],[121,0,178,8,"history"],[121,10,178,8,"history"],[121,17,178,15],[121,19,178,8,"history"],[121,26,172,13],[122,0,179,8,"routes"],[122,10,179,8,"routes"],[122,16,179,14],[122,18,179,8,"routes"],[123,0,172,13],[123,9,172,6],[124,0,181,5],[124,7,148,3],[125,0,183,4,"getRehydratedState"],[125,6,183,4,"getRehydratedState"],[125,24,148,3],[125,54,183,23,"partialState"],[125,66,148,3],[125,75,183,69],[126,0,183,69],[128,0,183,69],[128,12,183,39,"routeNames"],[128,22,183,69],[128,31,183,39,"routeNames"],[128,41,183,69],[129,0,183,69],[129,12,183,51,"routeParamList"],[129,26,183,69],[129,35,183,51,"routeParamList"],[129,49,183,69],[130,0,184,6],[130,12,184,10,"state"],[130,17,184,15],[130,20,184,18,"partialState"],[130,32,184,6],[132,0,186,6],[132,12,186,10,"state"],[132,17,186,15],[132,18,186,16,"stale"],[132,23,186,10],[132,28,186,26],[132,33,186,6],[132,35,186,33],[133,0,187,8],[133,17,187,15,"state"],[133,22,187,8],[134,0,188,7],[136,0,190,6],[136,12,190,12,"routes"],[136,18,190,18],[136,21,190,21,"routeNames"],[136,31,190,31],[136,32,190,32,"map"],[136,35,190,21],[136,36,190,36],[136,46,190,37,"name"],[136,50,190,36],[136,52,190,46],[137,0,191,8],[137,14,191,14,"route"],[137,19,191,19],[137,22,191,23,"state"],[137,27,191,22],[137,28,193,11,"routes"],[137,34,191,22],[137,35,193,18,"find"],[137,39,191,22],[137,40,193,23],[137,50,193,24,"r"],[137,51,193,23],[138,0,193,23],[138,19,193,30,"r"],[138,20,193,31],[138,21,193,32,"name"],[138,25,193,30],[138,30,193,41,"name"],[138,34,193,23],[139,0,193,23],[139,11,191,22],[139,12,191,8],[140,0,195,8],[140,44,196,13,"route"],[140,49,195,8],[141,0,197,10,"name"],[141,12,197,10,"name"],[141,16,197,14],[141,18,197,10,"name"],[141,22,195,8],[142,0,198,10,"key"],[142,12,198,10,"key"],[142,15,198,13],[142,17,199,12,"route"],[142,22,199,17],[142,26,199,21,"route"],[142,31,199,26],[142,32,199,27,"name"],[142,36,199,21],[142,41,199,36,"name"],[142,45,199,12],[142,49,199,44,"route"],[142,54,199,49],[142,55,199,50,"key"],[142,58,199,12],[142,61,200,16,"route"],[142,66,200,21],[142,67,200,22,"key"],[142,70,199,12],[142,73,201,19,"name"],[142,77,199,12],[142,86,201,27],[142,151,195,8],[143,0,202,10,"params"],[143,12,202,10,"params"],[143,18,202,16],[143,20,203,12,"routeParamList"],[143,34,203,26],[143,35,203,27,"name"],[143,39,203,26],[143,40,203,12],[143,45,203,37,"undefined"],[143,54,203,12],[143,84,205,21,"routeParamList"],[143,98,205,35],[143,99,205,36,"name"],[143,103,205,35],[143,104,203,12],[143,106,206,22,"route"],[143,111,206,27],[143,114,206,30,"route"],[143,119,206,35],[143,120,206,36,"params"],[143,126,206,27],[143,129,206,45,"undefined"],[143,138,203,12],[143,142,208,16,"route"],[143,147,208,21],[143,150,209,16,"route"],[143,155,209,21],[143,156,209,22,"params"],[143,162,208,21],[143,165,210,16,"undefined"],[144,0,195,8],[145,0,212,7],[145,9,190,21],[145,10,190,6],[146,0,214,6],[146,12,214,12,"index"],[146,17,214,17],[146,20,214,20,"Math"],[146,24,214,24],[146,25,214,25,"min"],[146,28,214,20],[146,29,215,8,"Math"],[146,33,215,12],[146,34,215,13,"max"],[146,37,215,8],[146,38,215,17,"routeNames"],[146,48,215,27],[146,49,215,28,"indexOf"],[146,56,215,17],[146,74,215,36,"state"],[146,79,215,41],[146,80,215,42,"routes"],[146,86,215,36],[146,103,215,49,"state"],[146,108,215,36],[146,128,215,49,"state"],[146,133,215,54],[146,134,215,56,"index"],[146,139,215,36],[146,166,215,65],[146,167,215,36],[146,168,215,17],[146,189,215,36],[146,203,215,69,"name"],[146,207,215,17],[146,208,215,8],[146,210,215,76],[146,211,215,8],[146,212,214,20],[146,214,216,8,"routes"],[146,220,216,14],[146,221,216,15,"length"],[146,227,216,8],[146,230,216,24],[146,231,214,20],[146,232,214,6],[147,0,219,6],[147,12,219,12,"history"],[147,19,219,19],[147,65,220,8,"state"],[147,70,220,13],[147,71,220,14,"history"],[147,78,219,19],[147,99,220,8],[147,114,220,23,"filter"],[147,120,220,8],[147,121,220,30],[147,131,220,31,"it"],[147,133,220,30],[148,0,220,30],[148,17,220,38,"routes"],[148,23,220,44],[148,24,220,45,"find"],[148,28,220,38],[148,29,220,50],[148,39,220,51,"r"],[148,40,220,50],[149,0,220,50],[149,19,220,57,"r"],[149,20,220,58],[149,21,220,59,"key"],[149,24,220,57],[149,29,220,67,"it"],[149,31,220,69],[149,32,220,70,"key"],[149,35,220,50],[150,0,220,50],[150,11,220,38],[150,12,220,30],[151,0,220,30],[151,9,220,8],[151,10,219,19],[151,46,221,8],[151,48,219,6],[152,0,223,6],[152,15,223,13,"changeIndex"],[152,26,223,24],[152,27,224,8],[153,0,225,10,"stale"],[153,10,225,10,"stale"],[153,15,225,15],[153,17,225,17],[153,22,224,8],[154,0,226,10,"type"],[154,10,226,10,"type"],[154,14,226,14],[154,16,226,16],[154,21,224,8],[155,0,227,10,"key"],[155,10,227,10,"key"],[155,13,227,13],[155,24,227,22],[155,89,224,8],[156,0,228,10,"index"],[156,10,228,10,"index"],[156,15,228,15],[156,17,228,10,"index"],[156,22,224,8],[157,0,229,10,"routeNames"],[157,10,229,10,"routeNames"],[157,20,229,20],[157,22,229,10,"routeNames"],[157,32,224,8],[158,0,230,10,"history"],[158,10,230,10,"history"],[158,17,230,17],[158,19,230,10,"history"],[158,26,224,8],[159,0,231,10,"routes"],[159,10,231,10,"routes"],[159,16,231,16],[159,18,231,10,"routes"],[160,0,224,8],[160,9,223,24],[160,11,233,8,"index"],[160,16,223,24],[160,18,234,8,"backBehavior"],[160,30,223,24],[160,32,235,8,"initialRouteName"],[160,48,223,24],[160,49,223,6],[161,0,237,5],[161,7,148,3],[162,0,239,4,"getStateForRouteNamesChange"],[162,6,239,4,"getStateForRouteNamesChange"],[162,33,148,3],[162,72,239,32,"state"],[162,77,148,3],[162,86,239,71],[163,0,239,71],[163,12,239,41,"routeNames"],[163,22,239,71],[163,31,239,41,"routeNames"],[163,41,239,71],[164,0,239,71],[164,12,239,53,"routeParamList"],[164,26,239,71],[164,35,239,53,"routeParamList"],[164,49,239,71],[165,0,240,6],[165,12,240,12,"routes"],[165,18,240,18],[165,21,240,21,"routeNames"],[165,31,240,31],[165,32,240,32,"map"],[165,35,240,21],[165,36,241,8],[165,46,241,9,"name"],[165,50,241,8],[166,0,241,8],[166,17,242,10,"state"],[166,22,242,15],[166,23,242,16,"routes"],[166,29,242,10],[166,30,242,23,"find"],[166,34,242,10],[166,35,242,28],[166,45,242,29,"r"],[166,46,242,28],[167,0,242,28],[167,19,242,35,"r"],[167,20,242,36],[167,21,242,37,"name"],[167,25,242,35],[167,30,242,46,"name"],[167,34,242,28],[168,0,242,28],[168,11,242,10],[168,16,242,55],[169,0,243,12,"name"],[169,12,243,12,"name"],[169,16,243,16],[169,18,243,12,"name"],[169,22,242,55],[170,0,244,12,"key"],[170,12,244,12,"key"],[170,15,244,15],[170,17,244,20,"name"],[170,21,244,15],[170,30,244,28],[170,95,242,55],[171,0,245,12,"params"],[171,12,245,12,"params"],[171,18,245,18],[171,20,245,20,"routeParamList"],[171,34,245,34],[171,35,245,35,"name"],[171,39,245,34],[172,0,242,55],[172,11,241,8],[173,0,241,8],[173,9,240,21],[173,10,240,6],[174,0,249,6],[174,12,249,12,"index"],[174,17,249,17],[174,20,249,20,"Math"],[174,24,249,24],[174,25,249,25,"max"],[174,28,249,20],[174,29,250,8],[174,30,249,20],[174,32,251,8,"routeNames"],[174,42,251,18],[174,43,251,19,"indexOf"],[174,50,251,8],[174,51,251,27,"state"],[174,56,251,32],[174,57,251,33,"routes"],[174,63,251,27],[174,64,251,40,"state"],[174,69,251,45],[174,70,251,46,"index"],[174,75,251,27],[174,77,251,53,"name"],[174,81,251,8],[174,82,249,20],[174,83,249,6],[175,0,254,6],[175,12,254,10,"history"],[175,19,254,17],[175,22,254,20,"state"],[175,27,254,25],[175,28,254,26,"history"],[175,35,254,20],[175,36,254,34,"filter"],[175,42,254,20],[175,43,256,8],[175,53,256,9,"it"],[175,55,256,8],[176,0,256,8],[176,17,256,16,"it"],[176,19,256,18],[176,20,256,19,"type"],[176,24,256,16],[176,29,256,28],[176,36,256,16],[176,40,256,39,"routes"],[176,46,256,45],[176,47,256,46,"find"],[176,51,256,39],[176,52,256,51],[176,62,256,52,"r"],[176,63,256,51],[177,0,256,51],[177,19,256,58,"r"],[177,20,256,59],[177,21,256,60,"key"],[177,24,256,58],[177,29,256,68,"it"],[177,31,256,70],[177,32,256,71,"key"],[177,35,256,51],[178,0,256,51],[178,11,256,39],[178,12,256,8],[179,0,256,8],[179,9,254,20],[179,10,254,6],[181,0,259,6],[181,12,259,10],[181,13,259,11,"history"],[181,20,259,18],[181,21,259,19,"length"],[181,27,259,6],[181,29,259,27],[182,0,260,8,"history"],[182,10,260,8,"history"],[182,17,260,15],[182,20,260,18,"getRouteHistory"],[182,35,260,33],[182,36,261,10,"routes"],[182,42,260,33],[182,44,262,10,"index"],[182,49,260,33],[182,51,263,10,"backBehavior"],[182,63,260,33],[182,65,264,10,"initialRouteName"],[182,81,260,33],[182,82,260,8],[183,0,266,7],[185,0,268,6],[185,42,269,11,"state"],[185,47,268,6],[186,0,270,8,"history"],[186,10,270,8,"history"],[186,17,270,15],[186,19,270,8,"history"],[186,26,268,6],[187,0,271,8,"routeNames"],[187,10,271,8,"routeNames"],[187,20,271,18],[187,22,271,8,"routeNames"],[187,32,268,6],[188,0,272,8,"routes"],[188,10,272,8,"routes"],[188,16,272,14],[188,18,272,8,"routes"],[188,24,268,6],[189,0,273,8,"index"],[189,10,273,8,"index"],[189,15,273,13],[189,17,273,8,"index"],[190,0,268,6],[191,0,275,5],[191,7,148,3],[192,0,277,4,"getStateForRouteFocus"],[192,6,277,4,"getStateForRouteFocus"],[192,27,148,3],[192,60,277,26,"state"],[192,65,148,3],[192,67,277,33,"key"],[192,70,148,3],[192,72,277,38],[193,0,278,6],[193,12,278,12,"index"],[193,17,278,17],[193,20,278,20,"state"],[193,25,278,25],[193,26,278,26,"routes"],[193,32,278,20],[193,33,278,33,"findIndex"],[193,42,278,20],[193,43,278,43],[193,53,278,44,"r"],[193,54,278,43],[194,0,278,43],[194,17,278,50,"r"],[194,18,278,51],[194,19,278,52,"key"],[194,22,278,50],[194,27,278,60,"key"],[194,30,278,43],[195,0,278,43],[195,9,278,20],[195,10,278,6],[197,0,280,6],[197,12,280,10,"index"],[197,17,280,15],[197,22,280,20],[197,23,280,21],[197,24,280,10],[197,28,280,26,"index"],[197,33,280,31],[197,38,280,36,"state"],[197,43,280,41],[197,44,280,42,"index"],[197,49,280,6],[197,51,280,49],[198,0,281,8],[198,17,281,15,"state"],[198,22,281,8],[199,0,282,7],[201,0,284,6],[201,15,284,13,"changeIndex"],[201,26,284,24],[201,27,284,25,"state"],[201,32,284,24],[201,34,284,32,"index"],[201,39,284,24],[201,41,284,39,"backBehavior"],[201,53,284,24],[201,55,284,53,"initialRouteName"],[201,71,284,24],[201,72,284,6],[202,0,285,5],[202,7,148,3],[203,0,287,4,"getStateForAction"],[203,6,287,4,"getStateForAction"],[203,23,148,3],[203,52,287,22,"state"],[203,57,148,3],[203,59,287,29,"action"],[203,65,148,3],[203,74,287,57],[204,0,287,57],[204,12,287,39,"routeParamList"],[204,26,287,57],[204,35,287,39,"routeParamList"],[204,49,287,57],[206,0,288,6],[206,16,288,14,"action"],[206,22,288,20],[206,23,288,21,"type"],[206,27,288,6],[207,0,289,8],[207,15,289,13],[207,24,289,8],[208,0,290,8],[208,15,290,13],[208,25,290,8],[209,0,290,25],[210,0,291,10],[210,18,291,14,"index"],[210,23,291,19],[210,26,291,22],[210,27,291,23],[210,28,291,10],[212,0,293,10],[212,18,293,14,"action"],[212,24,293,20],[212,25,293,21,"type"],[212,29,293,14],[212,34,293,30],[212,44,293,14],[212,48,293,44,"action"],[212,54,293,50],[212,55,293,51,"payload"],[212,62,293,44],[212,63,293,59,"key"],[212,66,293,10],[212,68,293,64],[213,0,294,12,"index"],[213,16,294,12,"index"],[213,21,294,17],[213,24,294,20,"state"],[213,29,294,25],[213,30,294,26,"routes"],[213,36,294,20],[213,37,294,33,"findIndex"],[213,46,294,20],[213,47,295,14],[213,57,295,15,"route"],[213,62,295,14],[214,0,295,14],[214,25,295,25,"route"],[214,30,295,30],[214,31,295,31,"key"],[214,34,295,25],[214,39,295,39,"action"],[214,45,295,45],[214,46,295,46,"payload"],[214,53,295,39],[214,54,295,54,"key"],[214,57,295,14],[215,0,295,14],[215,17,294,20],[215,18,294,12],[216,0,297,11],[216,15,293,10],[216,21,297,17],[217,0,298,12,"index"],[217,16,298,12,"index"],[217,21,298,17],[217,24,298,20,"state"],[217,29,298,25],[217,30,298,26,"routes"],[217,36,298,20],[217,37,298,33,"findIndex"],[217,46,298,20],[217,47,299,14],[217,57,299,15,"route"],[217,62,299,14],[218,0,299,14],[218,25,299,25,"route"],[218,30,299,30],[218,31,299,31,"name"],[218,35,299,25],[218,40,299,40,"action"],[218,46,299,46],[218,47,299,47,"payload"],[218,54,299,40],[218,55,299,55,"name"],[218,59,299,14],[219,0,299,14],[219,17,298,20],[219,18,298,12],[220,0,301,11],[222,0,303,10],[222,18,303,14,"index"],[222,23,303,19],[222,28,303,24],[222,29,303,25],[222,30,303,10],[222,32,303,28],[223,0,304,12],[223,23,304,19],[223,27,304,12],[224,0,305,11],[226,0,307,10],[226,21,307,17,"changeIndex"],[226,32,307,28],[226,60,309,17,"state"],[226,65,307,28],[227,0,310,14,"routes"],[227,16,310,14,"routes"],[227,22,310,20],[227,24,311,16,"action"],[227,30,311,22],[227,31,311,23,"payload"],[227,38,311,16],[227,39,311,31,"params"],[227,45,311,16],[227,50,311,42,"undefined"],[227,59,311,16],[227,62,312,20,"state"],[227,67,312,25],[227,68,312,26,"routes"],[227,74,312,20],[227,75,312,33,"map"],[227,78,312,20],[227,79,312,37],[227,89,312,38,"route"],[227,94,312,37],[227,96,312,45,"i"],[227,97,312,37],[227,99,312,51],[228,0,313,22],[228,22,313,26,"i"],[228,23,313,27],[228,28,313,32,"index"],[228,33,313,22],[228,35,313,39],[229,0,314,24],[229,27,314,31,"route"],[229,32,314,24],[230,0,315,23],[232,0,317,22],[232,22,317,26,"params"],[232,28,317,22],[234,0,319,22],[234,22,320,24,"action"],[234,28,320,30],[234,29,320,31,"type"],[234,33,320,24],[234,38,320,40],[234,48,320,24],[234,52,321,24,"action"],[234,58,321,30],[234,59,321,31,"payload"],[234,66,321,24],[234,67,321,39,"merge"],[234,72,321,24],[234,77,321,49],[234,82,319,22],[234,84,322,24],[235,0,323,24,"params"],[235,20,323,24,"params"],[235,26,323,30],[235,29,324,26,"routeParamList"],[235,43,324,40],[235,44,324,41,"route"],[235,49,324,46],[235,50,324,47,"name"],[235,54,324,40],[235,55,324,26],[235,60,324,57,"undefined"],[235,69,324,26],[235,99,326,35,"routeParamList"],[235,113,326,49],[235,114,326,50,"route"],[235,119,326,55],[235,120,326,56,"name"],[235,124,326,49],[235,125,324,26],[235,127,327,35,"action"],[235,133,327,41],[235,134,327,42,"payload"],[235,141,327,35],[235,142,327,50,"params"],[235,148,324,26],[235,152,329,30,"action"],[235,158,329,36],[235,159,329,37,"payload"],[235,166,329,30],[235,167,329,45,"params"],[235,173,323,24],[236,0,330,23],[236,19,319,22],[236,25,330,29],[237,0,331,24,"params"],[237,20,331,24,"params"],[237,26,331,30],[237,29,331,33,"action"],[237,35,331,39],[237,36,331,40,"payload"],[237,43,331,33],[237,44,331,48,"params"],[237,50,331,33],[237,80,333,33,"route"],[237,85,333,38],[237,86,333,39,"params"],[237,92,331,33],[237,94,334,33,"action"],[237,100,334,39],[237,101,334,40,"payload"],[237,108,334,33],[237,109,334,48,"params"],[237,115,331,33],[237,119,336,28,"route"],[237,124,336,33],[237,125,336,34,"params"],[237,131,331,24],[238,0,337,23],[240,0,339,22],[240,25,339,29,"params"],[240,31,339,35],[240,36,339,40,"route"],[240,41,339,45],[240,42,339,46,"params"],[240,48,339,29],[240,78,340,31,"route"],[240,83,339,29],[241,0,340,38,"params"],[241,20,340,38,"params"],[241,26,340,44],[241,28,340,38,"params"],[242,0,339,29],[242,23,341,26,"route"],[242,28,339,22],[243,0,342,21],[243,17,312,20],[243,18,311,16],[243,21,343,20,"state"],[243,26,343,25],[243,27,343,26,"routes"],[244,0,307,28],[244,18,345,12,"index"],[244,23,307,28],[244,25,346,12,"backBehavior"],[244,37,307,28],[244,39,347,12,"initialRouteName"],[244,55,307,28],[244,56,307,10],[245,0,349,9],[247,0,351,8],[247,15,351,13],[247,24,351,8],[248,0,351,24],[249,0,352,10],[249,18,352,14,"state"],[249,23,352,19],[249,24,352,20,"history"],[249,31,352,14],[249,32,352,28,"length"],[249,38,352,14],[249,43,352,39],[249,44,352,10],[249,46,352,42],[250,0,353,12],[250,23,353,19],[250,27,353,12],[251,0,354,11],[253,0,356,10],[253,18,356,16,"previousKey"],[253,29,356,27],[253,32,356,30,"state"],[253,37,356,35],[253,38,356,36,"history"],[253,45,356,30],[253,46,356,44,"state"],[253,51,356,49],[253,52,356,50,"history"],[253,59,356,44],[253,60,356,58,"length"],[253,66,356,44],[253,69,356,67],[253,70,356,30],[253,72,356,70,"key"],[253,75,356,10],[255,0,357,10],[255,18,357,16,"index"],[255,24,357,21],[255,27,357,24,"state"],[255,32,357,29],[255,33,357,30,"routes"],[255,39,357,24],[255,40,357,37,"findIndex"],[255,49,357,24],[255,50,358,12],[255,60,358,13,"route"],[255,65,358,12],[256,0,358,12],[256,23,358,23,"route"],[256,28,358,28],[256,29,358,29,"key"],[256,32,358,23],[256,37,358,37,"previousKey"],[256,48,358,12],[257,0,358,12],[257,15,357,24],[257,16,357,10],[259,0,361,10],[259,18,361,14,"index"],[259,24,361,19],[259,29,361,24],[259,30,361,25],[259,31,361,10],[259,33,361,28],[260,0,362,12],[260,23,362,19],[260,27,362,12],[261,0,363,11],[263,0,365,10],[263,48,366,15,"state"],[263,53,365,10],[264,0,367,12,"history"],[264,16,367,12,"history"],[264,23,367,19],[264,25,367,21,"state"],[264,30,367,26],[264,31,367,27,"history"],[264,38,367,21],[264,39,367,35,"slice"],[264,44,367,21],[264,45,367,41],[264,46,367,21],[264,48,367,44],[264,49,367,45],[264,50,367,21],[264,51,365,10],[265,0,368,12,"index"],[265,16,368,12,"index"],[265,21,368,17],[265,23,368,12,"index"],[266,0,365,10],[267,0,370,9],[269,0,372,8],[270,0,373,10],[270,19,373,17,"BaseRouter"],[270,39,373,28,"getStateForAction"],[270,56,373,17],[270,57,373,46,"state"],[270,62,373,17],[270,64,373,53,"action"],[270,70,373,17],[270,71,373,10],[271,0,288,6],[272,0,375,5],[272,7,148,3],[273,0,377,4,"shouldActionChangeFocus"],[273,6,377,4,"shouldActionChangeFocus"],[273,29,148,3],[273,64,377,28,"action"],[273,70,148,3],[273,72,377,36],[274,0,378,6],[274,15,378,13,"action"],[274,21,378,19],[274,22,378,20,"type"],[274,26,378,13],[274,31,378,29],[274,41,378,6],[275,0,379,5],[275,7,148,3],[276,0,381,4,"actionCreators"],[276,6,381,4,"actionCreators"],[276,20,381,18],[276,22,381,20,"TabActions"],[277,0,148,3],[277,6,145,2],[278,0,384,2],[278,11,384,9,"router"],[278,17,384,2],[279,0,385,1]],"functionMap":{"names":["<global>","TabActions.jumpTo","getRouteHistory","routes.findIndex$argument_0","changeIndex","state.history.filter$argument_0","TabRouter","router.getInitialState","routeNames.map$argument_0","router.getRehydratedState","routes.find$argument_0","<anonymous>","router.getStateForRouteNamesChange","state.routes.find$argument_0","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","router.shouldActionChangeFocus"],"mappings":"AAA;EC6D;GDE;wBEG;QCyB,0CD;CFiB;oBIE;cCY,6DD;CJgB;eME;ICY;oCCM;QDI;KDkB;IGE;oCDO;uBEG,sBF;OCmB;8BEQ,oBD,uBC,CF;KHiB;IME;QJE;4BKC,sBL;WII;QPU,2CK,uBL,CO;KNmB;IQE;2CCC,oBD;KRO;IUE;cDQ,2CC;cDI,6CC;qCCa;qBD8B;YDgB,oCC;KViB;IYE;KZE;CNM"}},"type":"js/module"}]}