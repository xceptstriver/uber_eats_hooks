{"dependencies":[{"name":"@babel/runtime/regenerator","data":{"asyncType":null,"locs":[{"start":{"line":32,"column":0},"end":{"line":47,"column":1}},{"start":{"line":32,"column":0},"end":{"line":47,"column":1}},{"start":{"line":32,"column":0},"end":{"line":47,"column":1}}]}},{"name":"./getDevServer","data":{"asyncType":null,"locs":[{"start":{"line":35,"column":20},"end":{"line":35,"column":34}}]}},{"name":"../../Network/fetch","data":{"asyncType":null,"locs":[{"start":{"line":41,"column":32},"end":{"line":41,"column":62}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function symbolicateStackTrace(stack) {\n    var _global$fetch;\n\n    var devServer, fetch, response;\n    return _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/regenerator\").async(function symbolicateStackTrace$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            devServer = _$$_REQUIRE(_dependencyMap[1], \"./getDevServer\")();\n\n            if (devServer.bundleLoadedFromServer) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('Bundle was not loaded from Metro.');\n\n          case 3:\n            fetch = (_global$fetch = global.fetch) != null ? _global$fetch : _$$_REQUIRE(_dependencyMap[2], \"../../Network/fetch\");\n            _context.next = 6;\n            return _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/regenerator\").awrap(fetch(devServer.url + 'symbolicate', {\n              method: 'POST',\n              body: JSON.stringify({\n                stack: stack\n              })\n            }));\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/regenerator\").awrap(response.json());\n\n          case 9:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  module.exports = symbolicateStackTrace;\n});","lineCount":48,"map":[[2,0,11,0],[4,0,32,0],[4,11,32,15,"symbolicateStackTrace"],[4,32,32,0],[4,33,33,2,"stack"],[4,38,32,0],[5,0,32,0],[7,0,32,0],[8,0,32,0],[9,0,32,0],[10,0,32,0],[11,0,32,0],[12,0,35,8,"devServer"],[12,12,35,8,"devServer"],[12,21,32,0],[12,24,35,20],[12,74,32,0],[14,0,32,0],[14,16,36,7,"devServer"],[14,25,36,16],[14,26,36,17,"bundleLoadedFromServer"],[14,48,32,0],[15,0,32,0],[16,0,32,0],[17,0,32,0],[19,0,32,0],[19,18,37,10],[19,22,37,14,"Error"],[19,27,37,10],[19,28,37,20],[19,63,37,10],[19,64,32,0],[21,0,32,0],[22,0,41,8,"fetch"],[22,12,41,8,"fetch"],[22,17,32,0],[22,37,41,16,"global"],[22,43,41,22],[22,44,41,23,"fetch"],[22,49,32,0],[22,77,41,32,"require"],[22,88,41,39],[22,130,32,0],[23,0,32,0],[24,0,32,0],[24,86,42,25,"fetch"],[24,91,42,30],[24,92,42,31,"devServer"],[24,101,42,40],[24,102,42,41,"url"],[24,105,42,31],[24,108,42,47],[24,121,42,30],[24,123,42,62],[25,0,43,4,"method"],[25,14,43,4,"method"],[25,20,43,10],[25,22,43,12],[25,28,42,62],[26,0,44,4,"body"],[26,14,44,4,"body"],[26,18,44,8],[26,20,44,10,"JSON"],[26,24,44,14],[26,25,44,15,"stringify"],[26,34,44,10],[26,35,44,25],[27,0,44,26,"stack"],[27,16,44,26,"stack"],[27,21,44,31],[27,23,44,26,"stack"],[28,0,44,25],[28,15,44,10],[29,0,42,62],[29,13,42,30],[29,14,32,0],[31,0,32,0],[32,0,42,8,"response"],[32,12,42,8,"response"],[32,20,32,0],[33,0,32,0],[34,0,32,0],[34,86,46,15,"response"],[34,94,46,23],[34,95,46,24,"json"],[34,99,46,15],[34,101,32,0],[36,0,32,0],[37,0,32,0],[39,0,32,0],[40,0,32,0],[41,0,32,0],[42,0,32,0],[43,0,32,0],[44,0,32,0],[45,0,32,0],[47,0,49,0,"module"],[47,2,49,0,"module"],[47,8,49,6],[47,9,49,7,"exports"],[47,16,49,0],[47,19,49,17,"symbolicateStackTrace"],[47,40,49,0]],"functionMap":{"names":["<global>","symbolicateStackTrace"],"mappings":"AAA;AC+B;CDe"}},"type":"js/module"}]}