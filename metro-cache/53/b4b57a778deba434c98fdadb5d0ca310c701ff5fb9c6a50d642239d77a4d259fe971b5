{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":623,"column":0}},{"start":{"line":1,"column":0},"end":{"line":623,"column":0}},{"start":{"line":1,"column":0},"end":{"line":623,"column":0}},{"start":{"line":1,"column":0},"end":{"line":623,"column":0}},{"start":{"line":1,"column":0},"end":{"line":623,"column":0}},{"start":{"line":1,"column":0},"end":{"line":623,"column":0}},{"start":{"line":1,"column":0},"end":{"line":623,"column":0}},{"start":{"line":11,"column":0},"end":{"line":11,"column":34}}]}},{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":623,"column":0}}]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":623,"column":0}}]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":623,"column":0}}]}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":623,"column":0}}]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":623,"column":0}}]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":623,"column":0}}]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":623,"column":0}}]}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":9,"column":0},"end":{"line":9,"column":31}}]}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0},"end":{"line":11,"column":34}}]}},{"name":"react-native","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0},"end":{"line":24,"column":22}}]}},{"name":"../State","data":{"asyncType":null,"locs":[{"start":{"line":277,"column":33},"end":{"line":277,"column":38},"identifierName":"State"},{"start":{"line":279,"column":37},"end":{"line":279,"column":42},"identifierName":"State"},{"start":{"line":295,"column":31},"end":{"line":295,"column":36},"identifierName":"State"}]}},{"name":"../handlers/gestureHandlers","data":{"asyncType":null,"locs":[{"start":{"line":451,"column":7},"end":{"line":451,"column":24}},{"start":{"line":580,"column":7},"end":{"line":580,"column":24}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _extends2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _assertThisInitialized2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/assertThisInitialized\"));\n\n  var _inherits2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _invariant = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[9], \"invariant\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _jsxFileName = \"/home/moglix/uber_eats_hooks/node_modules/react-native-gesture-handler/src/components/DrawerLayout.tsx\";\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  var DrawerLayout = function (_Component) {\n    (0, _inherits2.default)(DrawerLayout, _Component);\n\n    var _super = _createSuper(DrawerLayout);\n\n    function DrawerLayout(_props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = _super.call(this, _props);\n      _this.accessibilityIsModalView = React.createRef();\n      _this.pointerEventsView = React.createRef();\n      _this.panGestureHandler = React.createRef();\n      _this.drawerShown = false;\n\n      _this.updateAnimatedEvent = function (props, state) {\n        var drawerPosition = props.drawerPosition,\n            drawerWidth = props.drawerWidth,\n            drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n            touchXValue = state.touchX,\n            drawerTranslation = state.drawerTranslation,\n            containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n\n        if (drawerPosition !== 'left') {\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue);\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue));\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        var translationX = dragX;\n\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition);\n        }\n\n        _this.openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        var gestureOptions = {\n          useNativeDriver: props.useNativeAnimations\n        };\n\n        if (_this.props.onDrawerSlide) {\n          gestureOptions.listener = function (ev) {\n            var translationX = Math.floor(Math.abs(ev.nativeEvent.translationX));\n            var position = translationX / _this.state.containerWidth;\n            _this.props.onDrawerSlide == null ? void 0 : _this.props.onDrawerSlide(position);\n          };\n        }\n\n        _this.onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], gestureOptions);\n      };\n\n      _this.handleContainerLayout = function (_ref) {\n        var nativeEvent = _ref.nativeEvent;\n\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n\n      _this.emitStateChanged = function (newState, drawerWillShow) {\n        _this.props.onDrawerStateChanged == null ? void 0 : _this.props.onDrawerStateChanged(newState, drawerWillShow);\n      };\n\n      _this.openingHandlerStateChange = function (_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n\n        if (nativeEvent.oldState === _$$_REQUIRE(_dependencyMap[11], \"../State\").State.ACTIVE) {\n          _this.handleRelease({\n            nativeEvent: nativeEvent\n          });\n        } else if (nativeEvent.state === _$$_REQUIRE(_dependencyMap[11], \"../State\").State.ACTIVE) {\n          _this.emitStateChanged(DRAGGING, false);\n\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n\n      _this.onTapHandlerStateChange = function (_ref3) {\n        var nativeEvent = _ref3.nativeEvent;\n\n        if (_this.drawerShown && nativeEvent.oldState === _$$_REQUIRE(_dependencyMap[11], \"../State\").State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n\n      _this.handleRelease = function (_ref4) {\n        var nativeEvent = _ref4.nativeEvent;\n        var _this$props = _this.props,\n            drawerWidth = _this$props.drawerWidth,\n            drawerPosition = _this$props.drawerPosition,\n            drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n            velocityX = nativeEvent.velocityX,\n            touchX = nativeEvent.x;\n\n        if (drawerPosition !== 'left') {\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this.drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n\n        if (shouldOpen) {\n          _this.animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this.animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n\n      _this.updateShowing = function (showing) {\n        var _this$accessibilityIs, _this$pointerEventsVi, _this$panGestureHandl;\n\n        _this.drawerShown = showing;\n        (_this$accessibilityIs = _this.accessibilityIsModalView.current) == null ? void 0 : _this$accessibilityIs.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        (_this$pointerEventsVi = _this.pointerEventsView.current) == null ? void 0 : _this$pointerEventsVi.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n            drawerPosition = _this$props2.drawerPosition,\n            minSwipeDistance = _this$props2.minSwipeDistance,\n            edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this.drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        (_this$panGestureHandl = _this.panGestureHandler.current) == null ? void 0 : _this$panGestureHandl.setNativeProps({\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n\n      _this.animateDrawer = function (fromValue, toValue, velocity, speed) {\n        _this.state.dragX.setValue(0);\n\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n\n        if (fromValue != null) {\n          var nextFramePosition = fromValue;\n\n          if (_this.props.useNativeAnimations) {\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n\n        var willShow = toValue !== 0;\n\n        _this.updateShowing(willShow);\n\n        _this.emitStateChanged(SETTLING, willShow);\n\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity: velocity,\n          bounciness: 0,\n          toValue: toValue,\n          useNativeDriver: _this.props.useNativeAnimations,\n          speed: speed != null ? speed : undefined\n        }).start(function (_ref5) {\n          var finished = _ref5.finished;\n\n          if (finished) {\n            _this.emitStateChanged(IDLE, willShow);\n\n            if (willShow) {\n              _this.props.onDrawerOpen == null ? void 0 : _this.props.onDrawerOpen();\n            } else {\n              _this.props.onDrawerClose == null ? void 0 : _this.props.onDrawerClose();\n            }\n          }\n        });\n      };\n\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this.animateDrawer(undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0);\n\n        _this.forceUpdate();\n      };\n\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this.animateDrawer(undefined, 0, options.velocity ? options.velocity : 0);\n\n        _this.forceUpdate();\n      };\n\n      _this.renderOverlay = function () {\n        (0, _invariant.default)(_this.openValue, 'should be set');\n\n        var overlayOpacity = _this.openValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return React.createElement(_$$_REQUIRE(_dependencyMap[12], \"../handlers/gestureHandlers\").TapGestureHandler, {\n          onHandlerStateChange: _this.onTapHandlerStateChange,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 7\n          }\n        }, React.createElement(_reactNative.Animated.View, {\n          pointerEvents: _this.drawerShown ? 'auto' : 'none',\n          ref: _this.pointerEventsView,\n          style: [styles.overlay, dynamicOverlayStyles],\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 9\n          }\n        }));\n      };\n\n      _this.renderDrawer = function () {\n        var _this$props3 = _this.props,\n            drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n            drawerWidth = _this$props3.drawerWidth,\n            drawerPosition = _this$props3.drawerPosition,\n            drawerType = _this$props3.drawerType,\n            drawerContainerStyle = _this$props3.drawerContainerStyle,\n            contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this.openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n\n        var drawerTranslateX = 0;\n\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          drawerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [closedDrawerOffset, 0],\n            extrapolate: 'clamp'\n          });\n        }\n\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return React.createElement(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this.handleContainerLayout,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 7\n          }\n        }, React.createElement(_reactNative.Animated.View, {\n          style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n          importantForAccessibility: _this.drawerShown ? 'no-hide-descendants' : 'yes',\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 9\n          }\n        }, typeof _this.props.children === 'function' ? _this.props.children(_this.openValue) : _this.props.children, _this.renderOverlay()), React.createElement(_reactNative.Animated.View, {\n          pointerEvents: \"box-none\",\n          ref: _this.accessibilityIsModalView,\n          accessibilityViewIsModal: _this.drawerShown,\n          style: [styles.drawerContainer, drawerStyles, drawerContainerStyle],\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 9\n          }\n        }, React.createElement(_reactNative.View, {\n          style: dynamicDrawerStyles,\n          __self: (0, _assertThisInitialized2.default)(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 11\n          }\n        }, _this.props.renderNavigationView(_this.openValue))));\n      };\n\n      _this.setPanGestureRef = function (ref) {\n        _this.panGestureHandler.current = ref;\n        _this.props.onGestureRef == null ? void 0 : _this.props.onGestureRef(ref);\n      };\n\n      var _dragX = new _reactNative.Animated.Value(0);\n\n      var _touchX = new _reactNative.Animated.Value(0);\n\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0\n      };\n\n      _this.updateAnimatedEvent(_props, _this.state);\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerLayout, [{\n      key: \"UNSAFE_componentWillUpdate\",\n      value: function UNSAFE_componentWillUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this.updateAnimatedEvent(props, state);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n            drawerPosition = _this$props4.drawerPosition,\n            drawerLockMode = _this$props4.drawerLockMode,\n            edgeWidth = _this$props4.edgeWidth,\n            minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this.drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        };\n        return React.createElement(_$$_REQUIRE(_dependencyMap[12], \"../handlers/gestureHandlers\").PanGestureHandler, {\n          ref: this.setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this.onGestureEvent,\n          onHandlerStateChange: this.openingHandlerStateChange,\n          enableTrackpadTwoFingerGesture: this.props.enableTrackpadTwoFingerGesture,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 7\n          }\n        }, this.renderDrawer());\n      }\n    }]);\n    return DrawerLayout;\n  }(React.Component);\n\n  exports.default = DrawerLayout;\n  DrawerLayout.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n    enableTrackpadTwoFingerGesture: false\n  };\n  DrawerLayout.positions = {\n    Left: 'left',\n    Right: 'right'\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    drawerContainer: (0, _extends2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1001,\n      flexDirection: 'row'\n    }),\n    containerInFront: (0, _extends2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1002\n    }),\n    containerOnBack: (0, _extends2.default)({}, _reactNative.StyleSheet.absoluteFillObject),\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: (0, _extends2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1000\n    })\n  });\n});","lineCount":510,"map":[[21,0,9,0],[23,0,11,0],[25,0,12,0],[37,0,36,0],[37,6,36,6,"DRAG_TOSS"],[37,15,36,15],[37,18,36,18],[37,22,36,0],[38,0,38,0],[38,6,38,6,"IDLE"],[38,10,38,23],[38,13,38,26],[38,19,38,0],[39,0,39,0],[39,6,39,6,"DRAGGING"],[39,14,39,27],[39,17,39,30],[39,27,39,0],[40,0,40,0],[40,6,40,6,"SETTLING"],[40,14,40,27],[40,17,40,30],[40,27,40,0],[42,6,93,21,"DrawerLayout"],[42,18],[47,0,109,2],[47,26,109,14,"props"],[47,32,109,2],[47,34,109,40],[48,0,109,40],[50,0,109,40],[51,0,110,4],[51,32,110,10,"props"],[51,38,110,4],[52,0,109,40],[52,12,144,10,"accessibilityIsModalView"],[52,36,109,40],[52,39,144,37,"React"],[52,44,144,42],[52,45,144,43,"createRef"],[52,54,144,37],[52,56,109,40],[53,0,109,40],[53,12,145,10,"pointerEventsView"],[53,29,109,40],[53,32,145,30,"React"],[53,37,145,35],[53,38,145,36,"createRef"],[53,47,145,30],[53,49,109,40],[54,0,109,40],[54,12,146,10,"panGestureHandler"],[54,29,109,40],[54,32,146,30,"React"],[54,37,146,35],[54,38,146,36,"createRef"],[54,47,146,30],[54,49,109,40],[55,0,109,40],[55,12,147,10,"drawerShown"],[55,23,109,40],[55,26,147,24],[55,31,109,40],[57,0,109,40],[57,12,154,10,"updateAnimatedEvent"],[57,31,109,40],[57,34,154,32],[57,44,155,4,"props"],[57,49,154,32],[57,51,156,4,"state"],[57,56,154,32],[57,58,157,7],[58,0,159,4],[58,12,159,12,"drawerPosition"],[58,26,159,4],[58,29,159,56,"props"],[58,34,159,4],[58,35,159,12,"drawerPosition"],[58,49,159,4],[59,0,159,4],[59,12,159,28,"drawerWidth"],[59,23,159,4],[59,26,159,56,"props"],[59,31,159,4],[59,32,159,28,"drawerWidth"],[59,43,159,4],[60,0,159,4],[60,12,159,41,"drawerType"],[60,22,159,4],[60,25,159,56,"props"],[60,30,159,4],[60,31,159,41,"drawerType"],[60,41,159,4],[61,0,160,4],[61,12,161,13,"dragXValue"],[61,22,160,4],[61,25,165,8,"state"],[61,30,160,4],[61,31,161,6,"dragX"],[61,36,160,4],[62,0,160,4],[62,12,162,14,"touchXValue"],[62,23,160,4],[62,26,165,8,"state"],[62,31,160,4],[62,32,162,6,"touchX"],[62,38,160,4],[63,0,160,4],[63,12,163,6,"drawerTranslation"],[63,29,160,4],[63,32,165,8,"state"],[63,37,160,4],[63,38,163,6,"drawerTranslation"],[63,55,160,4],[64,0,160,4],[64,12,164,6,"containerWidth"],[64,26,160,4],[64,29,165,8,"state"],[64,34,160,4],[64,35,164,6,"containerWidth"],[64,49,160,4],[65,0,167,4],[65,12,167,8,"dragX"],[65,17,167,13],[65,20,167,16,"dragXValue"],[65,30,167,4],[66,0,168,4],[66,12,168,8,"touchX"],[66,18,168,14],[66,21,168,17,"touchXValue"],[66,32,168,4],[68,0,170,4],[68,12,170,8,"drawerPosition"],[68,26,170,22],[68,31,170,27],[68,37,170,4],[68,39,170,35],[69,0,178,6,"dragX"],[69,10,178,6,"dragX"],[69,15,178,11],[69,18,178,14,"Animated"],[69,40,178,23,"multiply"],[69,48,178,14],[69,49,179,8],[69,53,179,12,"Animated"],[69,75,179,21,"Value"],[69,80,179,8],[69,81,179,27],[69,82,179,28],[69,83,179,8],[69,84,178,14],[69,86,180,8,"dragXValue"],[69,96,178,14],[69,97,178,6],[70,0,182,6,"touchX"],[70,10,182,6,"touchX"],[70,16,182,12],[70,19,182,15,"Animated"],[70,41,182,24,"add"],[70,44,182,15],[70,45,183,8],[70,49,183,12,"Animated"],[70,71,183,21,"Value"],[70,76,183,8],[70,77,183,27,"containerWidth"],[70,91,183,8],[70,92,182,15],[70,94,184,8,"Animated"],[70,116,184,17,"multiply"],[70,124,184,8],[70,125,184,26],[70,129,184,30,"Animated"],[70,151,184,39,"Value"],[70,156,184,26],[70,157,184,45],[70,158,184,46],[70,159,184,26],[70,160,184,8],[70,162,184,50,"touchXValue"],[70,173,184,8],[70,174,182,15],[70,175,182,6],[71,0,186,6,"touchXValue"],[71,10,186,6,"touchXValue"],[71,21,186,17],[71,22,186,18,"setValue"],[71,30,186,6],[71,31,186,27,"containerWidth"],[71,45,186,6],[72,0,187,5],[72,9,170,4],[72,15,187,11],[73,0,188,6,"touchXValue"],[73,10,188,6,"touchXValue"],[73,21,188,17],[73,22,188,18,"setValue"],[73,30,188,6],[73,31,188,27],[73,32,188,6],[74,0,189,5],[76,0,215,4],[76,12,215,8,"translationX"],[76,24,215,20],[76,27,215,23,"dragX"],[76,32,215,4],[78,0,216,4],[78,12,216,8,"drawerType"],[78,22,216,18],[78,27,216,23],[78,34,216,4],[78,36,216,32],[79,0,217,6],[79,14,217,12,"startPositionX"],[79,28,217,26],[79,31,217,29,"Animated"],[79,53,217,38,"add"],[79,56,217,29],[79,57,218,8,"touchX"],[79,63,217,29],[79,65,219,8,"Animated"],[79,87,219,17,"multiply"],[79,95,219,8],[79,96,219,26],[79,100,219,30,"Animated"],[79,122,219,39,"Value"],[79,127,219,26],[79,128,219,45],[79,129,219,46],[79,130,219,26],[79,131,219,8],[79,133,219,50,"dragX"],[79,138,219,8],[79,139,217,29],[79,140,217,6],[81,0,222,6],[81,14,222,12,"dragOffsetFromOnStartPosition"],[81,43,222,41],[81,46,222,44,"startPositionX"],[81,60,222,58],[81,61,222,59,"interpolate"],[81,72,222,44],[81,73,222,71],[82,0,223,8,"inputRange"],[82,12,223,8,"inputRange"],[82,22,223,18],[82,24,223,20],[82,25,223,21,"drawerWidth"],[82,36,223,32],[82,39,223,36],[82,40,223,20],[82,42,223,39,"drawerWidth"],[82,53,223,20],[82,55,223,53,"drawerWidth"],[82,66,223,64],[82,69,223,68],[82,70,223,20],[82,71,222,71],[83,0,224,8,"outputRange"],[83,12,224,8,"outputRange"],[83,23,224,19],[83,25,224,21],[83,26,224,22],[83,27,224,21],[83,29,224,25],[83,30,224,21],[83,32,224,28],[83,33,224,21],[84,0,222,71],[84,11,222,44],[84,12,222,6],[85,0,226,6,"translationX"],[85,10,226,6,"translationX"],[85,22,226,18],[85,25,226,21,"Animated"],[85,47,226,30,"add"],[85,50,226,21],[85,51,227,8,"dragX"],[85,56,226,21],[85,58,228,8,"dragOffsetFromOnStartPosition"],[85,87,226,21],[85,88,226,6],[86,0,230,5],[88,0,232,4],[88,14,232,9,"openValue"],[88,23,232,4],[88,26,232,21,"Animated"],[88,48,232,30,"add"],[88,51,232,21],[88,52,232,34,"translationX"],[88,64,232,21],[88,66,232,48,"drawerTranslation"],[88,83,232,21],[88,85,232,67,"interpolate"],[88,96,232,21],[88,97,232,79],[89,0,233,6,"inputRange"],[89,10,233,6,"inputRange"],[89,20,233,16],[89,22,233,18],[89,23,233,19],[89,24,233,18],[89,26,233,22,"drawerWidth"],[89,37,233,18],[89,38,232,79],[90,0,234,6,"outputRange"],[90,10,234,6,"outputRange"],[90,21,234,17],[90,23,234,19],[90,24,234,20],[90,25,234,19],[90,27,234,23],[90,28,234,19],[90,29,232,79],[91,0,235,6,"extrapolate"],[91,10,235,6,"extrapolate"],[91,21,235,17],[91,23,235,19],[92,0,232,79],[92,9,232,21],[92,10,232,4],[93,0,238,4],[93,12,238,10,"gestureOptions"],[93,26,244,5],[93,29,244,8],[94,0,245,6,"useNativeDriver"],[94,10,245,6,"useNativeDriver"],[94,25,245,21],[94,27,245,23,"props"],[94,32,245,28],[94,33,245,29,"useNativeAnimations"],[95,0,244,8],[95,9,238,4],[97,0,248,4],[97,12,248,8],[97,18,248,13,"props"],[97,23,248,8],[97,24,248,19,"onDrawerSlide"],[97,37,248,4],[97,39,248,34],[98,0,249,6,"gestureOptions"],[98,10,249,6,"gestureOptions"],[98,24,249,20],[98,25,249,21,"listener"],[98,33,249,6],[98,36,249,32],[98,46,249,33,"ev"],[98,48,249,32],[98,50,249,40],[99,0,250,8],[99,16,250,14,"translationX"],[99,28,250,26],[99,31,250,29,"Math"],[99,35,250,33],[99,36,250,34,"floor"],[99,41,250,29],[99,42,250,40,"Math"],[99,46,250,44],[99,47,250,45,"abs"],[99,50,250,40],[99,51,250,49,"ev"],[99,53,250,51],[99,54,250,52,"nativeEvent"],[99,65,250,49],[99,66,250,64,"translationX"],[99,78,250,40],[99,79,250,29],[99,80,250,8],[100,0,251,8],[100,16,251,14,"position"],[100,24,251,22],[100,27,251,25,"translationX"],[100,39,251,37],[100,42,251,40],[100,48,251,45,"state"],[100,53,251,40],[100,54,251,51,"containerWidth"],[100,68,251,8],[101,0,253,8],[101,18,253,13,"props"],[101,23,253,8],[101,24,253,19,"onDrawerSlide"],[101,37,253,8],[101,63,253,13,"props"],[101,68,253,8],[101,69,253,19,"onDrawerSlide"],[101,82,253,8],[101,83,253,35,"position"],[101,91,253,8],[102,0,254,7],[102,11,249,6],[103,0,255,5],[105,0,257,4],[105,14,257,9,"onGestureEvent"],[105,28,257,4],[105,31,257,26,"Animated"],[105,53,257,35,"event"],[105,58,257,26],[105,59,258,6],[105,60,258,7],[106,0,258,9,"nativeEvent"],[106,10,258,9,"nativeEvent"],[106,21,258,20],[106,23,258,22],[107,0,258,24,"translationX"],[107,12,258,24,"translationX"],[107,24,258,36],[107,26,258,38,"dragXValue"],[107,36,258,22],[108,0,258,50,"x"],[108,12,258,50,"x"],[108,13,258,51],[108,15,258,53,"touchXValue"],[109,0,258,22],[110,0,258,7],[110,9,258,6],[110,10,257,26],[110,12,259,6,"gestureOptions"],[110,26,257,26],[110,27,257,4],[111,0,261,3],[111,7,109,40],[113,0,109,40],[113,12,263,10,"handleContainerLayout"],[113,33,109,40],[113,36,263,34],[113,52,263,74],[114,0,263,74],[114,12,263,37,"nativeEvent"],[114,23,263,74],[114,31,263,37,"nativeEvent"],[114,42,263,74],[116,0,264,4],[116,14,264,9,"setState"],[116,22,264,4],[116,23,264,18],[117,0,264,20,"containerWidth"],[117,10,264,20,"containerWidth"],[117,24,264,34],[117,26,264,36,"nativeEvent"],[117,37,264,47],[117,38,264,48,"layout"],[117,44,264,36],[117,45,264,55,"width"],[118,0,264,18],[118,9,264,4],[119,0,265,3],[119,7,109,40],[121,0,109,40],[121,12,267,10,"emitStateChanged"],[121,28,109,40],[121,31,267,29],[121,41,268,4,"newState"],[121,49,267,29],[121,51,269,4,"drawerWillShow"],[121,65,267,29],[121,67,270,7],[122,0,271,4],[122,14,271,9,"props"],[122,19,271,4],[122,20,271,15,"onDrawerStateChanged"],[122,40,271,4],[122,66,271,9,"props"],[122,71,271,4],[122,72,271,15,"onDrawerStateChanged"],[122,92,271,4],[122,93,271,38,"newState"],[122,101,271,4],[122,103,271,48,"drawerWillShow"],[122,117,271,4],[123,0,272,3],[123,7,109,40],[125,0,109,40],[125,12,274,10,"openingHandlerStateChange"],[125,37,109,40],[125,40,274,38],[125,57,276,64],[126,0,276,64],[126,12,275,4,"nativeEvent"],[126,23,276,64],[126,32,275,4,"nativeEvent"],[126,43,276,64],[128,0,277,4],[128,12,277,8,"nativeEvent"],[128,23,277,19],[128,24,277,20,"oldState"],[128,32,277,8],[128,37,277,33,"State"],[128,87,277,39,"ACTIVE"],[128,93,277,4],[128,95,277,47],[129,0,278,6],[129,16,278,11,"handleRelease"],[129,29,278,6],[129,30,278,25],[130,0,278,27,"nativeEvent"],[130,12,278,27,"nativeEvent"],[130,23,278,38],[130,25,278,27,"nativeEvent"],[131,0,278,25],[131,11,278,6],[132,0,279,5],[132,9,277,4],[132,15,279,11],[132,19,279,15,"nativeEvent"],[132,30,279,26],[132,31,279,27,"state"],[132,36,279,15],[132,41,279,37,"State"],[132,91,279,43,"ACTIVE"],[132,97,279,11],[132,99,279,51],[133,0,280,6],[133,16,280,11,"emitStateChanged"],[133,32,280,6],[133,33,280,28,"DRAGGING"],[133,41,280,6],[133,43,280,38],[133,48,280,6],[135,0,281,6],[135,14,281,10],[135,20,281,15,"props"],[135,25,281,10],[135,26,281,21,"keyboardDismissMode"],[135,45,281,10],[135,50,281,45],[135,59,281,6],[135,61,281,56],[136,0,282,8,"Keyboard"],[136,34,282,17,"dismiss"],[136,41,282,8],[137,0,283,7],[139,0,284,6],[139,14,284,10],[139,20,284,15,"props"],[139,25,284,10],[139,26,284,21,"hideStatusBar"],[139,39,284,6],[139,41,284,36],[140,0,285,8,"StatusBar"],[140,35,285,18,"setHidden"],[140,44,285,8],[140,45,285,28],[140,49,285,8],[140,51,285,34],[140,57,285,39,"props"],[140,62,285,34],[140,63,285,45,"statusBarAnimation"],[140,81,285,34],[140,85,285,67],[140,92,285,8],[141,0,286,7],[142,0,287,5],[143,0,288,3],[143,7,109,40],[145,0,109,40],[145,12,290,10,"onTapHandlerStateChange"],[145,35,109,40],[145,38,290,36],[145,55,292,64],[146,0,292,64],[146,12,291,4,"nativeEvent"],[146,23,292,64],[146,32,291,4,"nativeEvent"],[146,43,292,64],[148,0,293,4],[148,12,294,6],[148,18,294,11,"drawerShown"],[148,29,294,6],[148,33,295,6,"nativeEvent"],[148,44,295,17],[148,45,295,18,"oldState"],[148,53,295,6],[148,58,295,31,"State"],[148,108,295,37,"ACTIVE"],[148,114,294,6],[148,118,296,6],[148,124,296,11,"props"],[148,129,296,6],[148,130,296,17,"drawerLockMode"],[148,144,296,6],[148,149,296,36],[148,162,293,4],[148,164,297,6],[149,0,298,6],[149,16,298,11,"closeDrawer"],[149,27,298,6],[150,0,299,5],[151,0,300,3],[151,7,109,40],[153,0,109,40],[153,12,302,10,"handleRelease"],[153,25,109,40],[153,28,302,26],[153,45,304,64],[154,0,304,64],[154,12,303,4,"nativeEvent"],[154,23,304,64],[154,32,303,4,"nativeEvent"],[154,43,304,64],[155,0,305,4],[155,26,305,56],[155,32,305,61,"props"],[155,37,305,4],[156,0,305,4],[156,12,305,12,"drawerWidth"],[156,23,305,4],[156,38,305,12,"drawerWidth"],[156,49,305,4],[157,0,305,4],[157,12,305,25,"drawerPosition"],[157,26,305,4],[157,41,305,25,"drawerPosition"],[157,55,305,4],[158,0,305,4],[158,12,305,41,"drawerType"],[158,22,305,4],[158,37,305,41,"drawerType"],[158,47,305,4],[159,0,306,4],[159,12,306,12,"containerWidth"],[159,26,306,4],[159,29,306,31],[159,35,306,36,"state"],[159,40,306,4],[159,41,306,12,"containerWidth"],[159,55,306,4],[160,0,307,4],[160,12,307,24,"dragX"],[160,17,307,4],[160,20,307,56,"nativeEvent"],[160,31,307,4],[160,32,307,10,"translationX"],[160,44,307,4],[161,0,307,4],[161,12,307,31,"velocityX"],[161,21,307,4],[161,24,307,56,"nativeEvent"],[161,35,307,4],[161,36,307,31,"velocityX"],[161,45,307,4],[162,0,307,4],[162,12,307,45,"touchX"],[162,18,307,4],[162,21,307,56,"nativeEvent"],[162,32,307,4],[162,33,307,42,"x"],[162,34,307,4],[164,0,309,4],[164,12,309,8,"drawerPosition"],[164,26,309,22],[164,31,309,27],[164,37,309,4],[164,39,309,35],[165,0,312,6,"dragX"],[165,10,312,6,"dragX"],[165,15,312,11],[165,18,312,14],[165,19,312,15,"dragX"],[165,24,312,6],[166,0,313,6,"touchX"],[166,10,313,6,"touchX"],[166,16,313,12],[166,19,313,15,"containerWidth"],[166,33,313,29],[166,36,313,32,"touchX"],[166,42,313,6],[167,0,314,6,"velocityX"],[167,10,314,6,"velocityX"],[167,19,314,15],[167,22,314,18],[167,23,314,19,"velocityX"],[167,32,314,6],[168,0,315,5],[170,0,317,4],[170,12,317,10,"gestureStartX"],[170,25,317,23],[170,28,317,26,"touchX"],[170,34,317,32],[170,37,317,35,"dragX"],[170,42,317,4],[171,0,318,4],[171,12,318,8,"dragOffsetBasedOnStart"],[171,34,318,30],[171,37,318,33],[171,38,318,4],[173,0,320,4],[173,12,320,8,"drawerType"],[173,22,320,18],[173,27,320,23],[173,34,320,4],[173,36,320,32],[174,0,321,6,"dragOffsetBasedOnStart"],[174,10,321,6,"dragOffsetBasedOnStart"],[174,32,321,28],[174,35,322,8,"gestureStartX"],[174,48,322,21],[174,51,322,24,"drawerWidth"],[174,62,322,8],[174,65,322,39,"gestureStartX"],[174,78,322,52],[174,81,322,55,"drawerWidth"],[174,92,322,8],[174,95,322,70],[174,96,321,6],[175,0,323,5],[177,0,325,4],[177,12,325,10,"startOffsetX"],[177,24,325,22],[177,27,326,6,"dragX"],[177,32,326,11],[177,35,326,14,"dragOffsetBasedOnStart"],[177,57,326,6],[177,61,326,40],[177,67,326,45,"drawerShown"],[177,78,326,40],[177,81,326,59,"drawerWidth"],[177,92,326,40],[177,95,326,74],[177,96,326,6],[177,97,325,4],[178,0,327,4],[178,12,327,10,"projOffsetX"],[178,23,327,21],[178,26,327,24,"startOffsetX"],[178,38,327,36],[178,41,327,39,"DRAG_TOSS"],[178,50,327,48],[178,53,327,51,"velocityX"],[178,62,327,4],[179,0,329,4],[179,12,329,10,"shouldOpen"],[179,22,329,20],[179,25,329,23,"projOffsetX"],[179,36,329,34],[179,39,329,37,"drawerWidth"],[179,50,329,48],[179,53,329,52],[179,54,329,4],[181,0,331,4],[181,12,331,8,"shouldOpen"],[181,22,331,4],[181,24,331,20],[182,0,332,6],[182,16,332,11,"animateDrawer"],[182,29,332,6],[182,30,332,25,"startOffsetX"],[182,42,332,6],[182,44,332,39,"drawerWidth"],[182,55,332,6],[182,57,332,53,"velocityX"],[182,66,332,6],[183,0,333,5],[183,9,331,4],[183,15,333,11],[184,0,334,6],[184,16,334,11,"animateDrawer"],[184,29,334,6],[184,30,334,25,"startOffsetX"],[184,42,334,6],[184,44,334,39],[184,45,334,6],[184,47,334,42,"velocityX"],[184,56,334,6],[185,0,335,5],[186,0,336,3],[186,7,109,40],[188,0,109,40],[188,12,338,10,"updateShowing"],[188,25,109,40],[188,28,338,26],[188,38,338,27,"showing"],[188,45,338,26],[188,47,338,48],[189,0,338,48],[191,0,339,4],[191,14,339,9,"drawerShown"],[191,25,339,4],[191,28,339,23,"showing"],[191,35,339,4],[192,0,340,4],[192,39,340,9,"accessibilityIsModalView"],[192,63,340,4],[192,64,340,34,"current"],[192,71,340,4],[192,114,340,43,"setNativeProps"],[192,128,340,4],[192,129,340,58],[193,0,341,6,"accessibilityViewIsModal"],[193,10,341,6,"accessibilityViewIsModal"],[193,34,341,30],[193,36,341,32,"showing"],[194,0,340,58],[194,9,340,4],[195,0,343,4],[195,39,343,9,"pointerEventsView"],[195,56,343,4],[195,57,343,27,"current"],[195,64,343,4],[195,107,343,36,"setNativeProps"],[195,121,343,4],[195,122,343,51],[196,0,344,6,"pointerEvents"],[196,10,344,6,"pointerEvents"],[196,23,344,19],[196,25,344,21,"showing"],[196,32,344,28],[196,35,344,31],[196,41,344,28],[196,44,344,40],[197,0,343,51],[197,9,343,4],[198,0,346,4],[198,27,346,60],[198,33,346,65,"props"],[198,38,346,4],[199,0,346,4],[199,12,346,12,"drawerPosition"],[199,26,346,4],[199,42,346,12,"drawerPosition"],[199,56,346,4],[200,0,346,4],[200,12,346,28,"minSwipeDistance"],[200,28,346,4],[200,44,346,28,"minSwipeDistance"],[200,60,346,4],[201,0,346,4],[201,12,346,46,"edgeWidth"],[201,21,346,4],[201,37,346,46,"edgeWidth"],[201,46,346,4],[202,0,347,4],[202,12,347,10,"fromLeft"],[202,20,347,18],[202,23,347,21,"drawerPosition"],[202,37,347,35],[202,42,347,40],[202,48,347,4],[203,0,351,4],[203,12,351,10,"gestureOrientation"],[203,30,351,28],[203,33,352,6],[203,34,352,7,"fromLeft"],[203,42,352,15],[203,45,352,18],[203,46,352,15],[203,49,352,22],[203,50,352,23],[203,51,352,6],[203,56,352,29],[203,62,352,34,"drawerShown"],[203,73,352,29],[203,76,352,48],[203,77,352,49],[203,78,352,29],[203,81,352,53],[203,82,352,6],[203,83,351,4],[204,0,356,4],[204,12,356,10,"hitSlop"],[204,19,356,17],[204,22,356,20,"fromLeft"],[204,30,356,28],[204,33,357,8],[205,0,357,10,"left"],[205,10,357,10,"left"],[205,14,357,14],[205,16,357,16],[205,17,357,8],[206,0,357,19,"width"],[206,10,357,19,"width"],[206,15,357,24],[206,17,357,26,"showing"],[206,24,357,33],[206,27,357,36,"undefined"],[206,36,357,33],[206,39,357,48,"edgeWidth"],[207,0,357,8],[207,9,356,28],[207,12,358,8],[208,0,358,10,"right"],[208,10,358,10,"right"],[208,15,358,15],[208,17,358,17],[208,18,358,8],[209,0,358,20,"width"],[209,10,358,20,"width"],[209,15,358,25],[209,17,358,27,"showing"],[209,24,358,34],[209,27,358,37,"undefined"],[209,36,358,34],[209,39,358,49,"edgeWidth"],[210,0,358,8],[210,9,356,4],[211,0,360,4],[211,39,360,9,"panGestureHandler"],[211,56,360,4],[211,57,360,27,"current"],[211,64,360,4],[211,107,360,36,"setNativeProps"],[211,121,360,4],[211,122,360,51],[212,0,361,6,"hitSlop"],[212,10,361,6,"hitSlop"],[212,17,361,13],[212,19,361,6,"hitSlop"],[212,26,360,51],[213,0,362,6,"activeOffsetX"],[213,10,362,6,"activeOffsetX"],[213,23,362,19],[213,25,362,21,"gestureOrientation"],[213,43,362,39],[213,46,362,42,"minSwipeDistance"],[214,0,360,51],[214,9,360,4],[215,0,364,3],[215,7,109,40],[217,0,109,40],[217,12,366,10,"animateDrawer"],[217,25,109,40],[217,28,366,26],[217,38,367,4,"fromValue"],[217,47,366,26],[217,49,368,4,"toValue"],[217,56,366,26],[217,58,369,4,"velocity"],[217,66,366,26],[217,68,370,4,"speed"],[217,73,366,26],[217,75,371,7],[218,0,372,4],[218,14,372,9,"state"],[218,19,372,4],[218,20,372,15,"dragX"],[218,25,372,4],[218,26,372,21,"setValue"],[218,34,372,4],[218,35,372,30],[218,36,372,4],[220,0,373,4],[220,14,373,9,"state"],[220,19,373,4],[220,20,373,15,"touchX"],[220,26,373,4],[220,27,373,22,"setValue"],[220,35,373,4],[220,36,374,6],[220,42,374,11,"props"],[220,47,374,6],[220,48,374,17,"drawerPosition"],[220,62,374,6],[220,67,374,36],[220,73,374,6],[220,76,374,45],[220,77,374,6],[220,80,374,49],[220,86,374,54,"state"],[220,91,374,49],[220,92,374,60,"containerWidth"],[220,106,373,4],[222,0,377,4],[222,12,377,8,"fromValue"],[222,21,377,17],[222,25,377,21],[222,29,377,4],[222,31,377,27],[223,0,378,6],[223,14,378,10,"nextFramePosition"],[223,31,378,27],[223,34,378,30,"fromValue"],[223,43,378,6],[225,0,379,6],[225,14,379,10],[225,20,379,15,"props"],[225,25,379,10],[225,26,379,21,"useNativeAnimations"],[225,45,379,6],[225,47,379,42],[226,0,384,8],[226,16,384,12,"fromValue"],[226,25,384,21],[226,28,384,24,"toValue"],[226,35,384,12],[226,39,384,35,"velocity"],[226,47,384,43],[226,50,384,46],[226,51,384,8],[226,53,384,49],[227,0,385,10,"nextFramePosition"],[227,14,385,10,"nextFramePosition"],[227,31,385,27],[227,34,385,30,"Math"],[227,38,385,34],[227,39,385,35,"min"],[227,42,385,30],[227,43,385,39,"fromValue"],[227,52,385,48],[227,55,385,51,"velocity"],[227,63,385,59],[227,66,385,62],[227,70,385,30],[227,72,385,68,"toValue"],[227,79,385,30],[227,80,385,10],[228,0,386,9],[228,13,384,8],[228,19,386,15],[228,23,386,19,"fromValue"],[228,32,386,28],[228,35,386,31,"toValue"],[228,42,386,19],[228,46,386,42,"velocity"],[228,54,386,50],[228,57,386,53],[228,58,386,15],[228,60,386,56],[229,0,387,10,"nextFramePosition"],[229,14,387,10,"nextFramePosition"],[229,31,387,27],[229,34,387,30,"Math"],[229,38,387,34],[229,39,387,35,"max"],[229,42,387,30],[229,43,387,39,"fromValue"],[229,52,387,48],[229,55,387,51,"velocity"],[229,63,387,59],[229,66,387,62],[229,70,387,30],[229,72,387,68,"toValue"],[229,79,387,30],[229,80,387,10],[230,0,388,9],[231,0,389,7],[233,0,390,6],[233,16,390,11,"state"],[233,21,390,6],[233,22,390,17,"drawerTranslation"],[233,39,390,6],[233,40,390,35,"setValue"],[233,48,390,6],[233,49,390,44,"nextFramePosition"],[233,66,390,6],[234,0,391,5],[236,0,393,4],[236,12,393,10,"willShow"],[236,20,393,18],[236,23,393,21,"toValue"],[236,30,393,28],[236,35,393,33],[236,36,393,4],[238,0,394,4],[238,14,394,9,"updateShowing"],[238,27,394,4],[238,28,394,23,"willShow"],[238,36,394,4],[240,0,395,4],[240,14,395,9,"emitStateChanged"],[240,30,395,4],[240,31,395,26,"SETTLING"],[240,39,395,4],[240,41,395,36,"willShow"],[240,49,395,4],[242,0,396,4],[242,12,396,8],[242,18,396,13,"props"],[242,23,396,8],[242,24,396,19,"hideStatusBar"],[242,37,396,4],[242,39,396,34],[243,0,397,6,"StatusBar"],[243,33,397,16,"setHidden"],[243,42,397,6],[243,43,397,26,"willShow"],[243,51,397,6],[243,53,397,36],[243,59,397,41,"props"],[243,64,397,36],[243,65,397,47,"statusBarAnimation"],[243,83,397,36],[243,87,397,69],[243,94,397,6],[244,0,398,5],[246,0,399,4,"Animated"],[246,30,399,13,"spring"],[246,36,399,4],[246,37,399,20],[246,43,399,25,"state"],[246,48,399,20],[246,49,399,31,"drawerTranslation"],[246,66,399,4],[246,68,399,50],[247,0,400,6,"velocity"],[247,10,400,6,"velocity"],[247,18,400,14],[247,20,400,6,"velocity"],[247,28,399,50],[248,0,401,6,"bounciness"],[248,10,401,6,"bounciness"],[248,20,401,16],[248,22,401,18],[248,23,399,50],[249,0,402,6,"toValue"],[249,10,402,6,"toValue"],[249,17,402,13],[249,19,402,6,"toValue"],[249,26,399,50],[250,0,403,6,"useNativeDriver"],[250,10,403,6,"useNativeDriver"],[250,25,403,21],[250,27,403,23],[250,33,403,28,"props"],[250,38,403,23],[250,39,403,34,"useNativeAnimations"],[250,58,399,50],[251,0,404,6,"speed"],[251,10,404,6,"speed"],[251,15,404,11],[251,17,404,13,"speed"],[251,22,404,11],[251,33,404,13,"speed"],[251,38,404,11],[251,41,404,22,"undefined"],[252,0,399,50],[252,9,399,4],[252,11,405,7,"start"],[252,16,399,4],[252,17,405,13],[252,34,405,31],[253,0,405,31],[253,14,405,16,"finished"],[253,22,405,31],[253,31,405,16,"finished"],[253,39,405,31],[255,0,406,6],[255,14,406,10,"finished"],[255,22,406,6],[255,24,406,20],[256,0,407,8],[256,18,407,13,"emitStateChanged"],[256,34,407,8],[256,35,407,30,"IDLE"],[256,39,407,8],[256,41,407,36,"willShow"],[256,49,407,8],[258,0,408,8],[258,16,408,12,"willShow"],[258,24,408,8],[258,26,408,22],[259,0,409,10],[259,20,409,15,"props"],[259,25,409,10],[259,26,409,21,"onDrawerOpen"],[259,38,409,10],[259,64,409,15,"props"],[259,69,409,10],[259,70,409,21,"onDrawerOpen"],[259,82,409,10],[260,0,410,9],[260,13,408,8],[260,19,410,15],[261,0,411,10],[261,20,411,15,"props"],[261,25,411,10],[261,26,411,21,"onDrawerClose"],[261,39,411,10],[261,65,411,15,"props"],[261,70,411,10],[261,71,411,21,"onDrawerClose"],[261,84,411,10],[262,0,412,9],[263,0,413,7],[264,0,414,5],[264,9,399,4],[265,0,415,3],[265,7,109,40],[267,0,109,40],[267,12,417,2,"openDrawer"],[267,22,109,40],[267,25,417,15],[267,37,417,55],[268,0,417,55],[268,12,417,16,"options"],[268,19,417,55],[268,90,417,48],[268,92,417,55],[270,0,418,4],[270,14,418,9,"animateDrawer"],[270,27,418,4],[270,28,420,6,"undefined"],[270,37,418,4],[270,39,421,6],[270,45,421,11,"props"],[270,50,421,6],[270,51,421,17,"drawerWidth"],[270,62,418,4],[270,64,422,6,"options"],[270,71,422,13],[270,72,422,14,"velocity"],[270,80,422,6],[270,83,422,25,"options"],[270,90,422,32],[270,91,422,33,"velocity"],[270,99,422,6],[270,102,422,44],[270,103,418,4],[272,0,426,4],[272,14,426,9,"forceUpdate"],[272,25,426,4],[273,0,427,3],[273,7,109,40],[275,0,109,40],[275,12,429,2,"closeDrawer"],[275,23,109,40],[275,26,429,16],[275,38,429,56],[276,0,429,56],[276,12,429,17,"options"],[276,19,429,56],[276,90,429,49],[276,92,429,56],[278,0,431,4],[278,14,431,9,"animateDrawer"],[278,27,431,4],[278,28,431,23,"undefined"],[278,37,431,4],[278,39,431,34],[278,40,431,4],[278,42,431,37,"options"],[278,49,431,44],[278,50,431,45,"velocity"],[278,58,431,37],[278,61,431,56,"options"],[278,68,431,63],[278,69,431,64,"velocity"],[278,77,431,37],[278,80,431,75],[278,81,431,4],[280,0,434,4],[280,14,434,9,"forceUpdate"],[280,25,434,4],[281,0,435,3],[281,7,109,40],[283,0,109,40],[283,12,437,10,"renderOverlay"],[283,25,109,40],[283,28,437,26],[283,40,437,32],[284,0,439,4],[284,32,439,14],[284,38,439,19,"openValue"],[284,47,439,4],[284,49,439,30],[284,64,439,4],[286,0,440,4],[286,12,440,10,"overlayOpacity"],[286,26,440,24],[286,29,440,27],[286,35,440,32,"openValue"],[286,44,440,27],[286,45,440,42,"interpolate"],[286,56,440,27],[286,57,440,54],[287,0,441,6,"inputRange"],[287,10,441,6,"inputRange"],[287,20,441,16],[287,22,441,18],[287,23,441,19],[287,24,441,18],[287,26,441,22],[287,27,441,18],[287,28,440,54],[288,0,442,6,"outputRange"],[288,10,442,6,"outputRange"],[288,21,442,17],[288,23,442,19],[288,24,442,20],[288,25,442,19],[288,27,442,23],[288,28,442,19],[288,29,440,54],[289,0,443,6,"extrapolate"],[289,10,443,6,"extrapolate"],[289,21,443,17],[289,23,443,19],[290,0,440,54],[290,9,440,27],[290,10,440,4],[292,0,445,4],[292,12,445,10,"dynamicOverlayStyles"],[292,32,445,30],[292,35,445,33],[293,0,446,6,"opacity"],[293,10,446,6,"opacity"],[293,17,446,13],[293,19,446,15,"overlayOpacity"],[293,33,445,33],[294,0,447,6,"backgroundColor"],[294,10,447,6,"backgroundColor"],[294,25,447,21],[294,27,447,23],[294,33,447,28,"props"],[294,38,447,23],[294,39,447,34,"overlayColor"],[295,0,445,33],[295,9,445,4],[296,0,450,4],[296,15,451,6],[296,35,451,7],[296,115,451,6],[297,0,451,25],[297,10,451,25],[297,30,451,45],[297,32,451,47],[297,38,451,52,"onTapHandlerStateChange"],[297,61,451,6],[298,0,451,6],[299,0,451,6],[300,0,451,6],[301,0,451,6],[302,0,451,6],[303,0,451,6],[304,0,451,6],[304,11,452,8],[304,31,452,9],[304,52,452,8],[304,53,452,18],[304,57,452,8],[305,0,453,10],[305,10,453,10],[305,23,453,23],[305,25,453,25],[305,31,453,30,"drawerShown"],[305,42,453,25],[305,45,453,44],[305,51,453,25],[305,54,453,53],[305,60,452,8],[306,0,454,10],[306,10,454,10],[306,13,454,13],[306,15,454,15],[306,21,454,20,"pointerEventsView"],[306,38,452,8],[307,0,455,10],[307,10,455,10],[307,15,455,15],[307,17,455,17],[307,18,455,18,"styles"],[307,24,455,24],[307,25,455,25,"overlay"],[307,32,455,17],[307,34,455,34,"dynamicOverlayStyles"],[307,54,455,17],[307,55,452,8],[308,0,452,8],[309,0,452,8],[310,0,452,8],[311,0,452,8],[312,0,452,8],[313,0,452,8],[314,0,452,8],[314,10,451,6],[314,11,450,4],[315,0,459,3],[315,7,109,40],[317,0,109,40],[317,12,461,10,"renderDrawer"],[317,24,109,40],[317,27,461,25],[317,39,461,31],[318,0,462,4],[318,27,469,8],[318,33,469,13,"props"],[318,38,462,4],[319,0,462,4],[319,12,463,6,"drawerBackgroundColor"],[319,33,462,4],[319,49,463,6,"drawerBackgroundColor"],[319,70,462,4],[320,0,462,4],[320,12,464,6,"drawerWidth"],[320,23,462,4],[320,39,464,6,"drawerWidth"],[320,50,462,4],[321,0,462,4],[321,12,465,6,"drawerPosition"],[321,26,462,4],[321,42,465,6,"drawerPosition"],[321,56,462,4],[322,0,462,4],[322,12,466,6,"drawerType"],[322,22,462,4],[322,38,466,6,"drawerType"],[322,48,462,4],[323,0,462,4],[323,12,467,6,"drawerContainerStyle"],[323,32,462,4],[323,48,467,6,"drawerContainerStyle"],[323,68,462,4],[324,0,462,4],[324,12,468,6,"contentContainerStyle"],[324,33,462,4],[324,49,468,6,"contentContainerStyle"],[324,70,462,4],[325,0,471,4],[325,12,471,10,"fromLeft"],[325,20,471,18],[325,23,471,21,"drawerPosition"],[325,37,471,35],[325,42,471,40],[325,48,471,4],[326,0,472,4],[326,12,472,10,"drawerSlide"],[326,23,472,21],[326,26,472,24,"drawerType"],[326,36,472,34],[326,41,472,39],[326,47,472,4],[327,0,473,4],[327,12,473,10,"containerSlide"],[327,26,473,24],[327,29,473,27,"drawerType"],[327,39,473,37],[327,44,473,42],[327,51,473,4],[328,0,479,4],[328,12,479,10,"reverseContentDirection"],[328,35,479,33],[328,38,479,36,"I18nManager"],[328,63,479,48,"isRTL"],[328,68,479,36],[328,71,479,56,"fromLeft"],[328,79,479,36],[328,82,479,67],[328,83,479,68,"fromLeft"],[328,91,479,4],[329,0,481,4],[329,12,481,10,"dynamicDrawerStyles"],[329,31,481,29],[329,34,481,32],[330,0,482,6,"backgroundColor"],[330,10,482,6,"backgroundColor"],[330,25,482,21],[330,27,482,23,"drawerBackgroundColor"],[330,48,481,32],[331,0,483,6,"width"],[331,10,483,6,"width"],[331,15,483,11],[331,17,483,13,"drawerWidth"],[332,0,481,32],[332,9,481,4],[333,0,485,4],[333,12,485,10,"openValue"],[333,21,485,19],[333,24,485,22],[333,30,485,27,"openValue"],[333,39,485,4],[334,0,486,4],[334,32,486,14,"openValue"],[334,41,486,4],[334,43,486,25],[334,58,486,4],[335,0,488,4],[335,12,488,8,"containerStyles"],[335,27,488,4],[337,0,489,4],[337,12,489,8,"containerSlide"],[337,26,489,4],[337,28,489,24],[338,0,490,6],[338,14,490,12,"containerTranslateX"],[338,33,490,31],[338,36,490,34,"openValue"],[338,45,490,43],[338,46,490,44,"interpolate"],[338,57,490,34],[338,58,490,56],[339,0,491,8,"inputRange"],[339,12,491,8,"inputRange"],[339,22,491,18],[339,24,491,20],[339,25,491,21],[339,26,491,20],[339,28,491,24],[339,29,491,20],[339,30,490,56],[340,0,492,8,"outputRange"],[340,12,492,8,"outputRange"],[340,23,492,19],[340,25,492,21,"fromLeft"],[340,33,492,29],[340,36,492,32],[340,37,492,33],[340,38,492,32],[340,40,492,36,"drawerWidth"],[340,51,492,32],[340,52,492,29],[340,55,492,52],[340,56,492,53],[340,57,492,52],[340,59,492,56],[340,60,492,57,"drawerWidth"],[340,71,492,52],[340,72,490,56],[341,0,493,8,"extrapolate"],[341,12,493,8,"extrapolate"],[341,23,493,19],[341,25,493,21],[342,0,490,56],[342,11,490,34],[342,12,490,6],[343,0,495,6,"containerStyles"],[343,10,495,6,"containerStyles"],[343,25,495,21],[343,28,495,24],[344,0,496,8,"transform"],[344,12,496,8,"transform"],[344,21,496,17],[344,23,496,19],[344,24,496,20],[345,0,496,22,"translateX"],[345,14,496,22,"translateX"],[345,24,496,32],[345,26,496,34,"containerTranslateX"],[346,0,496,20],[346,13,496,19],[347,0,495,24],[347,11,495,6],[348,0,498,5],[350,0,500,4],[350,12,500,8,"drawerTranslateX"],[350,28,500,65],[350,31,500,68],[350,32,500,4],[352,0,501,4],[352,12,501,8,"drawerSlide"],[352,23,501,4],[352,25,501,21],[353,0,502,6],[353,14,502,12,"closedDrawerOffset"],[353,32,502,30],[353,35,502,33,"fromLeft"],[353,43,502,41],[353,46,502,44],[353,47,502,45,"drawerWidth"],[353,58,502,41],[353,61,502,60,"drawerWidth"],[353,72,502,6],[354,0,503,6,"drawerTranslateX"],[354,10,503,6,"drawerTranslateX"],[354,26,503,22],[354,29,503,25,"openValue"],[354,38,503,34],[354,39,503,35,"interpolate"],[354,50,503,25],[354,51,503,47],[355,0,504,8,"inputRange"],[355,12,504,8,"inputRange"],[355,22,504,18],[355,24,504,20],[355,25,504,21],[355,26,504,20],[355,28,504,24],[355,29,504,20],[355,30,503,47],[356,0,505,8,"outputRange"],[356,12,505,8,"outputRange"],[356,23,505,19],[356,25,505,21],[356,26,505,22,"closedDrawerOffset"],[356,44,505,21],[356,46,505,42],[356,47,505,21],[356,48,503,47],[357,0,506,8,"extrapolate"],[357,12,506,8,"extrapolate"],[357,23,506,19],[357,25,506,21],[358,0,503,47],[358,11,503,25],[358,12,503,6],[359,0,508,5],[361,0,509,4],[361,12,509,10,"drawerStyles"],[361,24,512,5],[361,27,512,8],[362,0,513,6,"transform"],[362,10,513,6,"transform"],[362,19,513,15],[362,21,513,17],[362,22,513,18],[363,0,513,20,"translateX"],[363,12,513,20,"translateX"],[363,22,513,30],[363,24,513,32,"drawerTranslateX"],[364,0,513,18],[364,11,513,17],[364,12,512,8],[365,0,514,6,"flexDirection"],[365,10,514,6,"flexDirection"],[365,23,514,19],[365,25,514,21,"reverseContentDirection"],[365,48,514,44],[365,51,514,47],[365,64,514,44],[365,67,514,63],[366,0,512,8],[366,9,509,4],[367,0,517,4],[367,15,518,6],[367,35,518,7],[367,56,518,6],[367,57,518,16],[367,61,518,6],[368,0,518,21],[368,10,518,21],[368,15,518,26],[368,17,518,28,"styles"],[368,23,518,34],[368,24,518,35,"main"],[368,28,518,6],[369,0,518,41],[369,10,518,41],[369,18,518,49],[369,20,518,51],[369,26,518,56,"handleContainerLayout"],[369,47,518,6],[370,0,518,6],[371,0,518,6],[372,0,518,6],[373,0,518,6],[374,0,518,6],[375,0,518,6],[376,0,518,6],[376,11,519,8],[376,31,519,9],[376,52,519,8],[376,53,519,18],[376,57,519,8],[377,0,520,10],[377,10,520,10],[377,15,520,15],[377,17,520,17],[377,18,521,12,"drawerType"],[377,28,521,22],[377,33,521,27],[377,40,521,12],[377,43,522,16,"styles"],[377,49,522,22],[377,50,522,23,"containerOnBack"],[377,65,521,12],[377,68,523,16,"styles"],[377,74,523,22],[377,75,523,23,"containerInFront"],[377,91,520,17],[377,93,524,12,"containerStyles"],[377,108,520,17],[377,110,525,12,"contentContainerStyle"],[377,131,520,17],[377,132,519,8],[378,0,527,10],[378,10,527,10],[378,35,527,35],[378,37,528,12],[378,43,528,17,"drawerShown"],[378,54,528,12],[378,57,528,31],[378,78,528,12],[378,81,528,55],[378,86,519,8],[379,0,519,8],[380,0,519,8],[381,0,519,8],[382,0,519,8],[383,0,519,8],[384,0,519,8],[385,0,519,8],[385,11,530,11],[385,18,530,18],[385,24,530,23,"props"],[385,29,530,18],[385,30,530,29,"children"],[385,38,530,11],[385,43,530,42],[385,53,530,11],[385,56,531,14],[385,62,531,19,"props"],[385,67,531,14],[385,68,531,25,"children"],[385,76,531,14],[385,77,531,34],[385,83,531,39,"openValue"],[385,92,531,14],[385,93,530,11],[385,96,532,14],[385,102,532,19,"props"],[385,107,532,14],[385,108,532,25,"children"],[385,116,519,8],[385,118,533,11],[385,124,533,16,"renderOverlay"],[385,137,533,11],[385,139,519,8],[385,140,518,6],[385,142,535,8],[385,162,535,9],[385,183,535,8],[385,184,535,18],[385,188,535,8],[386,0,536,10],[386,10,536,10],[386,23,536,23],[386,25,536,24],[386,35,535,8],[387,0,537,10],[387,10,537,10],[387,13,537,13],[387,15,537,15],[387,21,537,20,"accessibilityIsModalView"],[387,45,535,8],[388,0,538,10],[388,10,538,10],[388,34,538,34],[388,36,538,36],[388,42,538,41,"drawerShown"],[388,53,535,8],[389,0,539,10],[389,10,539,10],[389,15,539,15],[389,17,539,17],[389,18,539,18,"styles"],[389,24,539,24],[389,25,539,25,"drawerContainer"],[389,40,539,17],[389,42,539,42,"drawerStyles"],[389,54,539,17],[389,56,539,56,"drawerContainerStyle"],[389,76,539,17],[389,77,535,8],[390,0,535,8],[391,0,535,8],[392,0,535,8],[393,0,535,8],[394,0,535,8],[395,0,535,8],[396,0,535,8],[396,11,540,10],[396,31,540,11],[396,48,540,10],[397,0,540,16],[397,10,540,16],[397,15,540,21],[397,17,540,23,"dynamicDrawerStyles"],[397,36,540,10],[398,0,540,10],[399,0,540,10],[400,0,540,10],[401,0,540,10],[402,0,540,10],[403,0,540,10],[404,0,540,10],[404,11,541,13],[404,17,541,18,"props"],[404,22,541,13],[404,23,541,24,"renderNavigationView"],[404,43,541,13],[404,44,541,45],[404,50,541,50,"openValue"],[404,59,541,13],[404,60,540,10],[404,61,535,8],[404,62,518,6],[404,63,517,4],[405,0,546,3],[405,7,109,40],[407,0,109,40],[407,12,548,10,"setPanGestureRef"],[407,28,109,40],[407,31,548,29],[407,41,548,30,"ref"],[407,44,548,29],[407,46,548,57],[408,0,551,5],[408,14,552,7,"panGestureHandler"],[408,31,551,4],[408,32,552,71,"current"],[408,39,551,4],[408,42,552,81,"ref"],[408,45,551,4],[409,0,553,4],[409,14,553,9,"props"],[409,19,553,4],[409,20,553,15,"onGestureRef"],[409,32,553,4],[409,58,553,9,"props"],[409,63,553,4],[409,64,553,15,"onGestureRef"],[409,76,553,4],[409,77,553,30,"ref"],[409,80,553,4],[410,0,554,3],[410,7,109,40],[412,0,112,4],[412,10,112,10,"dragX"],[412,16,112,15],[412,19,112,18],[412,23,112,22,"Animated"],[412,45,112,31,"Value"],[412,50,112,18],[412,51,112,37],[412,52,112,18],[412,53,112,4],[414,0,113,4],[414,10,113,10,"touchX"],[414,17,113,16],[414,20,113,19],[414,24,113,23,"Animated"],[414,46,113,32,"Value"],[414,51,113,19],[414,52,113,38],[414,53,113,19],[414,54,113,4],[416,0,114,4],[416,10,114,10,"drawerTranslation"],[416,28,114,27],[416,31,114,30],[416,35,114,34,"Animated"],[416,57,114,43,"Value"],[416,62,114,30],[416,63,114,49],[416,64,114,30],[416,65,114,4],[418,0,116,4],[418,12,116,9,"state"],[418,17,116,4],[418,20,116,17],[419,0,117,6,"dragX"],[419,8,117,6,"dragX"],[419,13,117,11],[419,15,117,6,"dragX"],[419,21,116,17],[420,0,118,6,"touchX"],[420,8,118,6,"touchX"],[420,14,118,12],[420,16,118,6,"touchX"],[420,23,116,17],[421,0,119,6,"drawerTranslation"],[421,8,119,6,"drawerTranslation"],[421,25,119,23],[421,27,119,6,"drawerTranslation"],[421,45,116,17],[422,0,120,6,"containerWidth"],[422,8,120,6,"containerWidth"],[422,22,120,20],[422,24,120,22],[423,0,116,17],[423,7,116,4],[425,0,123,4],[425,12,123,9,"updateAnimatedEvent"],[425,31,123,4],[425,32,123,29,"props"],[425,38,123,4],[425,40,123,36],[425,46,123,41,"state"],[425,51,123,4],[427,0,109,40],[428,0,124,3],[432,13,126,2],[432,49,127,4,"props"],[432,54,126,2],[432,56,128,4,"state"],[432,61,126,2],[432,63,129,4],[433,0,130,4],[433,12,131,6],[433,17,131,11,"props"],[433,22,131,6],[433,23,131,17,"drawerPosition"],[433,37,131,6],[433,42,131,36,"props"],[433,47,131,41],[433,48,131,42,"drawerPosition"],[433,62,131,6],[433,66,132,6],[433,71,132,11,"props"],[433,76,132,6],[433,77,132,17,"drawerWidth"],[433,88,132,6],[433,93,132,33,"props"],[433,98,132,38],[433,99,132,39,"drawerWidth"],[433,110,131,6],[433,114,133,6],[433,119,133,11,"props"],[433,124,133,6],[433,125,133,17,"drawerType"],[433,135,133,6],[433,140,133,32,"props"],[433,145,133,37],[433,146,133,38,"drawerType"],[433,156,131,6],[433,160,134,6],[433,165,134,11,"state"],[433,170,134,6],[433,171,134,17,"containerWidth"],[433,185,134,6],[433,190,134,36,"state"],[433,195,134,41],[433,196,134,42,"containerWidth"],[433,210,130,4],[433,212,135,6],[434,0,136,6],[434,15,136,11,"updateAnimatedEvent"],[434,34,136,6],[434,35,136,31,"props"],[434,40,136,6],[434,42,136,38,"state"],[434,47,136,6],[435,0,137,5],[436,0,138,3],[439,13,556,2],[439,31,556,11],[440,0,557,4],[440,27,562,8],[440,32,562,13,"props"],[440,37,557,4],[441,0,557,4],[441,12,558,6,"drawerPosition"],[441,26,557,4],[441,42,558,6,"drawerPosition"],[441,56,557,4],[442,0,557,4],[442,12,559,6,"drawerLockMode"],[442,26,557,4],[442,42,559,6,"drawerLockMode"],[442,56,557,4],[443,0,557,4],[443,12,560,6,"edgeWidth"],[443,21,557,4],[443,37,560,6,"edgeWidth"],[443,46,557,4],[444,0,557,4],[444,12,561,6,"minSwipeDistance"],[444,28,557,4],[444,44,561,6,"minSwipeDistance"],[444,60,557,4],[445,0,564,4],[445,12,564,10,"fromLeft"],[445,20,564,18],[445,23,564,21,"drawerPosition"],[445,37,564,35],[445,42,564,40],[445,48,564,4],[446,0,569,4],[446,12,569,10,"gestureOrientation"],[446,30,569,28],[446,33,570,6],[446,34,570,7,"fromLeft"],[446,42,570,15],[446,45,570,18],[446,46,570,15],[446,49,570,22],[446,50,570,23],[446,51,570,6],[446,56,570,29],[446,61,570,34,"drawerShown"],[446,72,570,29],[446,75,570,48],[446,76,570,49],[446,77,570,29],[446,80,570,53],[446,81,570,6],[446,82,569,4],[447,0,575,4],[447,12,575,10,"hitSlop"],[447,19,575,17],[447,22,575,20,"fromLeft"],[447,30,575,28],[447,33,576,8],[448,0,576,10,"left"],[448,10,576,10,"left"],[448,14,576,14],[448,16,576,16],[448,17,576,8],[449,0,576,19,"width"],[449,10,576,19,"width"],[449,15,576,24],[449,17,576,26],[449,22,576,31,"drawerShown"],[449,33,576,26],[449,36,576,45,"undefined"],[449,45,576,26],[449,48,576,57,"edgeWidth"],[450,0,576,8],[450,9,575,28],[450,12,577,8],[451,0,577,10,"right"],[451,10,577,10,"right"],[451,15,577,15],[451,17,577,17],[451,18,577,8],[452,0,577,20,"width"],[452,10,577,20,"width"],[452,15,577,25],[452,17,577,27],[452,22,577,32,"drawerShown"],[452,33,577,27],[452,36,577,46,"undefined"],[452,45,577,27],[452,48,577,58,"edgeWidth"],[453,0,577,8],[453,9,575,4],[454,0,579,4],[454,15,580,6],[454,35,580,7],[454,115,580,6],[455,0,582,8],[455,10,582,8],[455,13,582,11],[455,15,582,13],[455,20,582,18,"setPanGestureRef"],[455,36,580,6],[456,0,583,8],[456,10,583,8],[456,17,583,15],[456,19,583,17,"hitSlop"],[456,26,580,6],[457,0,584,8],[457,10,584,8],[457,23,584,21],[457,25,584,23,"gestureOrientation"],[457,43,584,41],[457,46,584,44,"minSwipeDistance"],[457,62,580,6],[458,0,585,8],[458,10,585,8],[458,21,585,19],[458,23,585,21],[458,24,585,22],[458,25,585,23],[458,27,585,21],[458,29,585,27],[458,31,585,21],[458,32,580,6],[459,0,586,8],[459,10,586,8],[459,24,586,22],[459,26,586,24],[459,31,586,29,"onGestureEvent"],[459,45,580,6],[460,0,587,8],[460,10,587,8],[460,30,587,28],[460,32,587,30],[460,37,587,35,"openingHandlerStateChange"],[460,62,580,6],[461,0,588,8],[461,10,588,8],[461,40,588,38],[461,42,589,10],[461,47,589,15,"props"],[461,52,589,10],[461,53,589,21,"enableTrackpadTwoFingerGesture"],[461,83,580,6],[462,0,591,8],[462,10,591,8],[462,17,591,15],[462,19,592,10,"drawerLockMode"],[462,33,592,24],[462,38,592,29],[462,53,592,10],[462,57,592,48,"drawerLockMode"],[462,71,592,62],[462,76,592,67],[462,89,580,6],[463,0,580,6],[464,0,580,6],[465,0,580,6],[466,0,580,6],[467,0,580,6],[468,0,580,6],[469,0,580,6],[469,11,594,9],[469,16,594,14,"renderDrawer"],[469,28,594,9],[469,30,580,6],[469,31,579,4],[470,0,597,3],[473,4,93,42,"Component"],[473,19],[476,0,93,21,"DrawerLayout"],[476,2,93,21,"DrawerLayout"],[476,14],[476,15,97,9,"defaultProps"],[476,27],[476,30,97,24],[477,0,98,4,"drawerWidth"],[477,4,98,4,"drawerWidth"],[477,15,98,15],[477,17,98,17],[477,20,97,24],[478,0,99,4,"drawerPosition"],[478,4,99,4,"drawerPosition"],[478,18,99,18],[478,20,99,20],[478,26,97,24],[479,0,100,4,"useNativeAnimations"],[479,4,100,4,"useNativeAnimations"],[479,23,100,23],[479,25,100,25],[479,29,97,24],[480,0,101,4,"drawerType"],[480,4,101,4,"drawerType"],[480,14,101,14],[480,16,101,16],[480,23,97,24],[481,0,102,4,"edgeWidth"],[481,4,102,4,"edgeWidth"],[481,13,102,13],[481,15,102,15],[481,17,97,24],[482,0,103,4,"minSwipeDistance"],[482,4,103,4,"minSwipeDistance"],[482,20,103,20],[482,22,103,22],[482,23,97,24],[483,0,104,4,"overlayColor"],[483,4,104,4,"overlayColor"],[483,16,104,16],[483,18,104,18],[483,38,97,24],[484,0,105,4,"drawerLockMode"],[484,4,105,4,"drawerLockMode"],[484,18,105,18],[484,20,105,20],[484,30,97,24],[485,0,106,4,"enableTrackpadTwoFingerGesture"],[485,4,106,4,"enableTrackpadTwoFingerGesture"],[485,34,106,34],[485,36,106,36],[486,0,97,24],[486,3],[487,0,93,21,"DrawerLayout"],[487,2,93,21,"DrawerLayout"],[487,14],[487,15,149,9,"positions"],[487,24],[487,27,149,21],[488,0,150,4,"Left"],[488,4,150,4,"Left"],[488,8,150,8],[488,10,150,10],[488,16,149,21],[489,0,151,4,"Right"],[489,4,151,4,"Right"],[489,9,151,9],[489,11,151,11],[490,0,149,21],[490,3],[492,0,600,0],[492,6,600,6,"styles"],[492,12,600,12],[492,15,600,15,"StyleSheet"],[492,39,600,26,"create"],[492,45,600,15],[492,46,600,33],[493,0,601,2,"drawerContainer"],[493,4,601,2,"drawerContainer"],[493,19,601,17],[493,48,602,7,"StyleSheet"],[493,72,602,18,"absoluteFillObject"],[493,90,601,17],[494,0,603,4,"zIndex"],[494,6,603,4,"zIndex"],[494,12,603,10],[494,14,603,12],[494,18,601,17],[495,0,604,4,"flexDirection"],[495,6,604,4,"flexDirection"],[495,19,604,17],[495,21,604,19],[496,0,601,17],[496,6,600,33],[497,0,606,2,"containerInFront"],[497,4,606,2,"containerInFront"],[497,20,606,18],[497,49,607,7,"StyleSheet"],[497,73,607,18,"absoluteFillObject"],[497,91,606,18],[498,0,608,4,"zIndex"],[498,6,608,4,"zIndex"],[498,12,608,10],[498,14,608,12],[499,0,606,18],[499,6,600,33],[500,0,610,2,"containerOnBack"],[500,4,610,2,"containerOnBack"],[500,19,610,17],[500,48,611,7,"StyleSheet"],[500,72,611,18,"absoluteFillObject"],[500,90,610,17],[500,91,600,33],[501,0,613,2,"main"],[501,4,613,2,"main"],[501,8,613,6],[501,10,613,8],[502,0,614,4,"flex"],[502,6,614,4,"flex"],[502,10,614,8],[502,12,614,10],[502,13,613,8],[503,0,615,4,"zIndex"],[503,6,615,4,"zIndex"],[503,12,615,10],[503,14,615,12],[503,15,613,8],[504,0,616,4,"overflow"],[504,6,616,4,"overflow"],[504,14,616,12],[504,16,616,14],[505,0,613,8],[505,5,600,33],[506,0,618,2,"overlay"],[506,4,618,2,"overlay"],[506,11,618,9],[506,40,619,7,"StyleSheet"],[506,64,619,18,"absoluteFillObject"],[506,82,618,9],[507,0,620,4,"zIndex"],[507,6,620,4,"zIndex"],[507,12,620,10],[507,14,620,12],[508,0,618,9],[509,0,600,33],[509,3,600,15],[509,4,600,0]],"functionMap":{"names":["<global>","DrawerLayout","constructor","UNSAFE_componentWillUpdate","updateAnimatedEvent","gestureOptions.listener","handleContainerLayout","emitStateChanged","openingHandlerStateChange","onTapHandlerStateChange","handleRelease","updateShowing","animateDrawer","Animated.spring.start$argument_0","openDrawer","closeDrawer","renderOverlay","renderDrawer","setPanGestureRef","render"],"mappings":"AAA;eC4F;ECgB;GDe;EEE;GFY;gCGgB;gCC+F;ODK;GHO;kCKE;GLE;6BME;GNK;sCOE;GPc;oCQE;GRU;0BSE;GTkC;0BUE;GV0B;0BWE;aCuC;KDS;GXC;eaE;GbU;gBcE;GdM;0BeE;GfsB;yBgBE;GhBqF;6BiBE;GjBM;EkBE;GlByC;CDC"}},"type":"js/module"}]}