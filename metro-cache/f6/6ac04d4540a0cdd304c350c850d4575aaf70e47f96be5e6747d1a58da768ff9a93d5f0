{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":85}}]}},{"name":"../Components/View/ReactNativeViewViewConfig","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":85}}]}},{"name":"../ReactNative/getNativeComponentAttributes","data":{"asyncType":null,"locs":[{"start":{"line":47,"column":29},"end":{"line":47,"column":72}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  exports.getConfigWithoutViewProps = getConfigWithoutViewProps;\n  exports.lefthandObjectDiff = lefthandObjectDiff;\n  exports.stringifyViewConfig = stringifyViewConfig;\n\n  var _ReactNativeViewViewConfig = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"../Components/View/ReactNativeViewViewConfig\"));\n\n  var IGNORED_KEYS = ['transform', 'hitSlop'];\n\n  function verifyComponentAttributeEquivalence(componentName, config) {\n    if (!global.RN$Bridgeless) {\n      var nativeAttributes = _$$_REQUIRE(_dependencyMap[2], \"../ReactNative/getNativeComponentAttributes\")(componentName);\n\n      ['validAttributes', 'bubblingEventTypes', 'directEventTypes'].forEach(function (prop) {\n        var diffKeys = Object.keys(lefthandObjectDiff(nativeAttributes[prop], config[prop]));\n\n        if (diffKeys.length) {\n          console.error(componentName + \" generated view config for \" + prop + \" does not match native, missing: \" + diffKeys.join(' '));\n        }\n      });\n    }\n  }\n\n  function lefthandObjectDiff(leftObj, rightObj) {\n    var differentKeys = {};\n\n    function compare(leftItem, rightItem, key) {\n      if (typeof leftItem !== typeof rightItem && leftItem != null) {\n        differentKeys[key] = rightItem;\n        return;\n      }\n\n      if (typeof leftItem === 'object') {\n        var objDiff = lefthandObjectDiff(leftItem, rightItem);\n\n        if (Object.keys(objDiff).length > 1) {\n          differentKeys[key] = objDiff;\n        }\n\n        return;\n      }\n\n      if (leftItem !== rightItem) {\n        differentKeys[key] = rightItem;\n        return;\n      }\n    }\n\n    for (var key in leftObj) {\n      if (IGNORED_KEYS.includes(key)) {\n        continue;\n      }\n\n      if (!rightObj) {\n        differentKeys[key] = {};\n      } else if (leftObj.hasOwnProperty(key)) {\n        compare(leftObj[key], rightObj[key], key);\n      }\n    }\n\n    return differentKeys;\n  }\n\n  function getConfigWithoutViewProps(viewConfig, propName) {\n    if (!viewConfig[propName]) {\n      return {};\n    }\n\n    return Object.keys(viewConfig[propName]).filter(function (prop) {\n      return !_ReactNativeViewViewConfig.default[propName][prop];\n    }).reduce(function (obj, prop) {\n      obj[prop] = viewConfig[propName][prop];\n      return obj;\n    }, {});\n  }\n\n  function stringifyViewConfig(viewConfig) {\n    return JSON.stringify(viewConfig, function (key, val) {\n      if (typeof val === 'function') {\n        return \"\\u0192 \" + val.name;\n      }\n\n      return val;\n    }, 2);\n  }\n\n  var _default = verifyComponentAttributeEquivalence;\n  exports.default = _default;\n});","lineCount":95,"map":[[2,0,11,0],[12,0,15,0],[14,0,18,0],[14,6,18,6,"IGNORED_KEYS"],[14,18,18,18],[14,21,18,21],[14,22,18,22],[14,33,18,21],[14,35,18,35],[14,44,18,21],[14,45,18,0],[16,0,42,0],[16,11,42,9,"verifyComponentAttributeEquivalence"],[16,46,42,0],[16,47,43,2,"componentName"],[16,60,42,0],[16,62,44,2,"config"],[16,68,42,0],[16,70,45,2],[17,0,46,2],[17,8,46,6],[17,9,46,7,"global"],[17,15,46,13],[17,16,46,14,"RN$Bridgeless"],[17,29,46,2],[17,31,46,29],[18,0,47,4],[18,10,47,10,"nativeAttributes"],[18,26,47,26],[18,29,47,29],[18,107,47,58,"componentName"],[18,120,47,29],[18,121,47,4],[20,0,49,4],[20,7,49,5],[20,24,49,4],[20,26,49,24],[20,46,49,4],[20,48,49,46],[20,66,49,4],[20,68,49,66,"forEach"],[20,75,49,4],[20,76,50,6],[20,86,50,6,"prop"],[20,90,50,10],[20,92,50,14],[21,0,51,8],[21,12,51,14,"diffKeys"],[21,20,51,22],[21,23,51,25,"Object"],[21,29,51,31],[21,30,51,32,"keys"],[21,34,51,25],[21,35,52,10,"lefthandObjectDiff"],[21,53,52,28],[21,54,52,29,"nativeAttributes"],[21,70,52,45],[21,71,52,46,"prop"],[21,75,52,45],[21,76,52,28],[21,78,52,53,"config"],[21,84,52,59],[21,85,52,60,"prop"],[21,89,52,59],[21,90,52,28],[21,91,51,25],[21,92,51,8],[23,0,55,8],[23,12,55,12,"diffKeys"],[23,20,55,20],[23,21,55,21,"length"],[23,27,55,8],[23,29,55,29],[24,0,56,10,"console"],[24,10,56,10,"console"],[24,17,56,17],[24,18,56,18,"error"],[24,23,56,10],[24,24,57,15,"componentName"],[24,37,56,10],[24,72,57,58,"prop"],[24,76,56,10],[24,117,57,98,"diffKeys"],[24,125,57,106],[24,126,57,107,"join"],[24,130,57,98],[24,131,58,14],[24,134,57,98],[24,135,56,10],[25,0,61,9],[26,0,62,7],[26,7,49,4],[27,0,64,3],[28,0,65,1],[30,0,67,7],[30,11,67,16,"lefthandObjectDiff"],[30,29,67,7],[30,30,67,35,"leftObj"],[30,37,67,7],[30,39,67,52,"rightObj"],[30,47,67,7],[30,49,67,78],[31,0,68,2],[31,8,68,8,"differentKeys"],[31,21,68,21],[31,24,68,24],[31,26,68,2],[33,0,70,2],[33,13,70,11,"compare"],[33,20,70,2],[33,21,70,19,"leftItem"],[33,29,70,2],[33,31,70,29,"rightItem"],[33,40,70,2],[33,42,70,40,"key"],[33,45,70,2],[33,47,70,45],[34,0,71,4],[34,10,71,8],[34,17,71,15,"leftItem"],[34,25,71,8],[34,30,71,28],[34,37,71,35,"rightItem"],[34,46,71,8],[34,50,71,48,"leftItem"],[34,58,71,56],[34,62,71,60],[34,66,71,4],[34,68,71,66],[35,0,72,6,"differentKeys"],[35,8,72,6,"differentKeys"],[35,21,72,19],[35,22,72,20,"key"],[35,25,72,19],[35,26,72,6],[35,29,72,27,"rightItem"],[35,38,72,6],[36,0,73,6],[37,0,74,5],[39,0,76,4],[39,10,76,8],[39,17,76,15,"leftItem"],[39,25,76,8],[39,30,76,28],[39,38,76,4],[39,40,76,38],[40,0,77,6],[40,12,77,12,"objDiff"],[40,19,77,19],[40,22,77,22,"lefthandObjectDiff"],[40,40,77,40],[40,41,77,41,"leftItem"],[40,49,77,40],[40,51,77,51,"rightItem"],[40,60,77,40],[40,61,77,6],[42,0,78,6],[42,12,78,10,"Object"],[42,18,78,16],[42,19,78,17,"keys"],[42,23,78,10],[42,24,78,22,"objDiff"],[42,31,78,10],[42,33,78,31,"length"],[42,39,78,10],[42,42,78,40],[42,43,78,6],[42,45,78,43],[43,0,79,8,"differentKeys"],[43,10,79,8,"differentKeys"],[43,23,79,21],[43,24,79,22,"key"],[43,27,79,21],[43,28,79,8],[43,31,79,29,"objDiff"],[43,38,79,8],[44,0,80,7],[46,0,81,6],[47,0,82,5],[49,0,84,4],[49,10,84,8,"leftItem"],[49,18,84,16],[49,23,84,21,"rightItem"],[49,32,84,4],[49,34,84,32],[50,0,85,6,"differentKeys"],[50,8,85,6,"differentKeys"],[50,21,85,19],[50,22,85,20,"key"],[50,25,85,19],[50,26,85,6],[50,29,85,27,"rightItem"],[50,38,85,6],[51,0,86,6],[52,0,87,5],[53,0,88,3],[55,0,90,2],[55,9,90,7],[55,13,90,13,"key"],[55,16,90,2],[55,20,90,20,"leftObj"],[55,27,90,2],[55,29,90,29],[56,0,91,4],[56,10,91,8,"IGNORED_KEYS"],[56,22,91,20],[56,23,91,21,"includes"],[56,31,91,8],[56,32,91,30,"key"],[56,35,91,8],[56,36,91,4],[56,38,91,36],[57,0,92,6],[58,0,93,5],[60,0,95,4],[60,10,95,8],[60,11,95,9,"rightObj"],[60,19,95,4],[60,21,95,19],[61,0,96,6,"differentKeys"],[61,8,96,6,"differentKeys"],[61,21,96,19],[61,22,96,20,"key"],[61,25,96,19],[61,26,96,6],[61,29,96,27],[61,31,96,6],[62,0,97,5],[62,7,95,4],[62,13,97,11],[62,17,97,15,"leftObj"],[62,24,97,22],[62,25,97,23,"hasOwnProperty"],[62,39,97,15],[62,40,97,38,"key"],[62,43,97,15],[62,44,97,11],[62,46,97,44],[63,0,98,6,"compare"],[63,8,98,6,"compare"],[63,15,98,13],[63,16,98,14,"leftObj"],[63,23,98,21],[63,24,98,22,"key"],[63,27,98,21],[63,28,98,13],[63,30,98,28,"rightObj"],[63,38,98,36],[63,39,98,37,"key"],[63,42,98,36],[63,43,98,13],[63,45,98,43,"key"],[63,48,98,13],[63,49,98,6],[64,0,99,5],[65,0,100,3],[67,0,102,2],[67,11,102,9,"differentKeys"],[67,24,102,2],[68,0,103,1],[70,0,105,7],[70,11,105,16,"getConfigWithoutViewProps"],[70,36,105,7],[70,37,106,2,"viewConfig"],[70,47,105,7],[70,49,107,2,"propName"],[70,57,105,7],[70,59,108,9],[71,0,109,2],[71,8,109,6],[71,9,109,7,"viewConfig"],[71,19,109,17],[71,20,109,18,"propName"],[71,28,109,17],[71,29,109,2],[71,31,109,29],[72,0,110,4],[72,13,110,11],[72,15,110,4],[73,0,111,3],[75,0,113,2],[75,11,113,9,"Object"],[75,17,113,15],[75,18,113,16,"keys"],[75,22,113,9],[75,23,113,21,"viewConfig"],[75,33,113,31],[75,34,113,32,"propName"],[75,42,113,31],[75,43,113,9],[75,45,114,5,"filter"],[75,51,113,9],[75,52,114,12],[75,62,114,12,"prop"],[75,66,114,16],[76,0,114,16],[76,13,114,20],[76,14,114,21,"ReactNativeViewViewConfig"],[76,49,114,47,"propName"],[76,57,114,21],[76,59,114,57,"prop"],[76,63,114,21],[76,64,114,16],[77,0,114,16],[77,5,113,9],[77,7,115,5,"reduce"],[77,13,113,9],[77,14,115,12],[77,24,115,13,"obj"],[77,27,115,12],[77,29,115,18,"prop"],[77,33,115,12],[77,35,115,27],[78,0,116,6,"obj"],[78,6,116,6,"obj"],[78,9,116,9],[78,10,116,10,"prop"],[78,14,116,9],[78,15,116,6],[78,18,116,18,"viewConfig"],[78,28,116,28],[78,29,116,29,"propName"],[78,37,116,28],[78,38,116,18],[78,39,116,39,"prop"],[78,43,116,18],[78,44,116,6],[79,0,117,6],[79,13,117,13,"obj"],[79,16,117,6],[80,0,118,5],[80,5,113,9],[80,7,118,7],[80,9,113,9],[80,10,113,2],[81,0,119,1],[83,0,121,7],[83,11,121,16,"stringifyViewConfig"],[83,30,121,7],[83,31,121,36,"viewConfig"],[83,41,121,7],[83,43,121,61],[84,0,122,2],[84,11,122,9,"JSON"],[84,15,122,13],[84,16,122,14,"stringify"],[84,25,122,9],[84,26,123,4,"viewConfig"],[84,36,122,9],[84,38,124,4],[84,48,124,5,"key"],[84,51,124,4],[84,53,124,10,"val"],[84,56,124,4],[84,58,124,18],[85,0,125,6],[85,10,125,10],[85,17,125,17,"val"],[85,20,125,10],[85,25,125,25],[85,35,125,6],[85,37,125,37],[86,0,126,8],[86,27,126,20,"val"],[86,30,126,23],[86,31,126,24,"name"],[86,35,126,8],[87,0,127,7],[89,0,128,6],[89,13,128,13,"val"],[89,16,128,6],[90,0,129,5],[90,5,122,9],[90,7,130,4],[90,8,122,9],[90,9,122,2],[91,0,132,1],[93,17,134,15,"verifyComponentAttributeEquivalence"],[93,52]],"functionMap":{"names":["<global>","verifyComponentAttributeEquivalence","forEach$argument_0","lefthandObjectDiff","compare","getConfigWithoutViewProps","Object.keys.filter$argument_0","Object.keys.filter.reduce$argument_0","stringifyViewConfig","JSON.stringify$argument_1"],"mappings":"AAA;ACyC;MCQ;ODY;CDG;OGE;ECG;GDkB;CHe;OKE;YCS,kDD;YEC;KFG;CLC;OQE;ICG;KDK;CRG"}},"type":"js/module"}]}