{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":332,"column":0}},{"start":{"line":1,"column":0},"end":{"line":332,"column":0}},{"start":{"line":1,"column":0},"end":{"line":332,"column":0}}]}},{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":332,"column":0}}]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":332,"column":0}}]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":332,"column":0}}]}},{"name":"./infoLog","data":{"asyncType":null,"locs":[{"start":{"line":80,"column":8},"end":{"line":80,"column":78}},{"start":{"line":86,"column":8},"end":{"line":89,"column":9}},{"start":{"line":121,"column":6},"end":{"line":121,"column":46}},{"start":{"line":134,"column":6},"end":{"line":134,"column":55}},{"start":{"line":175,"column":10},"end":{"line":175,"column":69}},{"start":{"line":180,"column":6},"end":{"line":180,"column":27}},{"start":{"line":185,"column":10},"end":{"line":185,"column":56}},{"start":{"line":198,"column":8},"end":{"line":198,"column":76}},{"start":{"line":204,"column":8},"end":{"line":207,"column":9}},{"start":{"line":226,"column":8},"end":{"line":226,"column":75}},{"start":{"line":233,"column":8},"end":{"line":236,"column":9}},{"start":{"line":250,"column":8},"end":{"line":253,"column":9}},{"start":{"line":260,"column":8},"end":{"line":263,"column":9}},{"start":{"line":274,"column":6},"end":{"line":274,"column":54}},{"start":{"line":285,"column":8},"end":{"line":285,"column":79}},{"start":{"line":293,"column":8},"end":{"line":296,"column":9}},{"start":{"line":302,"column":8},"end":{"line":305,"column":9}},{"start":{"line":314,"column":6},"end":{"line":314,"column":52}}]}},{"name":"../Performance/Systrace","data":{"asyncType":null,"locs":[{"start":{"line":272,"column":20},"end":{"line":272,"column":44}},{"start":{"line":318,"column":6},"end":{"line":318,"column":28}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createPerformanceLogger;\n  exports.getCurrentTimestamp = void 0;\n\n  var _extends2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _global$nativeQPLTime;\n\n  var _cookies = {};\n  var PRINT_TO_CONSOLE = false;\n  var getCurrentTimestamp = (_global$nativeQPLTime = global.nativeQPLTimestamp) != null ? _global$nativeQPLTime : global.performance.now.bind(global.performance);\n  exports.getCurrentTimestamp = getCurrentTimestamp;\n\n  var PerformanceLogger = function () {\n    function PerformanceLogger() {\n      (0, _classCallCheck2.default)(this, PerformanceLogger);\n      this._timespans = {};\n      this._extras = {};\n      this._points = {};\n      this._pointExtras = {};\n      this._closed = false;\n    }\n\n    (0, _createClass2.default)(PerformanceLogger, [{\n      key: \"addTimespan\",\n      value: function addTimespan(key, startTime, endTime, startExtras, endExtras) {\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger: addTimespan - has closed ignoring: ', key);\n          }\n\n          return;\n        }\n\n        if (this._timespans[key]) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger: Attempting to add a timespan that already exists ', key);\n          }\n\n          return;\n        }\n\n        this._timespans[key] = {\n          startTime: startTime,\n          endTime: endTime,\n          totalTime: endTime - (startTime || 0),\n          startExtras: startExtras,\n          endExtras: endExtras\n        };\n      }\n    }, {\n      key: \"append\",\n      value: function append(performanceLogger) {\n        this._timespans = (0, _extends2.default)({}, performanceLogger.getTimespans(), this._timespans);\n        this._extras = (0, _extends2.default)({}, performanceLogger.getExtras(), this._extras);\n        this._points = (0, _extends2.default)({}, performanceLogger.getPoints(), this._points);\n        this._pointExtras = (0, _extends2.default)({}, performanceLogger.getPointExtras(), this._pointExtras);\n      }\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        this._timespans = {};\n        this._extras = {};\n        this._points = {};\n\n        if (PRINT_TO_CONSOLE) {\n          _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger.js', 'clear');\n        }\n      }\n    }, {\n      key: \"clearCompleted\",\n      value: function clearCompleted() {\n        for (var _key in this._timespans) {\n          var _this$_timespans$_key;\n\n          if (((_this$_timespans$_key = this._timespans[_key]) == null ? void 0 : _this$_timespans$_key.totalTime) != null) {\n            delete this._timespans[_key];\n          }\n        }\n\n        this._extras = {};\n        this._points = {};\n\n        if (PRINT_TO_CONSOLE) {\n          _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger.js', 'clearCompleted');\n        }\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        this._closed = true;\n      }\n    }, {\n      key: \"currentTimestamp\",\n      value: function currentTimestamp() {\n        return getCurrentTimestamp();\n      }\n    }, {\n      key: \"getExtras\",\n      value: function getExtras() {\n        return this._extras;\n      }\n    }, {\n      key: \"getPoints\",\n      value: function getPoints() {\n        return this._points;\n      }\n    }, {\n      key: \"getPointExtras\",\n      value: function getPointExtras() {\n        return this._pointExtras;\n      }\n    }, {\n      key: \"getTimespans\",\n      value: function getTimespans() {\n        return this._timespans;\n      }\n    }, {\n      key: \"hasTimespan\",\n      value: function hasTimespan(key) {\n        return !!this._timespans[key];\n      }\n    }, {\n      key: \"isClosed\",\n      value: function isClosed() {\n        return this._closed;\n      }\n    }, {\n      key: \"logEverything\",\n      value: function logEverything() {\n        if (PRINT_TO_CONSOLE) {\n          for (var _key2 in this._timespans) {\n            var _this$_timespans$_key2;\n\n            if (((_this$_timespans$_key2 = this._timespans[_key2]) == null ? void 0 : _this$_timespans$_key2.totalTime) != null) {\n              _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")(_key2 + ': ' + this._timespans[_key2].totalTime + 'ms');\n            }\n          }\n\n          _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")(this._extras);\n\n          for (var _key3 in this._points) {\n            if (this._points[_key3] != null) {\n              _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")(_key3 + ': ' + this._points[_key3] + 'ms');\n            }\n          }\n        }\n      }\n    }, {\n      key: \"markPoint\",\n      value: function markPoint(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger: markPoint - has closed ignoring: ', key);\n          }\n\n          return;\n        }\n\n        if (this._points[key] != null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger: Attempting to mark a point that has been already logged ', key);\n          }\n\n          return;\n        }\n\n        this._points[key] = timestamp;\n\n        if (extras) {\n          this._pointExtras[key] = extras;\n        }\n      }\n    }, {\n      key: \"removeExtra\",\n      value: function removeExtra(key) {\n        var value = this._extras[key];\n        delete this._extras[key];\n        return value;\n      }\n    }, {\n      key: \"setExtra\",\n      value: function setExtra(key, value) {\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger: setExtra - has closed ignoring: ', key);\n          }\n\n          return;\n        }\n\n        if (this._extras.hasOwnProperty(key)) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger: Attempting to set an extra that already exists ', {\n              key: key,\n              currentValue: this._extras[key],\n              attemptedValue: value\n            });\n          }\n\n          return;\n        }\n\n        this._extras[key] = value;\n      }\n    }, {\n      key: \"startTimespan\",\n      value: function startTimespan(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger: startTimespan - has closed ignoring: ', key);\n          }\n\n          return;\n        }\n\n        if (this._timespans[key]) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger: Attempting to start a timespan that already exists ', key);\n          }\n\n          return;\n        }\n\n        this._timespans[key] = {\n          startTime: timestamp,\n          startExtras: extras\n        };\n        _cookies[key] = _$$_REQUIRE(_dependencyMap[5], \"../Performance/Systrace\").beginAsyncEvent(key);\n\n        if (PRINT_TO_CONSOLE) {\n          _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger.js', 'start: ' + key);\n        }\n      }\n    }, {\n      key: \"stopTimespan\",\n      value: function stopTimespan(key) {\n        var timestamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentTimestamp();\n        var extras = arguments.length > 2 ? arguments[2] : undefined;\n\n        if (this._closed) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger: stopTimespan - has closed ignoring: ', key);\n          }\n\n          return;\n        }\n\n        var timespan = this._timespans[key];\n\n        if (!timespan || timespan.startTime == null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger: Attempting to end a timespan that has not started ', key);\n          }\n\n          return;\n        }\n\n        if (timespan.endTime != null) {\n          if (PRINT_TO_CONSOLE && __DEV__) {\n            _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger: Attempting to end a timespan that has already ended ', key);\n          }\n\n          return;\n        }\n\n        timespan.endExtras = extras;\n        timespan.endTime = timestamp;\n        timespan.totalTime = timespan.endTime - (timespan.startTime || 0);\n\n        if (PRINT_TO_CONSOLE) {\n          _$$_REQUIRE(_dependencyMap[4], \"./infoLog\")('PerformanceLogger.js', 'end: ' + key);\n        }\n\n        if (_cookies[key] != null) {\n          _$$_REQUIRE(_dependencyMap[5], \"../Performance/Systrace\").endAsyncEvent(key, _cookies[key]);\n\n          delete _cookies[key];\n        }\n      }\n    }]);\n    return PerformanceLogger;\n  }();\n\n  function createPerformanceLogger() {\n    return new PerformanceLogger();\n  }\n});","lineCount":303,"map":[[2,0,11,0],[18,0,57,0],[18,6,57,6,"_cookies"],[18,14,57,44],[18,17,57,47],[18,19,57,0],[19,0,59,0],[19,6,59,6,"PRINT_TO_CONSOLE"],[19,22,59,29],[19,25,59,32],[19,30,59,0],[20,0,61,7],[20,6,61,13,"getCurrentTimestamp"],[20,25,61,46],[20,53,62,2,"global"],[20,59,62,8],[20,60,62,9,"nativeQPLTimestamp"],[20,78,61,46],[20,114,62,31,"global"],[20,120,62,37],[20,121,62,38,"performance"],[20,132,62,31],[20,133,62,50,"now"],[20,136,62,31],[20,137,62,54,"bind"],[20,141,62,31],[20,142,62,59,"global"],[20,148,62,65],[20,149,62,66,"performance"],[20,160,62,31],[20,161,61,7],[23,6,64,6,"PerformanceLogger"],[23,23],[26,11,65,2,"_timespans"],[26,21],[26,24,65,43],[26,26],[27,11,66,2,"_extras"],[27,18],[27,21,66,42],[27,23],[28,11,67,2,"_points"],[28,18],[28,21,67,38],[28,23],[29,11,68,2,"_pointExtras"],[29,23],[29,26,68,48],[29,28],[30,11,69,2,"_closed"],[30,18],[30,21,69,21],[30,26],[35,13,71,2],[35,34,72,4,"key"],[35,37,71,2],[35,39,73,4,"startTime"],[35,48,71,2],[35,50,74,4,"endTime"],[35,57,71,2],[35,59,75,4,"startExtras"],[35,70,71,2],[35,72,76,4,"endExtras"],[35,81,71,2],[35,83,77,4],[36,0,78,4],[36,12,78,8],[36,17,78,13,"_closed"],[36,24,78,4],[36,26,78,22],[37,0,79,6],[37,14,79,10,"PRINT_TO_CONSOLE"],[37,30,79,26],[37,34,79,30,"__DEV__"],[37,41,79,6],[37,43,79,39],[38,0,80,8],[38,56,80,16],[38,112,80,8],[38,114,80,74,"key"],[38,117,80,8],[39,0,81,7],[41,0,82,6],[42,0,83,5],[44,0,84,4],[44,12,84,8],[44,17,84,13,"_timespans"],[44,27,84,8],[44,28,84,24,"key"],[44,31,84,8],[44,32,84,4],[44,34,84,30],[45,0,85,6],[45,14,85,10,"PRINT_TO_CONSOLE"],[45,30,85,26],[45,34,85,30,"__DEV__"],[45,41,85,6],[45,43,85,39],[46,0,86,8],[46,56,87,10],[46,126,86,8],[46,128,88,10,"key"],[46,131,86,8],[47,0,90,7],[49,0,91,6],[50,0,92,5],[52,0,94,4],[52,13,94,9,"_timespans"],[52,23,94,4],[52,24,94,20,"key"],[52,27,94,4],[52,31,94,27],[53,0,95,6,"startTime"],[53,10,95,6,"startTime"],[53,19,95,15],[53,21,95,6,"startTime"],[53,30,94,27],[54,0,96,6,"endTime"],[54,10,96,6,"endTime"],[54,17,96,13],[54,19,96,6,"endTime"],[54,26,94,27],[55,0,97,6,"totalTime"],[55,10,97,6,"totalTime"],[55,19,97,15],[55,21,97,17,"endTime"],[55,28,97,24],[55,32,97,28,"startTime"],[55,41,97,37],[55,45,97,41],[55,46,97,24],[55,47,94,27],[56,0,98,6,"startExtras"],[56,10,98,6,"startExtras"],[56,21,98,17],[56,23,98,6,"startExtras"],[56,34,94,27],[57,0,99,6,"endExtras"],[57,10,99,6,"endExtras"],[57,19,99,15],[57,21,99,6,"endExtras"],[58,0,94,27],[58,9,94,4],[59,0,101,3],[62,13,103,2],[62,29,103,9,"performanceLogger"],[62,46,103,2],[62,48,103,48],[63,0,104,4],[63,13,104,9,"_timespans"],[63,23,104,4],[63,53,105,9,"performanceLogger"],[63,70,105,26],[63,71,105,27,"getTimespans"],[63,83,105,9],[63,85,104,4],[63,87,106,9],[63,92,106,14,"_timespans"],[63,102,104,4],[64,0,108,4],[64,13,108,9,"_extras"],[64,20,108,4],[64,50,108,23,"performanceLogger"],[64,67,108,40],[64,68,108,41,"getExtras"],[64,77,108,23],[64,79,108,4],[64,81,108,57],[64,86,108,62,"_extras"],[64,93,108,4],[65,0,109,4],[65,13,109,9,"_points"],[65,20,109,4],[65,50,109,23,"performanceLogger"],[65,67,109,40],[65,68,109,41,"getPoints"],[65,77,109,23],[65,79,109,4],[65,81,109,57],[65,86,109,62,"_points"],[65,93,109,4],[66,0,110,4],[66,13,110,9,"_pointExtras"],[66,25,110,4],[66,55,111,9,"performanceLogger"],[66,72,111,26],[66,73,111,27,"getPointExtras"],[66,87,111,9],[66,89,110,4],[66,91,112,9],[66,96,112,14,"_pointExtras"],[66,108,110,4],[67,0,114,3],[70,13,116,2],[70,30,116,10],[71,0,117,4],[71,13,117,9,"_timespans"],[71,23,117,4],[71,26,117,22],[71,28,117,4],[72,0,118,4],[72,13,118,9,"_extras"],[72,20,118,4],[72,23,118,19],[72,25,118,4],[73,0,119,4],[73,13,119,9,"_points"],[73,20,119,4],[73,23,119,19],[73,25,119,4],[75,0,120,4],[75,12,120,8,"PRINT_TO_CONSOLE"],[75,28,120,4],[75,30,120,26],[76,0,121,6],[76,54,121,14],[76,76,121,6],[76,78,121,38],[76,85,121,6],[77,0,122,5],[78,0,123,3],[81,13,125,2],[81,39,125,19],[82,0,126,4],[82,13,126,9],[82,17,126,15,"key"],[82,21,126,4],[82,25,126,22],[82,30,126,27,"_timespans"],[82,40,126,4],[82,42,126,39],[83,0,126,39],[85,0,127,6],[85,14,127,10],[85,45,127,15,"_timespans"],[85,55,127,10],[85,56,127,26,"key"],[85,60,127,10],[85,104,127,32,"totalTime"],[85,113,127,10],[85,118,127,45],[85,122,127,6],[85,124,127,51],[86,0,128,8],[86,19,128,15],[86,24,128,20,"_timespans"],[86,34,128,15],[86,35,128,31,"key"],[86,39,128,15],[86,40,128,8],[87,0,129,7],[88,0,130,5],[90,0,131,4],[90,13,131,9,"_extras"],[90,20,131,4],[90,23,131,19],[90,25,131,4],[91,0,132,4],[91,13,132,9,"_points"],[91,20,132,4],[91,23,132,19],[91,25,132,4],[93,0,133,4],[93,12,133,8,"PRINT_TO_CONSOLE"],[93,28,133,4],[93,30,133,26],[94,0,134,6],[94,54,134,14],[94,76,134,6],[94,78,134,38],[94,94,134,6],[95,0,135,5],[96,0,136,3],[99,13,138,2],[99,30,138,10],[100,0,139,4],[100,13,139,9,"_closed"],[100,20,139,4],[100,23,139,19],[100,27,139,4],[101,0,140,3],[104,13,142,2],[104,41,142,21],[105,0,143,4],[105,15,143,11,"getCurrentTimestamp"],[105,34,143,30],[105,36,143,4],[106,0,144,3],[109,13,146,2],[109,34,146,14],[110,0,147,4],[110,15,147,11],[110,20,147,16,"_extras"],[110,27,147,4],[111,0,148,3],[114,13,150,2],[114,34,150,14],[115,0,151,4],[115,15,151,11],[115,20,151,16,"_points"],[115,27,151,4],[116,0,152,3],[119,13,154,2],[119,39,154,19],[120,0,155,4],[120,15,155,11],[120,20,155,16,"_pointExtras"],[120,32,155,4],[121,0,156,3],[124,13,158,2],[124,37,158,17],[125,0,159,4],[125,15,159,11],[125,20,159,16,"_timespans"],[125,30,159,4],[126,0,160,3],[129,13,162,2],[129,34,162,14,"key"],[129,37,162,2],[129,39,162,27],[130,0,163,4],[130,15,163,11],[130,16,163,12],[130,17,163,13],[130,22,163,18,"_timespans"],[130,32,163,13],[130,33,163,29,"key"],[130,36,163,13],[130,37,163,4],[131,0,164,3],[134,13,166,2],[134,33,166,13],[135,0,167,4],[135,15,167,11],[135,20,167,16,"_closed"],[135,27,167,4],[136,0,168,3],[139,13,170,2],[139,38,170,18],[140,0,171,4],[140,12,171,8,"PRINT_TO_CONSOLE"],[140,28,171,4],[140,30,171,26],[141,0,173,6],[141,15,173,11],[141,19,173,17,"key"],[141,24,173,6],[141,28,173,24],[141,33,173,29,"_timespans"],[141,43,173,6],[141,45,173,41],[142,0,173,41],[144,0,174,8],[144,16,174,12],[144,48,174,17,"_timespans"],[144,58,174,12],[144,59,174,28,"key"],[144,64,174,12],[144,109,174,34,"totalTime"],[144,118,174,12],[144,123,174,47],[144,127,174,8],[144,129,174,53],[145,0,175,10],[145,58,175,18,"key"],[145,63,175,21],[145,66,175,24],[145,70,175,18],[145,73,175,31],[145,78,175,36,"_timespans"],[145,88,175,31],[145,89,175,47,"key"],[145,94,175,31],[145,96,175,52,"totalTime"],[145,105,175,18],[145,108,175,64],[145,112,175,10],[146,0,176,9],[147,0,177,7],[149,0,180,6],[149,54,180,14],[149,59,180,19,"_extras"],[149,66,180,6],[151,0,183,6],[151,15,183,11],[151,19,183,17,"key"],[151,24,183,6],[151,28,183,24],[151,33,183,29,"_points"],[151,40,183,6],[151,42,183,38],[152,0,184,8],[152,16,184,12],[152,21,184,17,"_points"],[152,28,184,12],[152,29,184,25,"key"],[152,34,184,12],[152,39,184,33],[152,43,184,8],[152,45,184,39],[153,0,185,10],[153,58,185,18,"key"],[153,63,185,21],[153,66,185,24],[153,70,185,18],[153,73,185,31],[153,78,185,36,"_points"],[153,85,185,31],[153,86,185,44,"key"],[153,91,185,31],[153,92,185,18],[153,95,185,51],[153,99,185,10],[154,0,186,9],[155,0,187,7],[156,0,188,5],[157,0,189,3],[160,13,191,2],[160,32,192,4,"key"],[160,35,191,2],[160,37,195,4],[161,0,195,4],[161,12,193,4,"timestamp"],[161,21,195,4],[161,92,193,25,"getCurrentTimestamp"],[161,111,193,44],[161,113,195,4],[162,0,195,4],[162,12,194,4,"extras"],[162,18,195,4],[164,0,196,4],[164,12,196,8],[164,17,196,13,"_closed"],[164,24,196,4],[164,26,196,22],[165,0,197,6],[165,14,197,10,"PRINT_TO_CONSOLE"],[165,30,197,26],[165,34,197,30,"__DEV__"],[165,41,197,6],[165,43,197,39],[166,0,198,8],[166,56,198,16],[166,110,198,8],[166,112,198,72,"key"],[166,115,198,8],[167,0,199,7],[169,0,200,6],[170,0,201,5],[172,0,202,4],[172,12,202,8],[172,17,202,13,"_points"],[172,24,202,8],[172,25,202,21,"key"],[172,28,202,8],[172,33,202,29],[172,37,202,4],[172,39,202,35],[173,0,203,6],[173,14,203,10,"PRINT_TO_CONSOLE"],[173,30,203,26],[173,34,203,30,"__DEV__"],[173,41,203,6],[173,43,203,39],[174,0,204,8],[174,56,205,10],[174,133,204,8],[174,135,206,10,"key"],[174,138,204,8],[175,0,208,7],[177,0,209,6],[178,0,210,5],[180,0,211,4],[180,13,211,9,"_points"],[180,20,211,4],[180,21,211,17,"key"],[180,24,211,4],[180,28,211,24,"timestamp"],[180,37,211,4],[182,0,212,4],[182,12,212,8,"extras"],[182,18,212,4],[182,20,212,16],[183,0,213,6],[183,15,213,11,"_pointExtras"],[183,27,213,6],[183,28,213,24,"key"],[183,31,213,6],[183,35,213,31,"extras"],[183,41,213,6],[184,0,214,5],[185,0,215,3],[188,13,217,2],[188,34,217,14,"key"],[188,37,217,2],[188,39,217,40],[189,0,218,4],[189,12,218,10,"value"],[189,17,218,15],[189,20,218,18],[189,25,218,23,"_extras"],[189,32,218,18],[189,33,218,31,"key"],[189,36,218,18],[189,37,218,4],[190,0,219,4],[190,15,219,11],[190,20,219,16,"_extras"],[190,27,219,11],[190,28,219,24,"key"],[190,31,219,11],[190,32,219,4],[191,0,220,4],[191,15,220,11,"value"],[191,20,220,4],[192,0,221,3],[195,13,223,2],[195,31,223,11,"key"],[195,34,223,2],[195,36,223,24,"value"],[195,41,223,2],[195,43,223,43],[196,0,224,4],[196,12,224,8],[196,17,224,13,"_closed"],[196,24,224,4],[196,26,224,22],[197,0,225,6],[197,14,225,10,"PRINT_TO_CONSOLE"],[197,30,225,26],[197,34,225,30,"__DEV__"],[197,41,225,6],[197,43,225,39],[198,0,226,8],[198,56,226,16],[198,109,226,8],[198,111,226,71,"key"],[198,114,226,8],[199,0,227,7],[201,0,228,6],[202,0,229,5],[204,0,231,4],[204,12,231,8],[204,17,231,13,"_extras"],[204,24,231,8],[204,25,231,21,"hasOwnProperty"],[204,39,231,8],[204,40,231,36,"key"],[204,43,231,8],[204,44,231,4],[204,46,231,42],[205,0,232,6],[205,14,232,10,"PRINT_TO_CONSOLE"],[205,30,232,26],[205,34,232,30,"__DEV__"],[205,41,232,6],[205,43,232,39],[206,0,233,8],[206,56,234,10],[206,124,233,8],[206,126,235,10],[207,0,235,11,"key"],[207,14,235,11,"key"],[207,17,235,14],[207,19,235,11,"key"],[207,22,235,10],[208,0,235,16,"currentValue"],[208,14,235,16,"currentValue"],[208,26,235,28],[208,28,235,30],[208,33,235,35,"_extras"],[208,40,235,30],[208,41,235,43,"key"],[208,44,235,30],[208,45,235,10],[209,0,235,49,"attemptedValue"],[209,14,235,49,"attemptedValue"],[209,28,235,63],[209,30,235,65,"value"],[210,0,235,10],[210,13,233,8],[211,0,237,7],[213,0,238,6],[214,0,239,5],[216,0,240,4],[216,13,240,9,"_extras"],[216,20,240,4],[216,21,240,17,"key"],[216,24,240,4],[216,28,240,24,"value"],[216,33,240,4],[217,0,241,3],[220,13,243,2],[220,36,244,4,"key"],[220,39,243,2],[220,41,247,4],[221,0,247,4],[221,12,245,4,"timestamp"],[221,21,247,4],[221,92,245,25,"getCurrentTimestamp"],[221,111,245,44],[221,113,247,4],[222,0,247,4],[222,12,246,4,"extras"],[222,18,247,4],[224,0,248,4],[224,12,248,8],[224,17,248,13,"_closed"],[224,24,248,4],[224,26,248,22],[225,0,249,6],[225,14,249,10,"PRINT_TO_CONSOLE"],[225,30,249,26],[225,34,249,30,"__DEV__"],[225,41,249,6],[225,43,249,39],[226,0,250,8],[226,56,251,10],[226,114,250,8],[226,116,252,10,"key"],[226,119,250,8],[227,0,254,7],[229,0,255,6],[230,0,256,5],[232,0,258,4],[232,12,258,8],[232,17,258,13,"_timespans"],[232,27,258,8],[232,28,258,24,"key"],[232,31,258,8],[232,32,258,4],[232,34,258,30],[233,0,259,6],[233,14,259,10,"PRINT_TO_CONSOLE"],[233,30,259,26],[233,34,259,30,"__DEV__"],[233,41,259,6],[233,43,259,39],[234,0,260,8],[234,56,261,10],[234,128,260,8],[234,130,262,10,"key"],[234,133,260,8],[235,0,264,7],[237,0,265,6],[238,0,266,5],[240,0,268,4],[240,13,268,9,"_timespans"],[240,23,268,4],[240,24,268,20,"key"],[240,27,268,4],[240,31,268,27],[241,0,269,6,"startTime"],[241,10,269,6,"startTime"],[241,19,269,15],[241,21,269,17,"timestamp"],[241,30,268,27],[242,0,270,6,"startExtras"],[242,10,270,6,"startExtras"],[242,21,270,17],[242,23,270,19,"extras"],[243,0,268,27],[243,9,268,4],[244,0,272,4,"_cookies"],[244,8,272,4,"_cookies"],[244,16,272,12],[244,17,272,13,"key"],[244,20,272,12],[244,21,272,4],[244,24,272,20],[244,82,272,29,"beginAsyncEvent"],[244,97,272,20],[244,98,272,45,"key"],[244,101,272,20],[244,102,272,4],[246,0,273,4],[246,12,273,8,"PRINT_TO_CONSOLE"],[246,28,273,4],[246,30,273,26],[247,0,274,6],[247,54,274,14],[247,76,274,6],[247,78,274,38],[247,90,274,50,"key"],[247,93,274,6],[248,0,275,5],[249,0,276,3],[252,13,278,2],[252,35,279,4,"key"],[252,38,278,2],[252,40,282,4],[253,0,282,4],[253,12,280,4,"timestamp"],[253,21,282,4],[253,92,280,25,"getCurrentTimestamp"],[253,111,280,44],[253,113,282,4],[254,0,282,4],[254,12,281,4,"extras"],[254,18,282,4],[256,0,283,4],[256,12,283,8],[256,17,283,13,"_closed"],[256,24,283,4],[256,26,283,22],[257,0,284,6],[257,14,284,10,"PRINT_TO_CONSOLE"],[257,30,284,26],[257,34,284,30,"__DEV__"],[257,41,284,6],[257,43,284,39],[258,0,285,8],[258,56,285,16],[258,113,285,8],[258,115,285,75,"key"],[258,118,285,8],[259,0,286,7],[261,0,287,6],[262,0,288,5],[264,0,290,4],[264,12,290,10,"timespan"],[264,20,290,18],[264,23,290,21],[264,28,290,26,"_timespans"],[264,38,290,21],[264,39,290,37,"key"],[264,42,290,21],[264,43,290,4],[266,0,291,4],[266,12,291,8],[266,13,291,9,"timespan"],[266,21,291,8],[266,25,291,21,"timespan"],[266,33,291,29],[266,34,291,30,"startTime"],[266,43,291,21],[266,47,291,43],[266,51,291,4],[266,53,291,49],[267,0,292,6],[267,14,292,10,"PRINT_TO_CONSOLE"],[267,30,292,26],[267,34,292,30,"__DEV__"],[267,41,292,6],[267,43,292,39],[268,0,293,8],[268,56,294,10],[268,127,293,8],[268,129,295,10,"key"],[268,132,293,8],[269,0,297,7],[271,0,298,6],[272,0,299,5],[274,0,300,4],[274,12,300,8,"timespan"],[274,20,300,16],[274,21,300,17,"endTime"],[274,28,300,8],[274,32,300,28],[274,36,300,4],[274,38,300,34],[275,0,301,6],[275,14,301,10,"PRINT_TO_CONSOLE"],[275,30,301,26],[275,34,301,30,"__DEV__"],[275,41,301,6],[275,43,301,39],[276,0,302,8],[276,56,303,10],[276,129,302,8],[276,131,304,10,"key"],[276,134,302,8],[277,0,306,7],[279,0,307,6],[280,0,308,5],[282,0,310,4,"timespan"],[282,8,310,4,"timespan"],[282,16,310,12],[282,17,310,13,"endExtras"],[282,26,310,4],[282,29,310,25,"extras"],[282,35,310,4],[283,0,311,4,"timespan"],[283,8,311,4,"timespan"],[283,16,311,12],[283,17,311,13,"endTime"],[283,24,311,4],[283,27,311,23,"timestamp"],[283,36,311,4],[284,0,312,4,"timespan"],[284,8,312,4,"timespan"],[284,16,312,12],[284,17,312,13,"totalTime"],[284,26,312,4],[284,29,312,25,"timespan"],[284,37,312,33],[284,38,312,34,"endTime"],[284,45,312,25],[284,49,312,45,"timespan"],[284,57,312,53],[284,58,312,54,"startTime"],[284,67,312,45],[284,71,312,67],[284,72,312,25],[284,73,312,4],[286,0,313,4],[286,12,313,8,"PRINT_TO_CONSOLE"],[286,28,313,4],[286,30,313,26],[287,0,314,6],[287,54,314,14],[287,76,314,6],[287,78,314,38],[287,88,314,48,"key"],[287,91,314,6],[288,0,315,5],[290,0,317,4],[290,12,317,8,"_cookies"],[290,20,317,16],[290,21,317,17,"key"],[290,24,317,16],[290,25,317,8],[290,29,317,25],[290,33,317,4],[290,35,317,31],[291,0,318,6],[291,68,318,15,"endAsyncEvent"],[291,81,318,6],[291,82,318,29,"key"],[291,85,318,6],[291,87,318,34,"_cookies"],[291,95,318,42],[291,96,318,43,"key"],[291,99,318,42],[291,100,318,6],[293,0,319,6],[293,17,319,13,"_cookies"],[293,25,319,21],[293,26,319,22,"key"],[293,29,319,21],[293,30,319,6],[294,0,320,5],[295,0,321,3],[300,0,329,15],[300,11,329,24,"createPerformanceLogger"],[300,34,329,15],[300,37,329,70],[301,0,330,2],[301,11,330,9],[301,15,330,13,"PerformanceLogger"],[301,32,330,9],[301,34,330,2],[302,0,331,1]],"functionMap":{"names":["<global>","PerformanceLogger","PerformanceLogger#addTimespan","PerformanceLogger#append","PerformanceLogger#clear","PerformanceLogger#clearCompleted","PerformanceLogger#close","PerformanceLogger#currentTimestamp","PerformanceLogger#getExtras","PerformanceLogger#getPoints","PerformanceLogger#getPointExtras","PerformanceLogger#getTimespans","PerformanceLogger#hasTimespan","PerformanceLogger#isClosed","PerformanceLogger#logEverything","PerformanceLogger#markPoint","PerformanceLogger#removeExtra","PerformanceLogger#setExtra","PerformanceLogger#startTimespan","PerformanceLogger#stopTimespan","createPerformanceLogger"],"mappings":"AAA;AC+D;ECO;GD8B;EEE;GFW;EGE;GHO;EIE;GJW;EKE;GLE;EME;GNE;EOE;GPE;EQE;GRE;ESE;GTE;EUE;GVE;EWE;GXE;EYE;GZE;EaE;GbmB;EcE;GdwB;EeE;GfI;EgBE;GhBkB;EiBE;GjBiC;EkBE;GlB2C;CDC;eoBO;CpBE"}},"type":"js/module"}]}