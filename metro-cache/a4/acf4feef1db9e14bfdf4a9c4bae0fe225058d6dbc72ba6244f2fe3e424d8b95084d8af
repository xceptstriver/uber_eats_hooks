{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0},"end":{"line":13,"column":78}}]}},{"name":"../../Core/Devtools/symbolicateStackTrace","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0},"end":{"line":13,"column":78}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.deleteStack = deleteStack;\n  exports.symbolicate = symbolicate;\n\n  var _symbolicateStackTrace = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"../../Core/Devtools/symbolicateStackTrace\"));\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  var cache = new Map();\n\n  var sanitize = function sanitize(_ref) {\n    var maybeStack = _ref.stack,\n        codeFrame = _ref.codeFrame;\n\n    if (!Array.isArray(maybeStack)) {\n      throw new Error('Expected stack to be an array.');\n    }\n\n    var stack = [];\n\n    for (var _iterator = _createForOfIteratorHelperLoose(maybeStack), _step; !(_step = _iterator()).done;) {\n      var maybeFrame = _step.value;\n      var collapse = false;\n\n      if ('collapse' in maybeFrame) {\n        if (typeof maybeFrame.collapse !== 'boolean') {\n          throw new Error('Expected stack frame `collapse` to be a boolean.');\n        }\n\n        collapse = maybeFrame.collapse;\n      }\n\n      stack.push({\n        column: maybeFrame.column,\n        file: maybeFrame.file,\n        lineNumber: maybeFrame.lineNumber,\n        methodName: maybeFrame.methodName,\n        collapse: collapse\n      });\n    }\n\n    return {\n      stack: stack,\n      codeFrame: codeFrame\n    };\n  };\n\n  function deleteStack(stack) {\n    cache.delete(stack);\n  }\n\n  function symbolicate(stack) {\n    var promise = cache.get(stack);\n\n    if (promise == null) {\n      promise = (0, _symbolicateStackTrace.default)(stack).then(sanitize);\n      cache.set(stack, promise);\n    }\n\n    return promise;\n  }\n});","lineCount":71,"map":[[2,0,11,0],[10,0,13,0],[18,0,20,0],[18,6,20,6,"cache"],[18,11,20,56],[18,14,20,59],[18,18,20,63,"Map"],[18,21,20,59],[18,23,20,0],[20,0,25,0],[20,6,25,6,"sanitize"],[20,14,25,14],[20,17,25,17],[20,26,25,6,"sanitize"],[20,34,25,17],[20,41,28,54],[21,0,28,54],[21,8,26,9,"maybeStack"],[21,18,28,54],[21,26,26,2,"stack"],[21,31,28,54],[22,0,28,54],[22,8,27,2,"codeFrame"],[22,17,28,54],[22,25,27,2,"codeFrame"],[22,34,28,54],[24,0,29,2],[24,8,29,6],[24,9,29,7,"Array"],[24,14,29,12],[24,15,29,13,"isArray"],[24,22,29,7],[24,23,29,21,"maybeStack"],[24,33,29,7],[24,34,29,2],[24,36,29,34],[25,0,30,4],[25,12,30,10],[25,16,30,14,"Error"],[25,21,30,10],[25,22,30,20],[25,54,30,10],[25,55,30,4],[26,0,31,3],[28,0,32,2],[28,8,32,8,"stack"],[28,13,32,13],[28,16,32,16],[28,18,32,2],[30,0,33,2],[30,57,33,27,"maybeStack"],[30,67,33,2],[30,107,33,39],[31,0,33,39],[31,10,33,13,"maybeFrame"],[31,20,33,39],[32,0,34,4],[32,10,34,8,"collapse"],[32,18,34,16],[32,21,34,19],[32,26,34,4],[34,0,35,4],[34,10,35,8],[34,24,35,22,"maybeFrame"],[34,34,35,4],[34,36,35,34],[35,0,36,6],[35,12,36,10],[35,19,36,17,"maybeFrame"],[35,29,36,27],[35,30,36,28,"collapse"],[35,38,36,10],[35,43,36,41],[35,52,36,6],[35,54,36,52],[36,0,37,8],[36,16,37,14],[36,20,37,18,"Error"],[36,25,37,14],[36,26,37,24],[36,76,37,14],[36,77,37,8],[37,0,38,7],[39,0,39,6,"collapse"],[39,8,39,6,"collapse"],[39,16,39,14],[39,19,39,17,"maybeFrame"],[39,29,39,27],[39,30,39,28,"collapse"],[39,38,39,6],[40,0,40,5],[42,0,41,4,"stack"],[42,6,41,4,"stack"],[42,11,41,9],[42,12,41,10,"push"],[42,16,41,4],[42,17,41,15],[43,0,42,6,"column"],[43,8,42,6,"column"],[43,14,42,12],[43,16,42,14,"maybeFrame"],[43,26,42,24],[43,27,42,25,"column"],[43,33,41,15],[44,0,43,6,"file"],[44,8,43,6,"file"],[44,12,43,10],[44,14,43,12,"maybeFrame"],[44,24,43,22],[44,25,43,23,"file"],[44,29,41,15],[45,0,44,6,"lineNumber"],[45,8,44,6,"lineNumber"],[45,18,44,16],[45,20,44,18,"maybeFrame"],[45,30,44,28],[45,31,44,29,"lineNumber"],[45,41,41,15],[46,0,45,6,"methodName"],[46,8,45,6,"methodName"],[46,18,45,16],[46,20,45,18,"maybeFrame"],[46,30,45,28],[46,31,45,29,"methodName"],[46,41,41,15],[47,0,46,6,"collapse"],[47,8,46,6,"collapse"],[47,16,46,14],[47,18,46,6,"collapse"],[48,0,41,15],[48,7,41,4],[49,0,48,3],[51,0,49,2],[51,11,49,9],[52,0,49,10,"stack"],[52,6,49,10,"stack"],[52,11,49,15],[52,13,49,10,"stack"],[52,18,49,9],[53,0,49,17,"codeFrame"],[53,6,49,17,"codeFrame"],[53,15,49,26],[53,17,49,17,"codeFrame"],[54,0,49,9],[54,5,49,2],[55,0,50,1],[55,3,25,0],[57,0,52,7],[57,11,52,16,"deleteStack"],[57,22,52,7],[57,23,52,28,"stack"],[57,28,52,7],[57,30,52,48],[58,0,53,2,"cache"],[58,4,53,2,"cache"],[58,9,53,7],[58,10,53,8,"delete"],[58,16,53,2],[58,17,53,15,"stack"],[58,22,53,2],[59,0,54,1],[61,0,56,7],[61,11,56,16,"symbolicate"],[61,22,56,7],[61,23,56,28,"stack"],[61,28,56,7],[61,30,56,75],[62,0,57,2],[62,8,57,6,"promise"],[62,15,57,13],[62,18,57,16,"cache"],[62,23,57,21],[62,24,57,22,"get"],[62,27,57,16],[62,28,57,26,"stack"],[62,33,57,16],[62,34,57,2],[64,0,58,2],[64,8,58,6,"promise"],[64,15,58,13],[64,19,58,17],[64,23,58,2],[64,25,58,23],[65,0,59,4,"promise"],[65,6,59,4,"promise"],[65,13,59,11],[65,16,59,14],[65,52,59,36,"stack"],[65,57,59,14],[65,59,59,43,"then"],[65,63,59,14],[65,64,59,48,"sanitize"],[65,72,59,14],[65,73,59,4],[66,0,60,4,"cache"],[66,6,60,4,"cache"],[66,11,60,9],[66,12,60,10,"set"],[66,15,60,4],[66,16,60,14,"stack"],[66,21,60,4],[66,23,60,21,"promise"],[66,30,60,4],[67,0,61,3],[69,0,63,2],[69,11,63,9,"promise"],[69,18,63,2],[70,0,64,1]],"functionMap":{"names":["<global>","sanitize","deleteStack","symbolicate"],"mappings":"AAA;iBCwB;CDyB;OEE;CFE;OGE;CHQ"}},"type":"js/module"}]}