{"dependencies":[{"name":"is-arrayish","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":6},"end":{"line":14,"column":21}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var concat = Array.prototype.concat;\n  var slice = Array.prototype.slice;\n\n  var swizzle = module.exports = function swizzle(args) {\n    var results = [];\n\n    for (var i = 0, len = args.length; i < len; i++) {\n      var arg = args[i];\n\n      if (_$$_REQUIRE(_dependencyMap[0], \"is-arrayish\")(arg)) {\n        results = concat.call(results, slice.call(arg));\n      } else {\n        results.push(arg);\n      }\n    }\n\n    return results;\n  };\n\n  swizzle.wrap = function (fn) {\n    return function () {\n      return fn(swizzle(arguments));\n    };\n  };\n});","lineCount":28,"map":[[2,0,1,0],[4,0,5,0],[4,6,5,4,"concat"],[4,12,5,10],[4,15,5,13,"Array"],[4,20,5,18],[4,21,5,19,"prototype"],[4,30,5,13],[4,31,5,29,"concat"],[4,37,5,0],[5,0,6,0],[5,6,6,4,"slice"],[5,11,6,9],[5,14,6,12,"Array"],[5,19,6,17],[5,20,6,18,"prototype"],[5,29,6,12],[5,30,6,28,"slice"],[5,35,6,0],[7,0,8,0],[7,6,8,4,"swizzle"],[7,13,8,11],[7,16,8,14,"module"],[7,22,8,20],[7,23,8,21,"exports"],[7,30,8,14],[7,33,8,31],[7,42,8,40,"swizzle"],[7,49,8,31],[7,50,8,48,"args"],[7,54,8,31],[7,56,8,54],[8,0,9,1],[8,8,9,5,"results"],[8,15,9,12],[8,18,9,15],[8,20,9,1],[10,0,11,1],[10,9,11,6],[10,13,11,10,"i"],[10,14,11,11],[10,17,11,14],[10,18,11,6],[10,20,11,17,"len"],[10,23,11,20],[10,26,11,23,"args"],[10,30,11,27],[10,31,11,28,"length"],[10,37,11,1],[10,39,11,36,"i"],[10,40,11,37],[10,43,11,40,"len"],[10,46,11,1],[10,48,11,45,"i"],[10,49,11,46],[10,51,11,1],[10,53,11,50],[11,0,12,2],[11,10,12,6,"arg"],[11,13,12,9],[11,16,12,12,"args"],[11,20,12,16],[11,21,12,17,"i"],[11,22,12,16],[11,23,12,2],[13,0,14,2],[13,10,14,6],[13,56,14,17,"arg"],[13,59,14,6],[13,60,14,2],[13,62,14,23],[14,0,16,3,"results"],[14,8,16,3,"results"],[14,15,16,10],[14,18,16,13,"concat"],[14,24,16,19],[14,25,16,20,"call"],[14,29,16,13],[14,30,16,25,"results"],[14,37,16,13],[14,39,16,34,"slice"],[14,44,16,39],[14,45,16,40,"call"],[14,49,16,34],[14,50,16,45,"arg"],[14,53,16,34],[14,54,16,13],[14,55,16,3],[15,0,17,3],[15,7,14,2],[15,13,17,9],[16,0,18,3,"results"],[16,8,18,3,"results"],[16,15,18,10],[16,16,18,11,"push"],[16,20,18,3],[16,21,18,16,"arg"],[16,24,18,3],[17,0,19,3],[18,0,20,2],[20,0,22,1],[20,11,22,8,"results"],[20,18,22,1],[21,0,23,1],[21,3,8,0],[23,0,25,0,"swizzle"],[23,2,25,0,"swizzle"],[23,9,25,7],[23,10,25,8,"wrap"],[23,14,25,0],[23,17,25,15],[23,27,25,25,"fn"],[23,29,25,15],[23,31,25,29],[24,0,26,1],[24,11,26,8],[24,23,26,20],[25,0,27,2],[25,13,27,9,"fn"],[25,15,27,11],[25,16,27,12,"swizzle"],[25,23,27,19],[25,24,27,20,"arguments"],[25,33,27,19],[25,34,27,11],[25,35,27,2],[26,0,28,2],[26,5,26,1],[27,0,29,1],[27,3,25,0]],"functionMap":{"names":["<global>","swizzle","swizzle.wrap","<anonymous>"],"mappings":"AAA;+BCO;CDe;eEE;QCC;EDE;CFC"}},"type":"js/module"}]}