{"dependencies":[{"name":"./core.js","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":0},"end":{"line":7,"column":24}},{"start":{"line":19,"column":10},"end":{"line":19,"column":33}},{"start":{"line":19,"column":22},"end":{"line":19,"column":32}},{"start":{"line":24,"column":0},"end":{"line":24,"column":15}},{"start":{"line":25,"column":6},"end":{"line":25,"column":30}},{"start":{"line":38,"column":15},"end":{"line":38,"column":44}},{"start":{"line":41,"column":13},"end":{"line":43,"column":8}},{"start":{"line":61,"column":0},"end":{"line":61,"column":11}},{"start":{"line":64,"column":9},"end":{"line":98,"column":4}},{"start":{"line":69,"column":12},"end":{"line":69,"column":34}},{"start":{"line":69,"column":51},"end":{"line":69,"column":68}},{"start":{"line":82,"column":20},"end":{"line":82,"column":47}},{"start":{"line":101,"column":0},"end":{"line":101,"column":14}},{"start":{"line":102,"column":9},"end":{"line":104,"column":4}},{"start":{"line":107,"column":0},"end":{"line":107,"column":12}},{"start":{"line":108,"column":9},"end":{"line":112,"column":4}},{"start":{"line":110,"column":6},"end":{"line":110,"column":21}},{"start":{"line":117,"column":0},"end":{"line":117,"column":17}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  module.exports = _$$_REQUIRE(_dependencyMap[0], \"./core.js\");\n  var TRUE = valuePromise(true);\n  var FALSE = valuePromise(false);\n  var NULL = valuePromise(null);\n  var UNDEFINED = valuePromise(undefined);\n  var ZERO = valuePromise(0);\n  var EMPTYSTRING = valuePromise('');\n\n  function valuePromise(value) {\n    var p = new (_$$_REQUIRE(_dependencyMap[0], \"./core.js\"))(_$$_REQUIRE(_dependencyMap[0], \"./core.js\")._0);\n    p._V = 1;\n    p._W = value;\n    return p;\n  }\n\n  _$$_REQUIRE(_dependencyMap[0], \"./core.js\").resolve = function (value) {\n    if (value instanceof _$$_REQUIRE(_dependencyMap[0], \"./core.js\")) return value;\n    if (value === null) return NULL;\n    if (value === undefined) return UNDEFINED;\n    if (value === true) return TRUE;\n    if (value === false) return FALSE;\n    if (value === 0) return ZERO;\n    if (value === '') return EMPTYSTRING;\n\n    if (typeof value === 'object' || typeof value === 'function') {\n      try {\n        var then = value.then;\n\n        if (typeof then === 'function') {\n          return new (_$$_REQUIRE(_dependencyMap[0], \"./core.js\"))(then.bind(value));\n        }\n      } catch (ex) {\n        return new (_$$_REQUIRE(_dependencyMap[0], \"./core.js\"))(function (resolve, reject) {\n          reject(ex);\n        });\n      }\n    }\n\n    return valuePromise(value);\n  };\n\n  var _iterableToArray = function iterableToArray(iterable) {\n    if (typeof Array.from === 'function') {\n      _iterableToArray = Array.from;\n      return Array.from(iterable);\n    }\n\n    _iterableToArray = function iterableToArray(x) {\n      return Array.prototype.slice.call(x);\n    };\n\n    return Array.prototype.slice.call(iterable);\n  };\n\n  _$$_REQUIRE(_dependencyMap[0], \"./core.js\").all = function (arr) {\n    var args = _iterableToArray(arr);\n\n    return new (_$$_REQUIRE(_dependencyMap[0], \"./core.js\"))(function (resolve, reject) {\n      if (args.length === 0) return resolve([]);\n      var remaining = args.length;\n\n      function res(i, val) {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          if (val instanceof _$$_REQUIRE(_dependencyMap[0], \"./core.js\") && val.then === _$$_REQUIRE(_dependencyMap[0], \"./core.js\").prototype.then) {\n            while (val._V === 3) {\n              val = val._W;\n            }\n\n            if (val._V === 1) return res(i, val._W);\n            if (val._V === 2) reject(val._W);\n            val.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          } else {\n            var then = val.then;\n\n            if (typeof then === 'function') {\n              var p = new (_$$_REQUIRE(_dependencyMap[0], \"./core.js\"))(then.bind(val));\n              p.then(function (val) {\n                res(i, val);\n              }, reject);\n              return;\n            }\n          }\n        }\n\n        args[i] = val;\n\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      }\n\n      for (var i = 0; i < args.length; i++) {\n        res(i, args[i]);\n      }\n    });\n  };\n\n  _$$_REQUIRE(_dependencyMap[0], \"./core.js\").reject = function (value) {\n    return new (_$$_REQUIRE(_dependencyMap[0], \"./core.js\"))(function (resolve, reject) {\n      reject(value);\n    });\n  };\n\n  _$$_REQUIRE(_dependencyMap[0], \"./core.js\").race = function (values) {\n    return new (_$$_REQUIRE(_dependencyMap[0], \"./core.js\"))(function (resolve, reject) {\n      _iterableToArray(values).forEach(function (value) {\n        _$$_REQUIRE(_dependencyMap[0], \"./core.js\").resolve(value).then(resolve, reject);\n      });\n    });\n  };\n\n  _$$_REQUIRE(_dependencyMap[0], \"./core.js\").prototype['catch'] = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n});","lineCount":121,"map":[[2,0,1,0],[4,0,7,0,"module"],[4,2,7,0,"module"],[4,8,7,6],[4,9,7,7,"exports"],[4,16,7,0],[5,0,11,0],[5,6,11,4,"TRUE"],[5,10,11,8],[5,13,11,11,"valuePromise"],[5,25,11,23],[5,26,11,24],[5,30,11,23],[5,31,11,0],[6,0,12,0],[6,6,12,4,"FALSE"],[6,11,12,9],[6,14,12,12,"valuePromise"],[6,26,12,24],[6,27,12,25],[6,32,12,24],[6,33,12,0],[7,0,13,0],[7,6,13,4,"NULL"],[7,10,13,8],[7,13,13,11,"valuePromise"],[7,25,13,23],[7,26,13,24],[7,30,13,23],[7,31,13,0],[8,0,14,0],[8,6,14,4,"UNDEFINED"],[8,15,14,13],[8,18,14,16,"valuePromise"],[8,30,14,28],[8,31,14,29,"undefined"],[8,40,14,28],[8,41,14,0],[9,0,15,0],[9,6,15,4,"ZERO"],[9,10,15,8],[9,13,15,11,"valuePromise"],[9,25,15,23],[9,26,15,24],[9,27,15,23],[9,28,15,0],[10,0,16,0],[10,6,16,4,"EMPTYSTRING"],[10,17,16,15],[10,20,16,18,"valuePromise"],[10,32,16,30],[10,33,16,31],[10,35,16,30],[10,36,16,0],[12,0,18,0],[12,11,18,9,"valuePromise"],[12,23,18,0],[12,24,18,22,"value"],[12,29,18,0],[12,31,18,29],[13,0,19,2],[13,8,19,6,"p"],[13,9,19,7],[13,12,19,10],[13,62,19,22],[13,106,19,30,"_0"],[13,108,19,10],[13,109,19,2],[14,0,20,2,"p"],[14,4,20,2,"p"],[14,5,20,3],[14,6,20,4,"_V"],[14,8,20,2],[14,11,20,9],[14,12,20,2],[15,0,21,2,"p"],[15,4,21,2,"p"],[15,5,21,3],[15,6,21,4,"_W"],[15,8,21,2],[15,11,21,9,"value"],[15,16,21,2],[16,0,22,2],[16,11,22,9,"p"],[16,12,22,2],[17,0,23,1],[19,0,24,0],[19,46,24,8,"resolve"],[19,53,24,0],[19,56,24,18],[19,66,24,28,"value"],[19,71,24,18],[19,73,24,35],[20,0,25,2],[20,8,25,6,"value"],[20,13,25,11],[20,68,25,2],[20,70,25,32],[20,77,25,39,"value"],[20,82,25,32],[21,0,27,2],[21,8,27,6,"value"],[21,13,27,11],[21,18,27,16],[21,22,27,2],[21,24,27,22],[21,31,27,29,"NULL"],[21,35,27,22],[22,0,28,2],[22,8,28,6,"value"],[22,13,28,11],[22,18,28,16,"undefined"],[22,27,28,2],[22,29,28,27],[22,36,28,34,"UNDEFINED"],[22,45,28,27],[23,0,29,2],[23,8,29,6,"value"],[23,13,29,11],[23,18,29,16],[23,22,29,2],[23,24,29,22],[23,31,29,29,"TRUE"],[23,35,29,22],[24,0,30,2],[24,8,30,6,"value"],[24,13,30,11],[24,18,30,16],[24,23,30,2],[24,25,30,23],[24,32,30,30,"FALSE"],[24,37,30,23],[25,0,31,2],[25,8,31,6,"value"],[25,13,31,11],[25,18,31,16],[25,19,31,2],[25,21,31,19],[25,28,31,26,"ZERO"],[25,32,31,19],[26,0,32,2],[26,8,32,6,"value"],[26,13,32,11],[26,18,32,16],[26,20,32,2],[26,22,32,20],[26,29,32,27,"EMPTYSTRING"],[26,40,32,20],[28,0,34,2],[28,8,34,6],[28,15,34,13,"value"],[28,20,34,6],[28,25,34,23],[28,33,34,6],[28,37,34,35],[28,44,34,42,"value"],[28,49,34,35],[28,54,34,52],[28,64,34,2],[28,66,34,64],[29,0,35,4],[29,10,35,8],[30,0,36,6],[30,12,36,10,"then"],[30,16,36,14],[30,19,36,17,"value"],[30,24,36,22],[30,25,36,23,"then"],[30,29,36,6],[32,0,37,6],[32,12,37,10],[32,19,37,17,"then"],[32,23,37,10],[32,28,37,26],[32,38,37,6],[32,40,37,38],[33,0,38,8],[33,17,38,15],[33,67,38,27,"then"],[33,71,38,31],[33,72,38,32,"bind"],[33,76,38,27],[33,77,38,37,"value"],[33,82,38,27],[33,83,38,15],[33,84,38,8],[34,0,39,7],[35,0,40,5],[35,7,35,4],[35,8,40,6],[35,15,40,13,"ex"],[35,17,40,6],[35,19,40,17],[36,0,41,6],[36,15,41,13],[36,65,41,25],[36,75,41,35,"resolve"],[36,82,41,25],[36,84,41,44,"reject"],[36,90,41,25],[36,92,41,52],[37,0,42,8,"reject"],[37,10,42,8,"reject"],[37,16,42,14],[37,17,42,15,"ex"],[37,19,42,14],[37,20,42,8],[38,0,43,7],[38,9,41,13],[38,10,41,6],[39,0,44,5],[40,0,45,3],[42,0,46,2],[42,11,46,9,"valuePromise"],[42,23,46,21],[42,24,46,22,"value"],[42,29,46,21],[42,30,46,2],[43,0,47,1],[43,3,24,0],[45,0,49,0],[45,6,49,4,"iterableToArray"],[45,22,49,19],[45,25,49,22],[45,50,49,32,"iterable"],[45,58,49,22],[45,60,49,42],[46,0,50,2],[46,8,50,6],[46,15,50,13,"Array"],[46,20,50,18],[46,21,50,19,"from"],[46,25,50,6],[46,30,50,28],[46,40,50,2],[46,42,50,40],[47,0,52,4,"iterableToArray"],[47,6,52,4,"iterableToArray"],[47,22,52,19],[47,25,52,22,"Array"],[47,30,52,27],[47,31,52,28,"from"],[47,35,52,4],[48,0,53,4],[48,13,53,11,"Array"],[48,18,53,16],[48,19,53,17,"from"],[48,23,53,11],[48,24,53,22,"iterable"],[48,32,53,11],[48,33,53,4],[49,0,54,3],[51,0,57,2,"iterableToArray"],[51,4,57,2,"iterableToArray"],[51,20,57,17],[51,23,57,20],[51,48,57,30,"x"],[51,49,57,20],[51,51,57,33],[52,0,57,35],[52,13,57,42,"Array"],[52,18,57,47],[52,19,57,48,"prototype"],[52,28,57,42],[52,29,57,58,"slice"],[52,34,57,42],[52,35,57,64,"call"],[52,39,57,42],[52,40,57,69,"x"],[52,41,57,42],[52,42,57,35],[53,0,57,74],[53,5,57,2],[55,0,58,2],[55,11,58,9,"Array"],[55,16,58,14],[55,17,58,15,"prototype"],[55,26,58,9],[55,27,58,25,"slice"],[55,32,58,9],[55,33,58,31,"call"],[55,37,58,9],[55,38,58,36,"iterable"],[55,46,58,9],[55,47,58,2],[56,0,59,1],[56,3,49,0],[58,0,61,0],[58,46,61,8,"all"],[58,49,61,0],[58,52,61,14],[58,62,61,24,"arr"],[58,65,61,14],[58,67,61,29],[59,0,62,2],[59,8,62,6,"args"],[59,12,62,10],[59,15,62,13,"iterableToArray"],[59,31,62,28],[59,32,62,29,"arr"],[59,35,62,28],[59,36,62,2],[61,0,64,2],[61,11,64,9],[61,61,64,21],[61,71,64,31,"resolve"],[61,78,64,21],[61,80,64,40,"reject"],[61,86,64,21],[61,88,64,48],[62,0,65,4],[62,10,65,8,"args"],[62,14,65,12],[62,15,65,13,"length"],[62,21,65,8],[62,26,65,24],[62,27,65,4],[62,29,65,27],[62,36,65,34,"resolve"],[62,43,65,41],[62,44,65,42],[62,46,65,41],[62,47,65,27],[63,0,66,4],[63,10,66,8,"remaining"],[63,19,66,17],[63,22,66,20,"args"],[63,26,66,24],[63,27,66,25,"length"],[63,33,66,4],[65,0,67,4],[65,15,67,13,"res"],[65,18,67,4],[65,19,67,17,"i"],[65,20,67,4],[65,22,67,20,"val"],[65,25,67,4],[65,27,67,25],[66,0,68,6],[66,12,68,10,"val"],[66,15,68,13],[66,20,68,18],[66,27,68,25,"val"],[66,30,68,18],[66,35,68,33],[66,43,68,18],[66,47,68,45],[66,54,68,52,"val"],[66,57,68,45],[66,62,68,60],[66,72,68,13],[66,73,68,6],[66,75,68,73],[67,0,69,8],[67,14,69,12,"val"],[67,17,69,15],[67,72,69,12],[67,76,69,38,"val"],[67,79,69,41],[67,80,69,42,"then"],[67,84,69,38],[67,89,69,51],[67,133,69,59,"prototype"],[67,142,69,51],[67,143,69,69,"then"],[67,147,69,8],[67,149,69,75],[68,0,70,10],[68,19,70,17,"val"],[68,22,70,20],[68,23,70,21,"_V"],[68,25,70,17],[68,30,70,28],[68,31,70,10],[68,33,70,31],[69,0,71,12,"val"],[69,14,71,12,"val"],[69,17,71,15],[69,20,71,18,"val"],[69,23,71,21],[69,24,71,22,"_W"],[69,26,71,12],[70,0,72,11],[72,0,73,10],[72,16,73,14,"val"],[72,19,73,17],[72,20,73,18,"_V"],[72,22,73,14],[72,27,73,25],[72,28,73,10],[72,30,73,28],[72,37,73,35,"res"],[72,40,73,38],[72,41,73,39,"i"],[72,42,73,38],[72,44,73,42,"val"],[72,47,73,45],[72,48,73,46,"_W"],[72,50,73,38],[72,51,73,28],[73,0,74,10],[73,16,74,14,"val"],[73,19,74,17],[73,20,74,18,"_V"],[73,22,74,14],[73,27,74,25],[73,28,74,10],[73,30,74,28,"reject"],[73,36,74,34],[73,37,74,35,"val"],[73,40,74,38],[73,41,74,39,"_W"],[73,43,74,34],[73,44,74,28],[74,0,75,10,"val"],[74,12,75,10,"val"],[74,15,75,13],[74,16,75,14,"then"],[74,20,75,10],[74,21,75,19],[74,31,75,29,"val"],[74,34,75,19],[74,36,75,34],[75,0,76,12,"res"],[75,14,76,12,"res"],[75,17,76,15],[75,18,76,16,"i"],[75,19,76,15],[75,21,76,19,"val"],[75,24,76,15],[75,25,76,12],[76,0,77,11],[76,13,75,10],[76,15,77,13,"reject"],[76,21,75,10],[77,0,78,10],[78,0,79,9],[78,11,69,8],[78,17,79,15],[79,0,80,10],[79,16,80,14,"then"],[79,20,80,18],[79,23,80,21,"val"],[79,26,80,24],[79,27,80,25,"then"],[79,31,80,10],[81,0,81,10],[81,16,81,14],[81,23,81,21,"then"],[81,27,81,14],[81,32,81,30],[81,42,81,10],[81,44,81,42],[82,0,82,12],[82,18,82,16,"p"],[82,19,82,17],[82,22,82,20],[82,72,82,32,"then"],[82,76,82,36],[82,77,82,37,"bind"],[82,81,82,32],[82,82,82,42,"val"],[82,85,82,32],[82,86,82,20],[82,87,82,12],[83,0,83,12,"p"],[83,14,83,12,"p"],[83,15,83,13],[83,16,83,14,"then"],[83,20,83,12],[83,21,83,19],[83,31,83,29,"val"],[83,34,83,19],[83,36,83,34],[84,0,84,14,"res"],[84,16,84,14,"res"],[84,19,84,17],[84,20,84,18,"i"],[84,21,84,17],[84,23,84,21,"val"],[84,26,84,17],[84,27,84,14],[85,0,85,13],[85,15,83,12],[85,17,85,15,"reject"],[85,23,83,12],[86,0,86,12],[87,0,87,11],[88,0,88,9],[89,0,89,7],[91,0,90,6,"args"],[91,8,90,6,"args"],[91,12,90,10],[91,13,90,11,"i"],[91,14,90,10],[91,15,90,6],[91,18,90,16,"val"],[91,21,90,6],[93,0,91,6],[93,12,91,10],[93,14,91,12,"remaining"],[93,23,91,10],[93,28,91,26],[93,29,91,6],[93,31,91,29],[94,0,92,8,"resolve"],[94,10,92,8,"resolve"],[94,17,92,15],[94,18,92,16,"args"],[94,22,92,15],[94,23,92,8],[95,0,93,7],[96,0,94,5],[98,0,95,4],[98,11,95,9],[98,15,95,13,"i"],[98,16,95,14],[98,19,95,17],[98,20,95,4],[98,22,95,20,"i"],[98,23,95,21],[98,26,95,24,"args"],[98,30,95,28],[98,31,95,29,"length"],[98,37,95,4],[98,39,95,37,"i"],[98,40,95,38],[98,42,95,4],[98,44,95,42],[99,0,96,6,"res"],[99,8,96,6,"res"],[99,11,96,9],[99,12,96,10,"i"],[99,13,96,9],[99,15,96,13,"args"],[99,19,96,17],[99,20,96,18,"i"],[99,21,96,17],[99,22,96,9],[99,23,96,6],[100,0,97,5],[101,0,98,3],[101,5,64,9],[101,6,64,2],[102,0,99,1],[102,3,61,0],[104,0,101,0],[104,46,101,8,"reject"],[104,52,101,0],[104,55,101,17],[104,65,101,27,"value"],[104,70,101,17],[104,72,101,34],[105,0,102,2],[105,11,102,9],[105,61,102,21],[105,71,102,31,"resolve"],[105,78,102,21],[105,80,102,40,"reject"],[105,86,102,21],[105,88,102,48],[106,0,103,4,"reject"],[106,6,103,4,"reject"],[106,12,103,10],[106,13,103,11,"value"],[106,18,103,10],[106,19,103,4],[107,0,104,3],[107,5,102,9],[107,6,102,2],[108,0,105,1],[108,3,101,0],[110,0,107,0],[110,46,107,8,"race"],[110,50,107,0],[110,53,107,15],[110,63,107,25,"values"],[110,69,107,15],[110,71,107,33],[111,0,108,2],[111,11,108,9],[111,61,108,21],[111,71,108,31,"resolve"],[111,78,108,21],[111,80,108,40,"reject"],[111,86,108,21],[111,88,108,48],[112,0,109,4,"iterableToArray"],[112,6,109,4,"iterableToArray"],[112,22,109,19],[112,23,109,20,"values"],[112,29,109,19],[112,30,109,4],[112,31,109,28,"forEach"],[112,38,109,4],[112,39,109,36],[112,49,109,45,"value"],[112,54,109,36],[112,56,109,51],[113,0,110,6],[113,52,110,14,"resolve"],[113,59,110,6],[113,60,110,22,"value"],[113,65,110,6],[113,67,110,29,"then"],[113,71,110,6],[113,72,110,34,"resolve"],[113,79,110,6],[113,81,110,43,"reject"],[113,87,110,6],[114,0,111,5],[114,7,109,4],[115,0,112,3],[115,5,108,9],[115,6,108,2],[116,0,113,1],[116,3,107,0],[118,0,117,0],[118,46,117,8,"prototype"],[118,55,117,0],[118,56,117,18],[118,63,117,0],[118,67,117,29],[118,77,117,39,"onRejected"],[118,87,117,29],[118,89,117,51],[119,0,118,2],[119,11,118,9],[119,16,118,14,"then"],[119,20,118,9],[119,21,118,19],[119,25,118,9],[119,27,118,25,"onRejected"],[119,37,118,9],[119,38,118,2],[120,0,119,1],[120,3,117,0]],"functionMap":{"names":["<global>","valuePromise","Promise.resolve","Promise$argument_0","iterableToArray","Promise.all","res","val.then$argument_0","p.then$argument_0","Promise.reject","Promise.race","iterableToArray.forEach$argument_0","Promise.prototype._catch"],"mappings":"AAA;ACiB;CDK;kBEC;yBCiB;ODE;CFI;sBIE;CJU;cKE;qBFG;IGG;mBCQ;WDE;mBEM;aFE;KHS;GEI;CLC;iBSE;qBNC;GME;CTC;eUE;qBPC;oCQC;KRE;GOC;CVC;6BYI;CZE"}},"type":"js/module"}]}