{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var NEWTON_ITERATIONS = 4;\n  var NEWTON_MIN_SLOPE = 0.001;\n  var SUBDIVISION_PRECISION = 0.0000001;\n  var SUBDIVISION_MAX_ITERATIONS = 10;\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n  var float32ArraySupported = typeof Float32Array === 'function';\n\n  function A(aA1, aA2) {\n    return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n  }\n\n  function B(aA1, aA2) {\n    return 3.0 * aA2 - 6.0 * aA1;\n  }\n\n  function C(aA1) {\n    return 3.0 * aA1;\n  }\n\n  function calcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n  }\n\n  function getSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function binarySubdivide(aX, _aA, _aB, mX1, mX2) {\n    var currentX,\n        currentT,\n        i = 0,\n        aA = _aA,\n        aB = _aB;\n\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n      if (currentX > 0.0) {\n        aB = currentT;\n      } else {\n        aA = currentT;\n      }\n    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(aX, _aGuessT, mX1, mX2) {\n    var aGuessT = _aGuessT;\n\n    for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n\n    return aGuessT;\n  }\n\n  module.exports = function bezier(mX1, mY1, mX2, mY2) {\n    if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n      throw new Error('bezier x values must be in [0, 1] range');\n    }\n\n    var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    function getTForX(aX) {\n      var intervalStart = 0.0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n\n      --currentSample;\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n\n      if (initialSlope >= NEWTON_MIN_SLOPE) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    return function BezierEasing(x) {\n      if (mX1 === mY1 && mX2 === mY2) {\n        return x;\n      }\n\n      if (x === 0) {\n        return 0;\n      }\n\n      if (x === 1) {\n        return 1;\n      }\n\n      return calcBezier(getTForX(x), mY1, mY2);\n    };\n  };\n});","lineCount":122,"map":[[2,0,17,0],[4,0,20,0],[4,6,20,6,"NEWTON_ITERATIONS"],[4,23,20,23],[4,26,20,26],[4,27,20,0],[5,0,21,0],[5,6,21,6,"NEWTON_MIN_SLOPE"],[5,22,21,22],[5,25,21,25],[5,30,21,0],[6,0,22,0],[6,6,22,6,"SUBDIVISION_PRECISION"],[6,27,22,27],[6,30,22,30],[6,39,22,0],[7,0,23,0],[7,6,23,6,"SUBDIVISION_MAX_ITERATIONS"],[7,32,23,32],[7,35,23,35],[7,37,23,0],[8,0,25,0],[8,6,25,6,"kSplineTableSize"],[8,22,25,22],[8,25,25,25],[8,27,25,0],[9,0,26,0],[9,6,26,6,"kSampleStepSize"],[9,21,26,21],[9,24,26,24],[9,31,26,31,"kSplineTableSize"],[9,47,26,47],[9,50,26,50],[9,53,26,24],[9,54,26,0],[10,0,28,0],[10,6,28,6,"float32ArraySupported"],[10,27,28,27],[10,30,28,30],[10,37,28,37,"Float32Array"],[10,49,28,30],[10,54,28,54],[10,64,28,0],[12,0,30,0],[12,11,30,9,"A"],[12,12,30,0],[12,13,30,11,"aA1"],[12,16,30,0],[12,18,30,16,"aA2"],[12,21,30,0],[12,23,30,21],[13,0,31,2],[13,11,31,9],[13,17,31,15],[13,23,31,21,"aA2"],[13,26,31,9],[13,29,31,27],[13,35,31,33,"aA1"],[13,38,31,2],[14,0,32,1],[16,0,33,0],[16,11,33,9,"B"],[16,12,33,0],[16,13,33,11,"aA1"],[16,16,33,0],[16,18,33,16,"aA2"],[16,21,33,0],[16,23,33,21],[17,0,34,2],[17,11,34,9],[17,17,34,15,"aA2"],[17,20,34,9],[17,23,34,21],[17,29,34,27,"aA1"],[17,32,34,2],[18,0,35,1],[20,0,36,0],[20,11,36,9,"C"],[20,12,36,0],[20,13,36,11,"aA1"],[20,16,36,0],[20,18,36,16],[21,0,37,2],[21,11,37,9],[21,17,37,15,"aA1"],[21,20,37,2],[22,0,38,1],[24,0,41,0],[24,11,41,9,"calcBezier"],[24,21,41,0],[24,22,41,20,"aT"],[24,24,41,0],[24,26,41,24,"aA1"],[24,29,41,0],[24,31,41,29,"aA2"],[24,34,41,0],[24,36,41,34],[25,0,42,2],[25,11,42,9],[25,12,42,10],[25,13,42,11,"A"],[25,14,42,12],[25,15,42,13,"aA1"],[25,18,42,12],[25,20,42,18,"aA2"],[25,23,42,12],[25,24,42,11],[25,27,42,25,"aT"],[25,29,42,11],[25,32,42,30,"B"],[25,33,42,31],[25,34,42,32,"aA1"],[25,37,42,31],[25,39,42,37,"aA2"],[25,42,42,31],[25,43,42,10],[25,47,42,45,"aT"],[25,49,42,10],[25,52,42,50,"C"],[25,53,42,51],[25,54,42,52,"aA1"],[25,57,42,51],[25,58,42,9],[25,62,42,60,"aT"],[25,64,42,2],[26,0,43,1],[28,0,46,0],[28,11,46,9,"getSlope"],[28,19,46,0],[28,20,46,18,"aT"],[28,22,46,0],[28,24,46,22,"aA1"],[28,27,46,0],[28,29,46,27,"aA2"],[28,32,46,0],[28,34,46,32],[29,0,47,2],[29,11,47,9],[29,17,47,15,"A"],[29,18,47,16],[29,19,47,17,"aA1"],[29,22,47,16],[29,24,47,22,"aA2"],[29,27,47,16],[29,28,47,9],[29,31,47,29,"aT"],[29,33,47,9],[29,36,47,34,"aT"],[29,38,47,9],[29,41,47,39],[29,47,47,45,"B"],[29,48,47,46],[29,49,47,47,"aA1"],[29,52,47,46],[29,54,47,52,"aA2"],[29,57,47,46],[29,58,47,39],[29,61,47,59,"aT"],[29,63,47,9],[29,66,47,64,"C"],[29,67,47,65],[29,68,47,66,"aA1"],[29,71,47,65],[29,72,47,2],[30,0,48,1],[32,0,50,0],[32,11,50,9,"binarySubdivide"],[32,26,50,0],[32,27,50,25,"aX"],[32,29,50,0],[32,31,50,29,"_aA"],[32,34,50,0],[32,36,50,34,"_aB"],[32,39,50,0],[32,41,50,39,"mX1"],[32,44,50,0],[32,46,50,44,"mX2"],[32,49,50,0],[32,51,50,49],[33,0,51,2],[33,8,51,6,"currentX"],[33,16,51,2],[34,0,51,2],[34,8,52,4,"currentT"],[34,16,51,2],[35,0,51,2],[35,8,53,4,"i"],[35,9,53,5],[35,12,53,8],[35,13,51,2],[36,0,51,2],[36,8,54,4,"aA"],[36,10,54,6],[36,13,54,9,"_aA"],[36,16,51,2],[37,0,51,2],[37,8,55,4,"aB"],[37,10,55,6],[37,13,55,9,"_aB"],[37,16,51,2],[39,0,56,2],[39,7,56,5],[40,0,57,4,"currentT"],[40,6,57,4,"currentT"],[40,14,57,12],[40,17,57,15,"aA"],[40,19,57,17],[40,22,57,20],[40,23,57,21,"aB"],[40,25,57,23],[40,28,57,26,"aA"],[40,30,57,20],[40,34,57,32],[40,37,57,4],[41,0,58,4,"currentX"],[41,6,58,4,"currentX"],[41,14,58,12],[41,17,58,15,"calcBezier"],[41,27,58,25],[41,28,58,26,"currentT"],[41,36,58,25],[41,38,58,36,"mX1"],[41,41,58,25],[41,43,58,41,"mX2"],[41,46,58,25],[41,47,58,15],[41,50,58,48,"aX"],[41,52,58,4],[43,0,59,4],[43,10,59,8,"currentX"],[43,18,59,16],[43,21,59,19],[43,24,59,4],[43,26,59,24],[44,0,60,6,"aB"],[44,8,60,6,"aB"],[44,10,60,8],[44,13,60,11,"currentT"],[44,21,60,6],[45,0,61,5],[45,7,59,4],[45,13,61,11],[46,0,62,6,"aA"],[46,8,62,6,"aA"],[46,10,62,8],[46,13,62,11,"currentT"],[46,21,62,6],[47,0,63,5],[48,0,64,3],[48,5,56,2],[48,13,65,4,"Math"],[48,17,65,8],[48,18,65,9,"abs"],[48,21,65,4],[48,22,65,13,"currentX"],[48,30,65,4],[48,34,65,25,"SUBDIVISION_PRECISION"],[48,55,65,4],[48,59,66,4],[48,61,66,6,"i"],[48,62,66,4],[48,65,66,10,"SUBDIVISION_MAX_ITERATIONS"],[48,91,56,2],[50,0,68,2],[50,11,68,9,"currentT"],[50,19,68,2],[51,0,69,1],[53,0,71,0],[53,11,71,9,"newtonRaphsonIterate"],[53,31,71,0],[53,32,71,30,"aX"],[53,34,71,0],[53,36,71,34,"_aGuessT"],[53,44,71,0],[53,46,71,44,"mX1"],[53,49,71,0],[53,51,71,49,"mX2"],[53,54,71,0],[53,56,71,54],[54,0,72,2],[54,8,72,6,"aGuessT"],[54,15,72,13],[54,18,72,16,"_aGuessT"],[54,26,72,2],[56,0,73,2],[56,9,73,7],[56,13,73,11,"i"],[56,14,73,12],[56,17,73,15],[56,18,73,2],[56,20,73,18,"i"],[56,21,73,19],[56,24,73,22,"NEWTON_ITERATIONS"],[56,41,73,2],[56,43,73,41],[56,45,73,43,"i"],[56,46,73,2],[56,48,73,46],[57,0,74,4],[57,10,74,10,"currentSlope"],[57,22,74,22],[57,25,74,25,"getSlope"],[57,33,74,33],[57,34,74,34,"aGuessT"],[57,41,74,33],[57,43,74,43,"mX1"],[57,46,74,33],[57,48,74,48,"mX2"],[57,51,74,33],[57,52,74,4],[59,0,75,4],[59,10,75,8,"currentSlope"],[59,22,75,20],[59,27,75,25],[59,30,75,4],[59,32,75,30],[60,0,76,6],[60,15,76,13,"aGuessT"],[60,22,76,6],[61,0,77,5],[63,0,78,4],[63,10,78,10,"currentX"],[63,18,78,18],[63,21,78,21,"calcBezier"],[63,31,78,31],[63,32,78,32,"aGuessT"],[63,39,78,31],[63,41,78,41,"mX1"],[63,44,78,31],[63,46,78,46,"mX2"],[63,49,78,31],[63,50,78,21],[63,53,78,53,"aX"],[63,55,78,4],[64,0,79,4,"aGuessT"],[64,6,79,4,"aGuessT"],[64,13,79,11],[64,17,79,15,"currentX"],[64,25,79,23],[64,28,79,26,"currentSlope"],[64,40,79,4],[65,0,80,3],[67,0,81,2],[67,11,81,9,"aGuessT"],[67,18,81,2],[68,0,82,1],[70,0,84,0,"module"],[70,2,84,0,"module"],[70,8,84,6],[70,9,84,7,"exports"],[70,16,84,0],[70,19,84,17],[70,28,84,26,"bezier"],[70,34,84,17],[70,35,85,2,"mX1"],[70,38,84,17],[70,40,86,2,"mY1"],[70,43,84,17],[70,45,87,2,"mX2"],[70,48,84,17],[70,50,88,2,"mY2"],[70,53,84,17],[70,55,89,25],[71,0,90,2],[71,8,90,6],[71,10,90,8,"mX1"],[71,13,90,11],[71,17,90,15],[71,18,90,8],[71,22,90,20,"mX1"],[71,25,90,23],[71,29,90,27],[71,30,90,8],[71,34,90,32,"mX2"],[71,37,90,35],[71,41,90,39],[71,42,90,8],[71,46,90,44,"mX2"],[71,49,90,47],[71,53,90,51],[71,54,90,6],[71,55,90,2],[71,57,90,55],[72,0,91,4],[72,12,91,10],[72,16,91,14,"Error"],[72,21,91,10],[72,22,91,20],[72,63,91,10],[72,64,91,4],[73,0,92,3],[75,0,95,2],[75,8,95,8,"sampleValues"],[75,20,95,20],[75,23,95,23,"float32ArraySupported"],[75,44,95,44],[75,47,96,6],[75,51,96,10,"Float32Array"],[75,63,96,6],[75,64,96,23,"kSplineTableSize"],[75,80,96,6],[75,81,95,44],[75,84,97,6],[75,88,97,10,"Array"],[75,93,97,6],[75,94,97,16,"kSplineTableSize"],[75,110,97,6],[75,111,95,2],[77,0,98,2],[77,8,98,6,"mX1"],[77,11,98,9],[77,16,98,14,"mY1"],[77,19,98,6],[77,23,98,21,"mX2"],[77,26,98,24],[77,31,98,29,"mY2"],[77,34,98,2],[77,36,98,34],[78,0,99,4],[78,11,99,9],[78,15,99,13,"i"],[78,16,99,14],[78,19,99,17],[78,20,99,4],[78,22,99,20,"i"],[78,23,99,21],[78,26,99,24,"kSplineTableSize"],[78,42,99,4],[78,44,99,42],[78,46,99,44,"i"],[78,47,99,4],[78,49,99,47],[79,0,100,6,"sampleValues"],[79,8,100,6,"sampleValues"],[79,20,100,18],[79,21,100,19,"i"],[79,22,100,18],[79,23,100,6],[79,26,100,24,"calcBezier"],[79,36,100,34],[79,37,100,35,"i"],[79,38,100,36],[79,41,100,39,"kSampleStepSize"],[79,56,100,34],[79,58,100,56,"mX1"],[79,61,100,34],[79,63,100,61,"mX2"],[79,66,100,34],[79,67,100,6],[80,0,101,5],[81,0,102,3],[83,0,104,2],[83,13,104,11,"getTForX"],[83,21,104,2],[83,22,104,20,"aX"],[83,24,104,2],[83,26,104,24],[84,0,105,4],[84,10,105,8,"intervalStart"],[84,23,105,21],[84,26,105,24],[84,29,105,4],[85,0,106,4],[85,10,106,8,"currentSample"],[85,23,106,21],[85,26,106,24],[85,27,106,4],[86,0,107,4],[86,10,107,10,"lastSample"],[86,20,107,20],[86,23,107,23,"kSplineTableSize"],[86,39,107,39],[86,42,107,42],[86,43,107,4],[88,0,109,4],[88,13,111,6,"currentSample"],[88,26,111,19],[88,31,111,24,"lastSample"],[88,41,111,6],[88,45,111,38,"sampleValues"],[88,57,111,50],[88,58,111,51,"currentSample"],[88,71,111,50],[88,72,111,38],[88,76,111,69,"aX"],[88,78,109,4],[88,80,112,6],[88,82,112,8,"currentSample"],[88,95,109,4],[88,97,113,6],[89,0,114,6,"intervalStart"],[89,8,114,6,"intervalStart"],[89,21,114,19],[89,25,114,23,"kSampleStepSize"],[89,40,114,6],[90,0,115,5],[92,0,116,4],[92,8,116,6,"currentSample"],[92,21,116,4],[93,0,119,4],[93,10,119,10,"dist"],[93,14,119,14],[93,17,120,6],[93,18,120,7,"aX"],[93,20,120,9],[93,23,120,12,"sampleValues"],[93,35,120,24],[93,36,120,25,"currentSample"],[93,49,120,24],[93,50,120,6],[93,55,121,7,"sampleValues"],[93,67,121,19],[93,68,121,20,"currentSample"],[93,81,121,33],[93,84,121,36],[93,85,121,19],[93,86,121,7],[93,89,121,41,"sampleValues"],[93,101,121,53],[93,102,121,54,"currentSample"],[93,115,121,53],[93,116,120,6],[93,117,119,4],[94,0,122,4],[94,10,122,10,"guessForT"],[94,19,122,19],[94,22,122,22,"intervalStart"],[94,35,122,35],[94,38,122,38,"dist"],[94,42,122,42],[94,45,122,45,"kSampleStepSize"],[94,60,122,4],[95,0,124,4],[95,10,124,10,"initialSlope"],[95,22,124,22],[95,25,124,25,"getSlope"],[95,33,124,33],[95,34,124,34,"guessForT"],[95,43,124,33],[95,45,124,45,"mX1"],[95,48,124,33],[95,50,124,50,"mX2"],[95,53,124,33],[95,54,124,4],[97,0,125,4],[97,10,125,8,"initialSlope"],[97,22,125,20],[97,26,125,24,"NEWTON_MIN_SLOPE"],[97,42,125,4],[97,44,125,42],[98,0,126,6],[98,15,126,13,"newtonRaphsonIterate"],[98,35,126,33],[98,36,126,34,"aX"],[98,38,126,33],[98,40,126,38,"guessForT"],[98,49,126,33],[98,51,126,49,"mX1"],[98,54,126,33],[98,56,126,54,"mX2"],[98,59,126,33],[98,60,126,6],[99,0,127,5],[99,7,125,4],[99,13,127,11],[99,17,127,15,"initialSlope"],[99,29,127,27],[99,34,127,32],[99,37,127,11],[99,39,127,37],[100,0,128,6],[100,15,128,13,"guessForT"],[100,24,128,6],[101,0,129,5],[101,7,127,11],[101,13,129,11],[102,0,130,6],[102,15,130,13,"binarySubdivide"],[102,30,130,28],[102,31,131,8,"aX"],[102,33,130,28],[102,35,132,8,"intervalStart"],[102,48,130,28],[102,50,133,8,"intervalStart"],[102,63,133,21],[102,66,133,24,"kSampleStepSize"],[102,81,130,28],[102,83,134,8,"mX1"],[102,86,130,28],[102,88,135,8,"mX2"],[102,91,130,28],[102,92,130,6],[103,0,137,5],[104,0,138,3],[106,0,140,2],[106,11,140,9],[106,20,140,18,"BezierEasing"],[106,32,140,9],[106,33,140,31,"x"],[106,34,140,9],[106,36,140,50],[107,0,141,4],[107,10,141,8,"mX1"],[107,13,141,11],[107,18,141,16,"mY1"],[107,21,141,8],[107,25,141,23,"mX2"],[107,28,141,26],[107,33,141,31,"mY2"],[107,36,141,4],[107,38,141,36],[108,0,142,6],[108,15,142,13,"x"],[108,16,142,6],[109,0,143,5],[111,0,145,4],[111,10,145,8,"x"],[111,11,145,9],[111,16,145,14],[111,17,145,4],[111,19,145,17],[112,0,146,6],[112,15,146,13],[112,16,146,6],[113,0,147,5],[115,0,148,4],[115,10,148,8,"x"],[115,11,148,9],[115,16,148,14],[115,17,148,4],[115,19,148,17],[116,0,149,6],[116,15,149,13],[116,16,149,6],[117,0,150,5],[119,0,151,4],[119,13,151,11,"calcBezier"],[119,23,151,21],[119,24,151,22,"getTForX"],[119,32,151,30],[119,33,151,31,"x"],[119,34,151,30],[119,35,151,21],[119,37,151,35,"mY1"],[119,40,151,21],[119,42,151,40,"mY2"],[119,45,151,21],[119,46,151,4],[120,0,152,3],[120,5,140,2],[121,0,153,1],[121,3,84,0]],"functionMap":{"names":["<global>","A","B","C","calcBezier","getSlope","binarySubdivide","newtonRaphsonIterate","bezier","getTForX","BezierEasing"],"mappings":"AAA;AC6B;CDE;AEC;CFE;AGC;CHE;AIG;CJE;AKG;CLE;AME;CNmB;AOE;CPW;iBQE;ECoB;GDkC;SEE;GFY;CRC"}},"type":"js/module"}]}