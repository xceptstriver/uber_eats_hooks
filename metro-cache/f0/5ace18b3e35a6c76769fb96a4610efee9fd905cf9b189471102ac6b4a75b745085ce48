{"dependencies":[{"name":"./toInteger","data":{"asyncType":null,"locs":[{"start":{"line":34,"column":6},"end":{"line":34,"column":18}}]}},{"name":"./_castFunction","data":{"asyncType":null,"locs":[{"start":{"line":41,"column":13},"end":{"line":41,"column":35}}]}},{"name":"./_baseTimes","data":{"asyncType":null,"locs":[{"start":{"line":44,"column":15},"end":{"line":44,"column":42}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var MAX_SAFE_INTEGER = 9007199254740991;\n  var MAX_ARRAY_LENGTH = 4294967295;\n  var nativeMin = Math.min;\n\n  function times(n, iteratee) {\n    n = _$$_REQUIRE(_dependencyMap[0], \"./toInteger\")(n);\n\n    if (n < 1 || n > MAX_SAFE_INTEGER) {\n      return [];\n    }\n\n    var index = MAX_ARRAY_LENGTH,\n        length = nativeMin(n, MAX_ARRAY_LENGTH);\n    iteratee = _$$_REQUIRE(_dependencyMap[1], \"./_castFunction\")(iteratee);\n    n -= MAX_ARRAY_LENGTH;\n\n    var result = _$$_REQUIRE(_dependencyMap[2], \"./_baseTimes\")(length, iteratee);\n\n    while (++index < n) {\n      iteratee(index);\n    }\n\n    return result;\n  }\n\n  module.exports = times;\n});","lineCount":28,"map":[[2,0,6,0],[2,6,6,4,"MAX_SAFE_INTEGER"],[2,22,6,20],[2,25,6,23],[2,41,6,0],[3,0,9,0],[3,6,9,4,"MAX_ARRAY_LENGTH"],[3,22,9,20],[3,25,9,23],[3,35,9,0],[4,0,12,0],[4,6,12,4,"nativeMin"],[4,15,12,13],[4,18,12,16,"Math"],[4,22,12,20],[4,23,12,21,"min"],[4,26,12,0],[6,0,33,0],[6,11,33,9,"times"],[6,16,33,0],[6,17,33,15,"n"],[6,18,33,0],[6,20,33,18,"iteratee"],[6,28,33,0],[6,30,33,28],[7,0,34,2,"n"],[7,4,34,2,"n"],[7,5,34,3],[7,8,34,6],[7,54,34,16,"n"],[7,55,34,6],[7,56,34,2],[9,0,35,2],[9,8,35,6,"n"],[9,9,35,7],[9,12,35,10],[9,13,35,6],[9,17,35,15,"n"],[9,18,35,16],[9,21,35,19,"MAX_SAFE_INTEGER"],[9,37,35,2],[9,39,35,37],[10,0,36,4],[10,13,36,11],[10,15,36,4],[11,0,37,3],[13,0,38,2],[13,8,38,6,"index"],[13,13,38,11],[13,16,38,14,"MAX_ARRAY_LENGTH"],[13,32,38,2],[14,0,38,2],[14,8,39,6,"length"],[14,14,39,12],[14,17,39,15,"nativeMin"],[14,26,39,24],[14,27,39,25,"n"],[14,28,39,24],[14,30,39,28,"MAX_ARRAY_LENGTH"],[14,46,39,24],[14,47,38,2],[15,0,41,2,"iteratee"],[15,4,41,2,"iteratee"],[15,12,41,10],[15,15,41,13],[15,65,41,26,"iteratee"],[15,73,41,13],[15,74,41,2],[16,0,42,2,"n"],[16,4,42,2,"n"],[16,5,42,3],[16,9,42,7,"MAX_ARRAY_LENGTH"],[16,25,42,2],[18,0,44,2],[18,8,44,6,"result"],[18,14,44,12],[18,17,44,15],[18,64,44,25,"length"],[18,70,44,15],[18,72,44,33,"iteratee"],[18,80,44,15],[18,81,44,2],[20,0,45,2],[20,11,45,9],[20,13,45,11,"index"],[20,18,45,9],[20,21,45,19,"n"],[20,22,45,2],[20,24,45,22],[21,0,46,4,"iteratee"],[21,6,46,4,"iteratee"],[21,14,46,12],[21,15,46,13,"index"],[21,20,46,12],[21,21,46,4],[22,0,47,3],[24,0,48,2],[24,11,48,9,"result"],[24,17,48,2],[25,0,49,1],[27,0,51,0,"module"],[27,2,51,0,"module"],[27,8,51,6],[27,9,51,7,"exports"],[27,16,51,0],[27,19,51,17,"times"],[27,24,51,0]],"functionMap":{"names":["<global>","times"],"mappings":"AAA;ACgC;CDgB"}},"type":"js/module"}]}