{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},{"start":{"line":13,"column":0},"end":{"line":13,"column":46}}]}},{"name":"../../Text/Text","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0},"end":{"line":12,"column":35}}]}},{"name":"../../Components/View/View","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0},"end":{"line":13,"column":46}}]}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":14,"column":0},"end":{"line":14,"column":31}}]}},{"name":"anser","data":{"asyncType":null,"locs":[{"start":{"line":49,"column":4},"end":{"line":49,"column":14},"identifierName":"ansiToJson"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ansi;\n\n  var _Text = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"../../Text/Text\"));\n\n  var _View = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"../../Components/View/View\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"react\"));\n\n  var _jsxFileName = \"/home/moglix/uber_eats_hooks/node_modules/react-native/Libraries/LogBox/UI/AnsiHighlight.js\";\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var COLORS = {\n    'ansi-black': 'rgb(27, 27, 27)',\n    'ansi-red': 'rgb(187, 86, 83)',\n    'ansi-green': 'rgb(144, 157, 98)',\n    'ansi-yellow': 'rgb(234, 193, 121)',\n    'ansi-blue': 'rgb(125, 169, 199)',\n    'ansi-magenta': 'rgb(176, 101, 151)',\n    'ansi-cyan': 'rgb(140, 220, 216)',\n    'ansi-bright-black': 'rgb(98, 98, 98)',\n    'ansi-bright-red': 'rgb(187, 86, 83)',\n    'ansi-bright-green': 'rgb(144, 157, 98)',\n    'ansi-bright-yellow': 'rgb(234, 193, 121)',\n    'ansi-bright-blue': 'rgb(125, 169, 199)',\n    'ansi-bright-magenta': 'rgb(176, 101, 151)',\n    'ansi-bright-cyan': 'rgb(140, 220, 216)',\n    'ansi-bright-white': 'rgb(247, 247, 247)'\n  };\n\n  function Ansi(_ref) {\n    var _this = this;\n\n    var text = _ref.text,\n        style = _ref.style;\n    var commonWhitespaceLength = Infinity;\n    var parsedLines = text.split(/\\n/).map(function (line) {\n      return (0, _$$_REQUIRE(_dependencyMap[4], \"anser\").ansiToJson)(line, {\n        json: true,\n        remove_empty: true,\n        use_classes: true\n      });\n    });\n    parsedLines.map(function (lines) {\n      var _lines$, _lines$$content, _match$;\n\n      var match = lines[2] && ((_lines$ = lines[2]) == null ? void 0 : (_lines$$content = _lines$.content) == null ? void 0 : _lines$$content.match(/^ +/));\n      var whitespaceLength = match && ((_match$ = match[0]) == null ? void 0 : _match$.length) || 0;\n\n      if (whitespaceLength < commonWhitespaceLength) {\n        commonWhitespaceLength = whitespaceLength;\n      }\n    });\n\n    var getText = function getText(content, key) {\n      if (key === 1) {\n        return content.replace(/\\| $/, ' ');\n      } else if (key === 2 && commonWhitespaceLength < Infinity) {\n        return content.substr(commonWhitespaceLength);\n      } else {\n        return content;\n      }\n    };\n\n    return React.createElement(_View.default, {\n      style: {\n        flexDirection: 'column'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }, parsedLines.map(function (items, i) {\n      return React.createElement(_View.default, {\n        style: {\n          flexDirection: 'row'\n        },\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, items.map(function (bundle, key) {\n        var textStyle = bundle.fg && COLORS[bundle.fg] ? {\n          backgroundColor: bundle.bg && COLORS[bundle.bg],\n          color: bundle.fg && COLORS[bundle.fg]\n        } : {\n          backgroundColor: bundle.bg && COLORS[bundle.bg]\n        };\n        return React.createElement(_Text.default, {\n          style: [style, textStyle],\n          key: key,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }\n        }, getText(bundle.content, key));\n      }));\n    }));\n  }\n});","lineCount":113,"map":[[7,0,12,0],[9,0,13,0],[11,0,14,0],[19,0,19,0],[19,6,19,6,"COLORS"],[19,12,19,12],[19,15,19,15],[20,0,20,2],[20,18,20,16],[20,35,19,15],[21,0,21,2],[21,16,21,14],[21,34,19,15],[22,0,22,2],[22,18,22,16],[22,37,19,15],[23,0,23,2],[23,19,23,17],[23,39,19,15],[24,0,24,2],[24,17,24,15],[24,37,19,15],[25,0,25,2],[25,20,25,18],[25,40,19,15],[26,0,26,2],[26,17,26,15],[26,37,19,15],[27,0,29,2],[27,25,29,23],[27,42,19,15],[28,0,30,2],[28,23,30,21],[28,41,19,15],[29,0,31,2],[29,25,31,23],[29,44,19,15],[30,0,32,2],[30,26,32,24],[30,46,19,15],[31,0,33,2],[31,24,33,22],[31,44,19,15],[32,0,34,2],[32,27,34,25],[32,47,19,15],[33,0,35,2],[33,24,35,22],[33,44,19,15],[34,0,36,2],[34,25,36,23],[35,0,19,15],[35,3,19,0],[37,0,39,15],[37,11,39,24,"Ansi"],[37,15,39,15],[37,22,46,15],[38,0,46,15],[40,0,46,15],[40,8,40,2,"text"],[40,12,46,15],[40,20,40,2,"text"],[40,24,46,15],[41,0,46,15],[41,8,41,2,"style"],[41,13,46,15],[41,21,41,2,"style"],[41,26,46,15],[42,0,47,2],[42,8,47,6,"commonWhitespaceLength"],[42,30,47,28],[42,33,47,31,"Infinity"],[42,41,47,2],[43,0,48,2],[43,8,48,8,"parsedLines"],[43,19,48,19],[43,22,48,22,"text"],[43,26,48,26],[43,27,48,27,"split"],[43,32,48,22],[43,33,48,33],[43,37,48,22],[43,39,48,39,"map"],[43,42,48,22],[43,43,48,43],[43,53,48,43,"line"],[43,57,48,47],[44,0,48,47],[44,13,49,4],[44,69,49,15,"line"],[44,73,49,4],[44,75,49,21],[45,0,50,6,"json"],[45,8,50,6,"json"],[45,12,50,10],[45,14,50,12],[45,18,49,21],[46,0,51,6,"remove_empty"],[46,8,51,6,"remove_empty"],[46,20,51,18],[46,22,51,20],[46,26,49,21],[47,0,52,6,"use_classes"],[47,8,52,6,"use_classes"],[47,19,52,17],[47,21,52,19],[48,0,49,21],[48,7,49,4],[48,8,48,47],[49,0,48,47],[49,5,48,22],[49,6,48,2],[50,0,56,2,"parsedLines"],[50,4,56,2,"parsedLines"],[50,15,56,13],[50,16,56,14,"map"],[50,19,56,2],[50,20,56,18],[50,30,56,18,"lines"],[50,35,56,23],[50,37,56,27],[51,0,56,27],[53,0,60,4],[53,10,60,10,"match"],[53,15,60,15],[53,18,60,18,"lines"],[53,23,60,23],[53,24,60,24],[53,25,60,23],[53,26,60,18],[53,42,60,30,"lines"],[53,47,60,35],[53,48,60,36],[53,49,60,35],[53,50,60,18],[53,90,60,30],[53,98,60,40,"content"],[53,105,60,18],[53,126,60,30],[53,142,60,49,"match"],[53,147,60,30],[53,148,60,55],[53,153,60,30],[53,154,60,18],[53,155,60,4],[54,0,61,4],[54,10,61,10,"whitespaceLength"],[54,26,61,26],[54,29,61,30,"match"],[54,34,61,35],[54,50,61,39,"match"],[54,55,61,44],[54,56,61,45],[54,57,61,44],[54,58,61,35],[54,79,61,39],[54,87,61,49,"length"],[54,93,61,35],[54,94,61,29],[54,98,61,60],[54,99,61,4],[56,0,62,4],[56,10,62,8,"whitespaceLength"],[56,26,62,24],[56,29,62,27,"commonWhitespaceLength"],[56,51,62,4],[56,53,62,51],[57,0,63,6,"commonWhitespaceLength"],[57,8,63,6,"commonWhitespaceLength"],[57,30,63,28],[57,33,63,31,"whitespaceLength"],[57,49,63,6],[58,0,64,5],[59,0,65,3],[59,5,56,2],[61,0,67,2],[61,8,67,8,"getText"],[61,15,67,15],[61,18,67,18],[61,27,67,8,"getText"],[61,34,67,18],[61,35,67,19,"content"],[61,42,67,18],[61,44,67,28,"key"],[61,47,67,18],[61,49,67,36],[62,0,68,4],[62,10,68,8,"key"],[62,13,68,11],[62,18,68,16],[62,19,68,4],[62,21,68,19],[63,0,70,6],[63,15,70,13,"content"],[63,22,70,20],[63,23,70,21,"replace"],[63,30,70,13],[63,31,70,29],[63,37,70,13],[63,39,70,37],[63,42,70,13],[63,43,70,6],[64,0,71,5],[64,7,68,4],[64,13,71,11],[64,17,71,15,"key"],[64,20,71,18],[64,25,71,23],[64,26,71,15],[64,30,71,28,"commonWhitespaceLength"],[64,52,71,50],[64,55,71,53,"Infinity"],[64,63,71,11],[64,65,71,63],[65,0,73,6],[65,15,73,13,"content"],[65,22,73,20],[65,23,73,21,"substr"],[65,29,73,13],[65,30,73,28,"commonWhitespaceLength"],[65,52,73,13],[65,53,73,6],[66,0,74,5],[66,7,71,11],[66,13,74,11],[67,0,75,6],[67,15,75,13,"content"],[67,22,75,6],[68,0,76,5],[69,0,77,3],[69,5,67,2],[71,0,79,2],[71,11,80,4],[71,31,80,5],[71,44,80,4],[72,0,80,10],[72,6,80,10],[72,11,80,15],[72,13,80,17],[73,0,80,18,"flexDirection"],[73,8,80,18,"flexDirection"],[73,21,80,31],[73,23,80,33],[74,0,80,17],[74,7,80,4],[75,0,80,4],[76,0,80,4],[77,0,80,4],[78,0,80,4],[79,0,80,4],[80,0,80,4],[81,0,80,4],[81,7,81,7,"parsedLines"],[81,18,81,18],[81,19,81,19,"map"],[81,22,81,7],[81,23,81,23],[81,33,81,24,"items"],[81,38,81,23],[81,40,81,31,"i"],[81,41,81,23],[82,0,81,23],[82,13,82,8],[82,33,82,9],[82,46,82,8],[83,0,82,14],[83,8,82,14],[83,13,82,19],[83,15,82,21],[84,0,82,22,"flexDirection"],[84,10,82,22,"flexDirection"],[84,23,82,35],[84,25,82,37],[85,0,82,21],[85,9,82,8],[86,0,82,45],[86,8,82,45],[86,11,82,48],[86,13,82,50,"i"],[86,14,82,8],[87,0,82,8],[88,0,82,8],[89,0,82,8],[90,0,82,8],[91,0,82,8],[92,0,82,8],[93,0,82,8],[93,9,83,11,"items"],[93,14,83,16],[93,15,83,17,"map"],[93,18,83,11],[93,19,83,21],[93,29,83,22,"bundle"],[93,35,83,21],[93,37,83,30,"key"],[93,40,83,21],[93,42,83,38],[94,0,84,12],[94,12,84,18,"textStyle"],[94,21,84,27],[94,24,85,14,"bundle"],[94,30,85,20],[94,31,85,21,"fg"],[94,33,85,14],[94,37,85,27,"COLORS"],[94,43,85,33],[94,44,85,34,"bundle"],[94,50,85,40],[94,51,85,41,"fg"],[94,53,85,33],[94,54,85,14],[94,57,86,18],[95,0,87,20,"backgroundColor"],[95,10,87,20,"backgroundColor"],[95,25,87,35],[95,27,87,37,"bundle"],[95,33,87,43],[95,34,87,44,"bg"],[95,36,87,37],[95,40,87,50,"COLORS"],[95,46,87,56],[95,47,87,57,"bundle"],[95,53,87,63],[95,54,87,64,"bg"],[95,56,87,56],[95,57,86,18],[96,0,88,20,"color"],[96,10,88,20,"color"],[96,15,88,25],[96,17,88,27,"bundle"],[96,23,88,33],[96,24,88,34,"fg"],[96,26,88,27],[96,30,88,40,"COLORS"],[96,36,88,46],[96,37,88,47,"bundle"],[96,43,88,53],[96,44,88,54,"fg"],[96,46,88,46],[97,0,86,18],[97,9,85,14],[97,12,90,18],[98,0,91,20,"backgroundColor"],[98,10,91,20,"backgroundColor"],[98,25,91,35],[98,27,91,37,"bundle"],[98,33,91,43],[98,34,91,44,"bg"],[98,36,91,37],[98,40,91,50,"COLORS"],[98,46,91,56],[98,47,91,57,"bundle"],[98,53,91,63],[98,54,91,64,"bg"],[98,56,91,56],[99,0,90,18],[99,9,84,12],[100,0,93,12],[100,15,94,14],[100,35,94,15],[100,48,94,14],[101,0,94,20],[101,10,94,20],[101,15,94,25],[101,17,94,27],[101,18,94,28,"style"],[101,23,94,27],[101,25,94,35,"textStyle"],[101,34,94,27],[101,35,94,14],[102,0,94,47],[102,10,94,47],[102,13,94,50],[102,15,94,52,"key"],[102,18,94,14],[103,0,94,14],[104,0,94,14],[105,0,94,14],[106,0,94,14],[107,0,94,14],[108,0,94,14],[109,0,94,14],[109,11,95,17,"getText"],[109,18,95,24],[109,19,95,25,"bundle"],[109,25,95,31],[109,26,95,32,"content"],[109,33,95,24],[109,35,95,41,"key"],[109,38,95,24],[109,39,94,14],[109,40,93,12],[110,0,98,11],[110,7,83,11],[110,8,82,8],[110,9,81,23],[111,0,81,23],[111,5,81,7],[111,6,80,4],[111,7,79,2],[112,0,103,1]],"functionMap":{"names":["<global>","Ansi","text.split.map$argument_0","parsedLines.map$argument_0","getText","items.map$argument_0"],"mappings":"AAA;eCsC;2CCS;MDK;kBEG;GFS;kBGE;GHU;uBEI;qBEE;WFe;OFE;CDG"}},"type":"js/module"}]}