{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":362,"column":0}},{"start":{"line":15,"column":0},"end":{"line":15,"column":64}},{"start":{"line":16,"column":0},"end":{"line":16,"column":70}},{"start":{"line":17,"column":0},"end":{"line":17,"column":34}}]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":362,"column":0}}]}},{"name":"./NativeAsyncLocalStorage","data":{"asyncType":null,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":64}}]}},{"name":"./NativeAsyncSQLiteDBStorage","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0},"end":{"line":16,"column":70}}]}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0},"end":{"line":17,"column":34}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _NativeAsyncLocalStorage = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"./NativeAsyncLocalStorage\"));\n\n  var _NativeAsyncSQLiteDBStorage = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"./NativeAsyncSQLiteDBStorage\"));\n\n  var _invariant = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"invariant\"));\n\n  var RCTAsyncStorage = _NativeAsyncSQLiteDBStorage.default || _NativeAsyncLocalStorage.default;\n  var AsyncStorage = {\n    _getRequests: [],\n    _getKeys: [],\n    _immediate: null,\n    getItem: function getItem(key, callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiGet([key], function (errors, result) {\n          var value = result && result[0] && result[0][1] ? result[0][1] : null;\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0], value);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(value);\n          }\n        });\n      });\n    },\n    setItem: function setItem(key, value, callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiSet([[key, value]], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    removeItem: function removeItem(key, callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiRemove([key], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    mergeItem: function mergeItem(key, value, callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiMerge([[key, value]], function (errors) {\n          var errs = convertErrors(errors);\n          callback && callback(errs && errs[0]);\n\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    clear: function clear(callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.clear(function (error) {\n          callback && callback(convertError(error));\n\n          if (error && convertError(error)) {\n            reject(convertError(error));\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    getAllKeys: function getAllKeys(callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.getAllKeys(function (error, keys) {\n          callback && callback(convertError(error), keys);\n\n          if (error) {\n            reject(convertError(error));\n          } else {\n            resolve(keys);\n          }\n        });\n      });\n    },\n    flushGetRequests: function flushGetRequests() {\n      var getRequests = this._getRequests;\n      var getKeys = this._getKeys;\n      this._getRequests = [];\n      this._getKeys = [];\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      RCTAsyncStorage.multiGet(getKeys, function (errors, result) {\n        var map = {};\n        result && result.forEach(function (_ref) {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n              key = _ref2[0],\n              value = _ref2[1];\n\n          map[key] = value;\n          return value;\n        });\n        var reqLength = getRequests.length;\n\n        for (var i = 0; i < reqLength; i++) {\n          var request = getRequests[i];\n          var requestKeys = request.keys;\n          var requestResult = requestKeys.map(function (key) {\n            return [key, map[key]];\n          });\n          request.callback && request.callback(null, requestResult);\n          request.resolve && request.resolve(requestResult);\n        }\n      });\n    },\n    multiGet: function multiGet(keys, callback) {\n      var _this = this;\n\n      if (!this._immediate) {\n        this._immediate = setImmediate(function () {\n          _this._immediate = null;\n\n          _this.flushGetRequests();\n        });\n      }\n\n      var getRequest = {\n        keys: keys,\n        callback: callback,\n        keyIndex: this._getKeys.length,\n        resolve: null,\n        reject: null\n      };\n      var promiseResult = new Promise(function (resolve, reject) {\n        getRequest.resolve = resolve;\n        getRequest.reject = reject;\n      });\n\n      this._getRequests.push(getRequest);\n\n      keys.forEach(function (key) {\n        if (_this._getKeys.indexOf(key) === -1) {\n          _this._getKeys.push(key);\n        }\n      });\n      return promiseResult;\n    },\n    multiSet: function multiSet(keyValuePairs, callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiSet(keyValuePairs, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    multiRemove: function multiRemove(keys, callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiRemove(keys, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    },\n    multiMerge: function multiMerge(keyValuePairs, callback) {\n      (0, _invariant.default)(RCTAsyncStorage, 'RCTAsyncStorage not available');\n      return new Promise(function (resolve, reject) {\n        RCTAsyncStorage.multiMerge(keyValuePairs, function (errors) {\n          var error = convertErrors(errors);\n          callback && callback(error);\n\n          if (error) {\n            reject(error);\n          } else {\n            resolve(null);\n          }\n        });\n      });\n    }\n  };\n\n  if (!RCTAsyncStorage.multiMerge) {\n    delete AsyncStorage.mergeItem;\n    delete AsyncStorage.multiMerge;\n  }\n\n  function convertErrors(errs) {\n    if (!errs) {\n      return null;\n    }\n\n    return (Array.isArray(errs) ? errs : [errs]).map(function (e) {\n      return convertError(e);\n    });\n  }\n\n  function convertError(error) {\n    if (!error) {\n      return null;\n    }\n\n    var out = new Error(error.message);\n    out.key = error.key;\n    return out;\n  }\n\n  module.exports = AsyncStorage;\n});","lineCount":240,"map":[[2,0,13,0],[6,0,15,0],[8,0,16,0],[10,0,17,0],[12,0,20,0],[12,6,20,6,"RCTAsyncStorage"],[12,21,20,21],[12,24,20,24,"NativeAsyncSQLiteDBStorage"],[12,63,20,54,"NativeAsyncLocalStorage"],[12,95,20,0],[13,0,29,0],[13,6,29,6,"AsyncStorage"],[13,18,29,18],[13,21,29,21],[14,0,30,2,"_getRequests"],[14,4,30,2,"_getRequests"],[14,16,30,14],[14,18,30,17],[14,20,29,21],[15,0,31,2,"_getKeys"],[15,4,31,2,"_getKeys"],[15,12,31,10],[15,14,31,13],[15,16,29,21],[16,0,32,2,"_immediate"],[16,4,32,2,"_immediate"],[16,14,32,12],[16,16,32,15],[16,20,29,21],[17,0,39,2,"getItem"],[17,4,39,2,"getItem"],[17,11,39,9],[17,13,39,11],[17,30,40,4,"key"],[17,33,39,11],[17,35,41,4,"callback"],[17,43,39,11],[17,45,42,13],[18,0,43,4],[18,30,43,14,"RCTAsyncStorage"],[18,45,43,4],[18,47,43,31],[18,78,43,4],[19,0,44,4],[19,13,44,11],[19,17,44,15,"Promise"],[19,24,44,11],[19,25,44,23],[19,35,44,24,"resolve"],[19,42,44,23],[19,44,44,33,"reject"],[19,50,44,23],[19,52,44,44],[20,0,45,6,"RCTAsyncStorage"],[20,8,45,6,"RCTAsyncStorage"],[20,23,45,21],[20,24,45,22,"multiGet"],[20,32,45,6],[20,33,45,31],[20,34,45,32,"key"],[20,37,45,31],[20,38,45,6],[20,40,45,38],[20,50,45,47,"errors"],[20,56,45,38],[20,58,45,55,"result"],[20,64,45,38],[20,66,45,63],[21,0,47,8],[21,14,47,14,"value"],[21,19,47,19],[21,22,47,22,"result"],[21,28,47,28],[21,32,47,32,"result"],[21,38,47,38],[21,39,47,39],[21,40,47,38],[21,41,47,22],[21,45,47,45,"result"],[21,51,47,51],[21,52,47,52],[21,53,47,51],[21,54,47,45],[21,55,47,55],[21,56,47,45],[21,57,47,22],[21,60,47,60,"result"],[21,66,47,66],[21,67,47,67],[21,68,47,66],[21,69,47,60],[21,70,47,70],[21,71,47,60],[21,72,47,22],[21,75,47,75],[21,79,47,8],[22,0,48,8],[22,14,48,14,"errs"],[22,18,48,18],[22,21,48,21,"convertErrors"],[22,34,48,34],[22,35,48,35,"errors"],[22,41,48,34],[22,42,48,8],[23,0,49,8,"callback"],[23,10,49,8,"callback"],[23,18,49,16],[23,22,49,20,"callback"],[23,30,49,28],[23,31,49,29,"errs"],[23,35,49,33],[23,39,49,37,"errs"],[23,43,49,41],[23,44,49,42],[23,45,49,41],[23,46,49,28],[23,48,49,46,"value"],[23,53,49,28],[23,54,49,8],[25,0,50,8],[25,14,50,12,"errs"],[25,18,50,8],[25,20,50,18],[26,0,51,10,"reject"],[26,12,51,10,"reject"],[26,18,51,16],[26,19,51,17,"errs"],[26,23,51,21],[26,24,51,22],[26,25,51,21],[26,26,51,16],[26,27,51,10],[27,0,52,9],[27,11,50,8],[27,17,52,15],[28,0,53,10,"resolve"],[28,12,53,10,"resolve"],[28,19,53,17],[28,20,53,18,"value"],[28,25,53,17],[28,26,53,10],[29,0,54,9],[30,0,55,7],[30,9,45,6],[31,0,56,5],[31,7,44,11],[31,8,44,4],[32,0,57,3],[32,5,29,21],[33,0,64,2,"setItem"],[33,4,64,2,"setItem"],[33,11,64,9],[33,13,64,11],[33,30,65,4,"key"],[33,33,64,11],[33,35,66,4,"value"],[33,40,64,11],[33,42,67,4,"callback"],[33,50,64,11],[33,52,68,13],[34,0,69,4],[34,30,69,14,"RCTAsyncStorage"],[34,45,69,4],[34,47,69,31],[34,78,69,4],[35,0,70,4],[35,13,70,11],[35,17,70,15,"Promise"],[35,24,70,11],[35,25,70,23],[35,35,70,24,"resolve"],[35,42,70,23],[35,44,70,33,"reject"],[35,50,70,23],[35,52,70,44],[36,0,71,6,"RCTAsyncStorage"],[36,8,71,6,"RCTAsyncStorage"],[36,23,71,21],[36,24,71,22,"multiSet"],[36,32,71,6],[36,33,71,31],[36,34,71,32],[36,35,71,33,"key"],[36,38,71,32],[36,40,71,38,"value"],[36,45,71,32],[36,46,71,31],[36,47,71,6],[36,49,71,47],[36,59,71,56,"errors"],[36,65,71,47],[36,67,71,64],[37,0,72,8],[37,14,72,14,"errs"],[37,18,72,18],[37,21,72,21,"convertErrors"],[37,34,72,34],[37,35,72,35,"errors"],[37,41,72,34],[37,42,72,8],[38,0,73,8,"callback"],[38,10,73,8,"callback"],[38,18,73,16],[38,22,73,20,"callback"],[38,30,73,28],[38,31,73,29,"errs"],[38,35,73,33],[38,39,73,37,"errs"],[38,43,73,41],[38,44,73,42],[38,45,73,41],[38,46,73,28],[38,47,73,8],[40,0,74,8],[40,14,74,12,"errs"],[40,18,74,8],[40,20,74,18],[41,0,75,10,"reject"],[41,12,75,10,"reject"],[41,18,75,16],[41,19,75,17,"errs"],[41,23,75,21],[41,24,75,22],[41,25,75,21],[41,26,75,16],[41,27,75,10],[42,0,76,9],[42,11,74,8],[42,17,76,15],[43,0,77,10,"resolve"],[43,12,77,10,"resolve"],[43,19,77,17],[43,20,77,18],[43,24,77,17],[43,25,77,10],[44,0,78,9],[45,0,79,7],[45,9,71,6],[46,0,80,5],[46,7,70,11],[46,8,70,4],[47,0,81,3],[47,5,29,21],[48,0,88,2,"removeItem"],[48,4,88,2,"removeItem"],[48,14,88,12],[48,16,88,14],[48,36,89,4,"key"],[48,39,88,14],[48,41,90,4,"callback"],[48,49,88,14],[48,51,91,13],[49,0,92,4],[49,30,92,14,"RCTAsyncStorage"],[49,45,92,4],[49,47,92,31],[49,78,92,4],[50,0,93,4],[50,13,93,11],[50,17,93,15,"Promise"],[50,24,93,11],[50,25,93,23],[50,35,93,24,"resolve"],[50,42,93,23],[50,44,93,33,"reject"],[50,50,93,23],[50,52,93,44],[51,0,94,6,"RCTAsyncStorage"],[51,8,94,6,"RCTAsyncStorage"],[51,23,94,21],[51,24,94,22,"multiRemove"],[51,35,94,6],[51,36,94,34],[51,37,94,35,"key"],[51,40,94,34],[51,41,94,6],[51,43,94,41],[51,53,94,50,"errors"],[51,59,94,41],[51,61,94,58],[52,0,95,8],[52,14,95,14,"errs"],[52,18,95,18],[52,21,95,21,"convertErrors"],[52,34,95,34],[52,35,95,35,"errors"],[52,41,95,34],[52,42,95,8],[53,0,96,8,"callback"],[53,10,96,8,"callback"],[53,18,96,16],[53,22,96,20,"callback"],[53,30,96,28],[53,31,96,29,"errs"],[53,35,96,33],[53,39,96,37,"errs"],[53,43,96,41],[53,44,96,42],[53,45,96,41],[53,46,96,28],[53,47,96,8],[55,0,97,8],[55,14,97,12,"errs"],[55,18,97,8],[55,20,97,18],[56,0,98,10,"reject"],[56,12,98,10,"reject"],[56,18,98,16],[56,19,98,17,"errs"],[56,23,98,21],[56,24,98,22],[56,25,98,21],[56,26,98,16],[56,27,98,10],[57,0,99,9],[57,11,97,8],[57,17,99,15],[58,0,100,10,"resolve"],[58,12,100,10,"resolve"],[58,19,100,17],[58,20,100,18],[58,24,100,17],[58,25,100,10],[59,0,101,9],[60,0,102,7],[60,9,94,6],[61,0,103,5],[61,7,93,11],[61,8,93,4],[62,0,104,3],[62,5,29,21],[63,0,114,2,"mergeItem"],[63,4,114,2,"mergeItem"],[63,13,114,11],[63,15,114,13],[63,34,115,4,"key"],[63,37,114,13],[63,39,116,4,"value"],[63,44,114,13],[63,46,117,4,"callback"],[63,54,114,13],[63,56,118,13],[64,0,119,4],[64,30,119,14,"RCTAsyncStorage"],[64,45,119,4],[64,47,119,31],[64,78,119,4],[65,0,120,4],[65,13,120,11],[65,17,120,15,"Promise"],[65,24,120,11],[65,25,120,23],[65,35,120,24,"resolve"],[65,42,120,23],[65,44,120,33,"reject"],[65,50,120,23],[65,52,120,44],[66,0,121,6,"RCTAsyncStorage"],[66,8,121,6,"RCTAsyncStorage"],[66,23,121,21],[66,24,121,22,"multiMerge"],[66,34,121,6],[66,35,121,33],[66,36,121,34],[66,37,121,35,"key"],[66,40,121,34],[66,42,121,40,"value"],[66,47,121,34],[66,48,121,33],[66,49,121,6],[66,51,121,49],[66,61,121,58,"errors"],[66,67,121,49],[66,69,121,66],[67,0,122,8],[67,14,122,14,"errs"],[67,18,122,18],[67,21,122,21,"convertErrors"],[67,34,122,34],[67,35,122,35,"errors"],[67,41,122,34],[67,42,122,8],[68,0,123,8,"callback"],[68,10,123,8,"callback"],[68,18,123,16],[68,22,123,20,"callback"],[68,30,123,28],[68,31,123,29,"errs"],[68,35,123,33],[68,39,123,37,"errs"],[68,43,123,41],[68,44,123,42],[68,45,123,41],[68,46,123,28],[68,47,123,8],[70,0,124,8],[70,14,124,12,"errs"],[70,18,124,8],[70,20,124,18],[71,0,125,10,"reject"],[71,12,125,10,"reject"],[71,18,125,16],[71,19,125,17,"errs"],[71,23,125,21],[71,24,125,22],[71,25,125,21],[71,26,125,16],[71,27,125,10],[72,0,126,9],[72,11,124,8],[72,17,126,15],[73,0,127,10,"resolve"],[73,12,127,10,"resolve"],[73,19,127,17],[73,20,127,18],[73,24,127,17],[73,25,127,10],[74,0,128,9],[75,0,129,7],[75,9,121,6],[76,0,130,5],[76,7,120,11],[76,8,120,4],[77,0,131,3],[77,5,29,21],[78,0,140,2,"clear"],[78,4,140,2,"clear"],[78,9,140,7],[78,11,140,9],[78,26,140,18,"callback"],[78,34,140,9],[78,36,140,64],[79,0,141,4],[79,30,141,14,"RCTAsyncStorage"],[79,45,141,4],[79,47,141,31],[79,78,141,4],[80,0,142,4],[80,13,142,11],[80,17,142,15,"Promise"],[80,24,142,11],[80,25,142,23],[80,35,142,24,"resolve"],[80,42,142,23],[80,44,142,33,"reject"],[80,50,142,23],[80,52,142,44],[81,0,143,6,"RCTAsyncStorage"],[81,8,143,6,"RCTAsyncStorage"],[81,23,143,21],[81,24,143,22,"clear"],[81,29,143,6],[81,30,143,28],[81,40,143,37,"error"],[81,45,143,28],[81,47,143,44],[82,0,144,8,"callback"],[82,10,144,8,"callback"],[82,18,144,16],[82,22,144,20,"callback"],[82,30,144,28],[82,31,144,29,"convertError"],[82,43,144,41],[82,44,144,42,"error"],[82,49,144,41],[82,50,144,28],[82,51,144,8],[84,0,145,8],[84,14,145,12,"error"],[84,19,145,17],[84,23,145,21,"convertError"],[84,35,145,33],[84,36,145,34,"error"],[84,41,145,33],[84,42,145,8],[84,44,145,42],[85,0,146,10,"reject"],[85,12,146,10,"reject"],[85,18,146,16],[85,19,146,17,"convertError"],[85,31,146,29],[85,32,146,30,"error"],[85,37,146,29],[85,38,146,16],[85,39,146,10],[86,0,147,9],[86,11,145,8],[86,17,147,15],[87,0,148,10,"resolve"],[87,12,148,10,"resolve"],[87,19,148,17],[87,20,148,18],[87,24,148,17],[87,25,148,10],[88,0,149,9],[89,0,150,7],[89,9,143,6],[90,0,151,5],[90,7,142,11],[90,8,142,4],[91,0,152,3],[91,5,29,21],[92,0,159,2,"getAllKeys"],[92,4,159,2,"getAllKeys"],[92,14,159,12],[92,16,159,14],[92,36,160,4,"callback"],[92,44,159,14],[92,46,161,13],[93,0,162,4],[93,30,162,14,"RCTAsyncStorage"],[93,45,162,4],[93,47,162,31],[93,78,162,4],[94,0,163,4],[94,13,163,11],[94,17,163,15,"Promise"],[94,24,163,11],[94,25,163,23],[94,35,163,24,"resolve"],[94,42,163,23],[94,44,163,33,"reject"],[94,50,163,23],[94,52,163,44],[95,0,164,6,"RCTAsyncStorage"],[95,8,164,6,"RCTAsyncStorage"],[95,23,164,21],[95,24,164,22,"getAllKeys"],[95,34,164,6],[95,35,164,33],[95,45,164,42,"error"],[95,50,164,33],[95,52,164,49,"keys"],[95,56,164,33],[95,58,164,55],[96,0,165,8,"callback"],[96,10,165,8,"callback"],[96,18,165,16],[96,22,165,20,"callback"],[96,30,165,28],[96,31,165,29,"convertError"],[96,43,165,41],[96,44,165,42,"error"],[96,49,165,41],[96,50,165,28],[96,52,165,50,"keys"],[96,56,165,28],[96,57,165,8],[98,0,166,8],[98,14,166,12,"error"],[98,19,166,8],[98,21,166,19],[99,0,167,10,"reject"],[99,12,167,10,"reject"],[99,18,167,16],[99,19,167,17,"convertError"],[99,31,167,29],[99,32,167,30,"error"],[99,37,167,29],[99,38,167,16],[99,39,167,10],[100,0,168,9],[100,11,166,8],[100,17,168,15],[101,0,169,10,"resolve"],[101,12,169,10,"resolve"],[101,19,169,17],[101,20,169,18,"keys"],[101,24,169,17],[101,25,169,10],[102,0,170,9],[103,0,171,7],[103,9,164,6],[104,0,172,5],[104,7,163,11],[104,8,163,4],[105,0,173,3],[105,5,29,21],[106,0,190,2,"flushGetRequests"],[106,4,190,2,"flushGetRequests"],[106,20,190,18],[106,22,190,20],[106,50,190,37],[107,0,191,4],[107,10,191,10,"getRequests"],[107,21,191,21],[107,24,191,24],[107,29,191,29,"_getRequests"],[107,41,191,4],[108,0,192,4],[108,10,192,10,"getKeys"],[108,17,192,17],[108,20,192,20],[108,25,192,25,"_getKeys"],[108,33,192,4],[109,0,194,4],[109,11,194,9,"_getRequests"],[109,23,194,4],[109,26,194,24],[109,28,194,4],[110,0,195,4],[110,11,195,9,"_getKeys"],[110,19,195,4],[110,22,195,20],[110,24,195,4],[111,0,197,4],[111,30,197,14,"RCTAsyncStorage"],[111,45,197,4],[111,47,197,31],[111,78,197,4],[112,0,198,4,"RCTAsyncStorage"],[112,6,198,4,"RCTAsyncStorage"],[112,21,198,19],[112,22,198,20,"multiGet"],[112,30,198,4],[112,31,198,29,"getKeys"],[112,38,198,4],[112,40,198,38],[112,50,198,47,"errors"],[112,56,198,38],[112,58,198,55,"result"],[112,64,198,38],[112,66,198,63],[113,0,205,6],[113,12,205,12,"map"],[113,15,205,15],[113,18,205,18],[113,20,205,6],[114,0,206,6,"result"],[114,8,206,6,"result"],[114,14,206,12],[114,18,207,8,"result"],[114,24,207,14],[114,25,207,15,"forEach"],[114,32,207,8],[114,33,207,23],[114,49,207,41],[115,0,207,41],[116,0,207,41],[116,14,207,25,"key"],[116,17,207,41],[117,0,207,41],[117,14,207,30,"value"],[117,19,207,41],[119,0,208,10,"map"],[119,10,208,10,"map"],[119,13,208,13],[119,14,208,14,"key"],[119,17,208,13],[119,18,208,10],[119,21,208,21,"value"],[119,26,208,10],[120,0,209,10],[120,17,209,17,"value"],[120,22,209,10],[121,0,210,9],[121,9,207,8],[121,10,206,6],[122,0,211,6],[122,12,211,12,"reqLength"],[122,21,211,21],[122,24,211,24,"getRequests"],[122,35,211,35],[122,36,211,36,"length"],[122,42,211,6],[124,0,212,6],[124,13,212,11],[124,17,212,15,"i"],[124,18,212,16],[124,21,212,19],[124,22,212,6],[124,24,212,22,"i"],[124,25,212,23],[124,28,212,26,"reqLength"],[124,37,212,6],[124,39,212,37,"i"],[124,40,212,38],[124,42,212,6],[124,44,212,42],[125,0,213,8],[125,14,213,14,"request"],[125,21,213,21],[125,24,213,24,"getRequests"],[125,35,213,35],[125,36,213,36,"i"],[125,37,213,35],[125,38,213,8],[126,0,214,8],[126,14,214,14,"requestKeys"],[126,25,214,25],[126,28,214,28,"request"],[126,35,214,35],[126,36,214,36,"keys"],[126,40,214,8],[127,0,215,8],[127,14,215,14,"requestResult"],[127,27,215,27],[127,30,215,30,"requestKeys"],[127,41,215,41],[127,42,215,42,"map"],[127,45,215,30],[127,46,215,46],[127,56,215,46,"key"],[127,59,215,49],[128,0,215,49],[128,19,215,53],[128,20,215,54,"key"],[128,23,215,53],[128,25,215,59,"map"],[128,28,215,62],[128,29,215,63,"key"],[128,32,215,62],[128,33,215,53],[128,34,215,49],[129,0,215,49],[129,11,215,30],[129,12,215,8],[130,0,216,8,"request"],[130,10,216,8,"request"],[130,17,216,15],[130,18,216,16,"callback"],[130,26,216,8],[130,30,216,28,"request"],[130,37,216,35],[130,38,216,36,"callback"],[130,46,216,28],[130,47,216,45],[130,51,216,28],[130,53,216,51,"requestResult"],[130,66,216,28],[130,67,216,8],[131,0,217,8,"request"],[131,10,217,8,"request"],[131,17,217,15],[131,18,217,16,"resolve"],[131,25,217,8],[131,29,217,27,"request"],[131,36,217,34],[131,37,217,35,"resolve"],[131,44,217,27],[131,45,217,43,"requestResult"],[131,58,217,27],[131,59,217,8],[132,0,218,7],[133,0,219,5],[133,7,198,4],[134,0,220,3],[134,5,29,21],[135,0,229,2,"multiGet"],[135,4,229,2,"multiGet"],[135,12,229,10],[135,14,229,12],[135,32,230,4,"keys"],[135,36,229,12],[135,38,231,4,"callback"],[135,46,229,12],[135,48,232,13],[136,0,232,13],[138,0,233,4],[138,10,233,8],[138,11,233,9],[138,16,233,14,"_immediate"],[138,26,233,4],[138,28,233,26],[139,0,234,6],[139,13,234,11,"_immediate"],[139,23,234,6],[139,26,234,24,"setImmediate"],[139,38,234,36],[139,39,234,37],[139,51,234,43],[140,0,235,8],[140,10,235,8],[140,15,235,12],[140,16,235,13,"_immediate"],[140,26,235,8],[140,29,235,26],[140,33,235,8],[142,0,236,8],[142,10,236,8],[142,15,236,12],[142,16,236,13,"flushGetRequests"],[142,32,236,8],[143,0,237,7],[143,9,234,36],[143,10,234,6],[144,0,238,5],[146,0,240,4],[146,10,240,10,"getRequest"],[146,20,240,20],[146,23,240,23],[147,0,241,6,"keys"],[147,8,241,6,"keys"],[147,12,241,10],[147,14,241,12,"keys"],[147,18,240,23],[148,0,242,6,"callback"],[148,8,242,6,"callback"],[148,16,242,14],[148,18,242,16,"callback"],[148,26,240,23],[149,0,244,6,"keyIndex"],[149,8,244,6,"keyIndex"],[149,16,244,14],[149,18,244,16],[149,23,244,21,"_getKeys"],[149,31,244,16],[149,32,244,30,"length"],[149,38,240,23],[150,0,245,6,"resolve"],[150,8,245,6,"resolve"],[150,15,245,13],[150,17,245,15],[150,21,240,23],[151,0,246,6,"reject"],[151,8,246,6,"reject"],[151,14,246,12],[151,16,246,14],[152,0,240,23],[152,7,240,4],[153,0,249,4],[153,10,249,10,"promiseResult"],[153,23,249,23],[153,26,249,26],[153,30,249,30,"Promise"],[153,37,249,26],[153,38,249,38],[153,48,249,39,"resolve"],[153,55,249,38],[153,57,249,48,"reject"],[153,63,249,38],[153,65,249,59],[154,0,250,6,"getRequest"],[154,8,250,6,"getRequest"],[154,18,250,16],[154,19,250,17,"resolve"],[154,26,250,6],[154,29,250,27,"resolve"],[154,36,250,6],[155,0,251,6,"getRequest"],[155,8,251,6,"getRequest"],[155,18,251,16],[155,19,251,17,"reject"],[155,25,251,6],[155,28,251,26,"reject"],[155,34,251,6],[156,0,252,5],[156,7,249,26],[156,8,249,4],[158,0,254,4],[158,11,254,9,"_getRequests"],[158,23,254,4],[158,24,254,22,"push"],[158,28,254,4],[158,29,254,27,"getRequest"],[158,39,254,4],[160,0,256,4,"keys"],[160,6,256,4,"keys"],[160,10,256,8],[160,11,256,9,"forEach"],[160,18,256,4],[160,19,256,17],[160,29,256,17,"key"],[160,32,256,20],[160,34,256,24],[161,0,257,6],[161,12,257,10],[161,17,257,14],[161,18,257,15,"_getKeys"],[161,26,257,10],[161,27,257,24,"indexOf"],[161,34,257,10],[161,35,257,32,"key"],[161,38,257,10],[161,44,257,41],[161,45,257,42],[161,46,257,6],[161,48,257,45],[162,0,258,8],[162,10,258,8],[162,15,258,12],[162,16,258,13,"_getKeys"],[162,24,258,8],[162,25,258,22,"push"],[162,29,258,8],[162,30,258,27,"key"],[162,33,258,8],[163,0,259,7],[164,0,260,5],[164,7,256,4],[165,0,262,4],[165,13,262,11,"promiseResult"],[165,26,262,4],[166,0,263,3],[166,5,29,21],[167,0,271,2,"multiSet"],[167,4,271,2,"multiSet"],[167,12,271,10],[167,14,271,12],[167,32,272,4,"keyValuePairs"],[167,45,271,12],[167,47,273,4,"callback"],[167,55,271,12],[167,57,274,13],[168,0,275,4],[168,30,275,14,"RCTAsyncStorage"],[168,45,275,4],[168,47,275,31],[168,78,275,4],[169,0,276,4],[169,13,276,11],[169,17,276,15,"Promise"],[169,24,276,11],[169,25,276,23],[169,35,276,24,"resolve"],[169,42,276,23],[169,44,276,33,"reject"],[169,50,276,23],[169,52,276,44],[170,0,277,6,"RCTAsyncStorage"],[170,8,277,6,"RCTAsyncStorage"],[170,23,277,21],[170,24,277,22,"multiSet"],[170,32,277,6],[170,33,277,31,"keyValuePairs"],[170,46,277,6],[170,48,277,46],[170,58,277,55,"errors"],[170,64,277,46],[170,66,277,63],[171,0,278,8],[171,14,278,14,"error"],[171,19,278,19],[171,22,278,22,"convertErrors"],[171,35,278,35],[171,36,278,36,"errors"],[171,42,278,35],[171,43,278,8],[172,0,279,8,"callback"],[172,10,279,8,"callback"],[172,18,279,16],[172,22,279,20,"callback"],[172,30,279,28],[172,31,279,29,"error"],[172,36,279,28],[172,37,279,8],[174,0,280,8],[174,14,280,12,"error"],[174,19,280,8],[174,21,280,19],[175,0,281,10,"reject"],[175,12,281,10,"reject"],[175,18,281,16],[175,19,281,17,"error"],[175,24,281,16],[175,25,281,10],[176,0,282,9],[176,11,280,8],[176,17,282,15],[177,0,283,10,"resolve"],[177,12,283,10,"resolve"],[177,19,283,17],[177,20,283,18],[177,24,283,17],[177,25,283,10],[178,0,284,9],[179,0,285,7],[179,9,277,6],[180,0,286,5],[180,7,276,11],[180,8,276,4],[181,0,287,3],[181,5,29,21],[182,0,294,2,"multiRemove"],[182,4,294,2,"multiRemove"],[182,15,294,13],[182,17,294,15],[182,38,295,4,"keys"],[182,42,294,15],[182,44,296,4,"callback"],[182,52,294,15],[182,54,297,13],[183,0,298,4],[183,30,298,14,"RCTAsyncStorage"],[183,45,298,4],[183,47,298,31],[183,78,298,4],[184,0,299,4],[184,13,299,11],[184,17,299,15,"Promise"],[184,24,299,11],[184,25,299,23],[184,35,299,24,"resolve"],[184,42,299,23],[184,44,299,33,"reject"],[184,50,299,23],[184,52,299,44],[185,0,300,6,"RCTAsyncStorage"],[185,8,300,6,"RCTAsyncStorage"],[185,23,300,21],[185,24,300,22,"multiRemove"],[185,35,300,6],[185,36,300,34,"keys"],[185,40,300,6],[185,42,300,40],[185,52,300,49,"errors"],[185,58,300,40],[185,60,300,57],[186,0,301,8],[186,14,301,14,"error"],[186,19,301,19],[186,22,301,22,"convertErrors"],[186,35,301,35],[186,36,301,36,"errors"],[186,42,301,35],[186,43,301,8],[187,0,302,8,"callback"],[187,10,302,8,"callback"],[187,18,302,16],[187,22,302,20,"callback"],[187,30,302,28],[187,31,302,29,"error"],[187,36,302,28],[187,37,302,8],[189,0,303,8],[189,14,303,12,"error"],[189,19,303,8],[189,21,303,19],[190,0,304,10,"reject"],[190,12,304,10,"reject"],[190,18,304,16],[190,19,304,17,"error"],[190,24,304,16],[190,25,304,10],[191,0,305,9],[191,11,303,8],[191,17,305,15],[192,0,306,10,"resolve"],[192,12,306,10,"resolve"],[192,19,306,17],[192,20,306,18],[192,24,306,17],[192,25,306,10],[193,0,307,9],[194,0,308,7],[194,9,300,6],[195,0,309,5],[195,7,299,11],[195,8,299,4],[196,0,310,3],[196,5,29,21],[197,0,320,2,"multiMerge"],[197,4,320,2,"multiMerge"],[197,14,320,12],[197,16,320,14],[197,36,321,4,"keyValuePairs"],[197,49,320,14],[197,51,322,4,"callback"],[197,59,320,14],[197,61,323,13],[198,0,324,4],[198,30,324,14,"RCTAsyncStorage"],[198,45,324,4],[198,47,324,31],[198,78,324,4],[199,0,325,4],[199,13,325,11],[199,17,325,15,"Promise"],[199,24,325,11],[199,25,325,23],[199,35,325,24,"resolve"],[199,42,325,23],[199,44,325,33,"reject"],[199,50,325,23],[199,52,325,44],[200,0,326,6,"RCTAsyncStorage"],[200,8,326,6,"RCTAsyncStorage"],[200,23,326,21],[200,24,326,22,"multiMerge"],[200,34,326,6],[200,35,326,33,"keyValuePairs"],[200,48,326,6],[200,50,326,48],[200,60,326,57,"errors"],[200,66,326,48],[200,68,326,65],[201,0,327,8],[201,14,327,14,"error"],[201,19,327,19],[201,22,327,22,"convertErrors"],[201,35,327,35],[201,36,327,36,"errors"],[201,42,327,35],[201,43,327,8],[202,0,328,8,"callback"],[202,10,328,8,"callback"],[202,18,328,16],[202,22,328,20,"callback"],[202,30,328,28],[202,31,328,29,"error"],[202,36,328,28],[202,37,328,8],[204,0,329,8],[204,14,329,12,"error"],[204,19,329,8],[204,21,329,19],[205,0,330,10,"reject"],[205,12,330,10,"reject"],[205,18,330,16],[205,19,330,17,"error"],[205,24,330,16],[205,25,330,10],[206,0,331,9],[206,11,329,8],[206,17,331,15],[207,0,332,10,"resolve"],[207,12,332,10,"resolve"],[207,19,332,17],[207,20,332,18],[207,24,332,17],[207,25,332,10],[208,0,333,9],[209,0,334,7],[209,9,326,6],[210,0,335,5],[210,7,325,11],[210,8,325,4],[211,0,336,3],[212,0,29,21],[212,3,29,0],[214,0,340,0],[214,6,340,4],[214,7,340,5,"RCTAsyncStorage"],[214,22,340,20],[214,23,340,21,"multiMerge"],[214,33,340,0],[214,35,340,33],[215,0,341,2],[215,11,341,9,"AsyncStorage"],[215,23,341,21],[215,24,341,22,"mergeItem"],[215,33,341,2],[216,0,342,2],[216,11,342,9,"AsyncStorage"],[216,23,342,21],[216,24,342,22,"multiMerge"],[216,34,342,2],[217,0,343,1],[219,0,345,0],[219,11,345,9,"convertErrors"],[219,24,345,0],[219,25,345,23,"errs"],[219,29,345,0],[219,31,345,29],[220,0,346,2],[220,8,346,6],[220,9,346,7,"errs"],[220,13,346,2],[220,15,346,13],[221,0,347,4],[221,13,347,11],[221,17,347,4],[222,0,348,3],[224,0,349,2],[224,11,349,9],[224,12,349,10,"Array"],[224,17,349,15],[224,18,349,16,"isArray"],[224,25,349,10],[224,26,349,24,"errs"],[224,30,349,10],[224,34,349,32,"errs"],[224,38,349,10],[224,41,349,39],[224,42,349,40,"errs"],[224,46,349,39],[224,47,349,9],[224,49,349,47,"map"],[224,52,349,9],[224,53,349,51],[224,63,349,51,"e"],[224,64,349,52],[225,0,349,52],[225,13,349,56,"convertError"],[225,25,349,68],[225,26,349,69,"e"],[225,27,349,68],[225,28,349,52],[226,0,349,52],[226,5,349,9],[226,6,349,2],[227,0,350,1],[229,0,352,0],[229,11,352,9,"convertError"],[229,23,352,0],[229,24,352,22,"error"],[229,29,352,0],[229,31,352,29],[230,0,353,2],[230,8,353,6],[230,9,353,7,"error"],[230,14,353,2],[230,16,353,14],[231,0,354,4],[231,13,354,11],[231,17,354,4],[232,0,355,3],[234,0,356,2],[234,8,356,8,"out"],[234,11,356,11],[234,14,356,14],[234,18,356,18,"Error"],[234,23,356,14],[234,24,356,24,"error"],[234,29,356,29],[234,30,356,30,"message"],[234,37,356,14],[234,38,356,2],[235,0,357,2,"out"],[235,4,357,2,"out"],[235,7,357,5],[235,8,357,6,"key"],[235,11,357,2],[235,14,357,12,"error"],[235,19,357,17],[235,20,357,18,"key"],[235,23,357,2],[236,0,358,2],[236,11,358,9,"out"],[236,14,358,2],[237,0,359,1],[239,0,361,0,"module"],[239,2,361,0,"module"],[239,8,361,6],[239,9,361,7,"exports"],[239,16,361,0],[239,19,361,17,"AsyncStorage"],[239,31,361,0]],"functionMap":{"names":["<global>","getItem","Promise$argument_0","RCTAsyncStorage.multiGet$argument_1","setItem","RCTAsyncStorage.multiSet$argument_1","removeItem","RCTAsyncStorage.multiRemove$argument_1","mergeItem","RCTAsyncStorage.multiMerge$argument_1","clear","RCTAsyncStorage.clear$argument_0","getAllKeys","RCTAsyncStorage.getAllKeys$argument_0","flushGetRequests","result.forEach$argument_0","requestKeys.map$argument_0","multiGet","setImmediate$argument_0","keys.forEach$argument_0","multiSet","multiRemove","multiMerge","convertErrors","map$argument_0","convertError"],"mappings":"AAA;WCsC;uBCK;sCCC;ODU;KDC;GDC;WIO;uBFM;+CGC;OHQ;KEC;GJC;cMO;uBJK;yCKC;OLQ;KIC;GNC;aQU;uBNM;iDOC;OPQ;KMC;GRC;SUS;uBRE;4BSC;OTO;KQC;GVC;cYO;uBVI;iCWC;OXO;KUC;GZC;oBciB;sCXQ;uBYS;SZG;8CaK,sBb;KWI;GdC;YiBS;qCCK;ODG;sCfY;KeG;iBEI;KFI;GjBG;YoBQ;uBlBK;8CGC;OHQ;KkBC;GpBC;eqBO;uBnBK;wCKC;OLQ;KmBC;GrBC;csBU;uBpBK;gDOC;OPQ;KoBC;GtBC;AuBS;mDCI,oBD;CvBC;AyBE;CzBO"}},"type":"js/module"}]}