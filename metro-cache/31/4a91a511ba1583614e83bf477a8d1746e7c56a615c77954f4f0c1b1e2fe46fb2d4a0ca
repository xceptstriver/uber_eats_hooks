{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":108,"column":0}},{"start":{"line":1,"column":0},"end":{"line":108,"column":0}}]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":108,"column":0}}]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":108,"column":0}}]}},{"name":"@react-native-firebase/app/lib/common","data":{"asyncType":null,"locs":[{"start":{"line":85,"column":11},"end":{"line":85,"column":17},"identifierName":"Base64"},{"start":{"line":38,"column":9},"end":{"line":38,"column":17},"identifierName":"isString"},{"start":{"line":44,"column":35},"end":{"line":44,"column":41},"identifierName":"Base64"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var FirestoreBlob = function () {\n    function FirestoreBlob() {\n      var internal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var binaryString = arguments.length > 1 ? arguments[1] : undefined;\n      (0, _classCallCheck2.default)(this, FirestoreBlob);\n\n      if (internal === false) {\n        throw new Error('firebase.firestore.Blob constructor is private, use Blob.<field>() instead.');\n      }\n\n      this._binaryString = binaryString;\n    }\n\n    (0, _createClass2.default)(FirestoreBlob, [{\n      key: \"isEqual\",\n      value: function isEqual(blob) {\n        if (!(blob instanceof FirestoreBlob)) {\n          throw new Error('firestore.Blob.isEqual expects an instance of Blob');\n        }\n\n        return this._binaryString === blob._binaryString;\n      }\n    }, {\n      key: \"toBase64\",\n      value: function toBase64() {\n        return _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").Base64.btoa(this._binaryString);\n      }\n    }, {\n      key: \"toUint8Array\",\n      value: function toUint8Array() {\n        return new Uint8Array(this._binaryString.split('').map(function (c) {\n          return c.charCodeAt(0);\n        }));\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return \"firestore.Blob(base64: \" + this.toBase64() + \")\";\n      }\n    }], [{\n      key: \"fromBase64String\",\n      value: function fromBase64String(base64) {\n        if (!(0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isString)(base64) || base64.length < 1) {\n          throw new Error('firestore.Blob.fromBase64String expects a string of at least 1 character in length');\n        }\n\n        return new FirestoreBlob(true, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").Base64.atob(base64));\n      }\n    }, {\n      key: \"fromUint8Array\",\n      value: function fromUint8Array(array) {\n        if (!(array instanceof Uint8Array)) {\n          throw new Error('firestore.Blob.fromUint8Array expects an instance of Uint8Array');\n        }\n\n        return new FirestoreBlob(true, Array.prototype.map.call(array, function ($) {\n          return String.fromCharCode($);\n        }).join(''));\n      }\n    }]);\n    return FirestoreBlob;\n  }();\n\n  exports.default = FirestoreBlob;\n});","lineCount":75,"map":[[11,6,20,21,"FirestoreBlob"],[11,19],[12,0,21,2],[12,29,21,46],[13,0,21,46],[13,10,21,14,"internal"],[13,18,21,46],[13,89,21,25],[13,94,21,46],[14,0,21,46],[14,10,21,32,"binaryString"],[14,22,21,46],[15,0,21,46],[17,0,22,4],[17,10,22,8,"internal"],[17,18,22,16],[17,23,22,21],[17,28,22,4],[17,30,22,28],[18,0,23,6],[18,14,23,12],[18,18,23,16,"Error"],[18,23,23,12],[18,24,24,8],[18,101,23,12],[18,102,23,6],[19,0,26,5],[21,0,28,4],[21,11,28,9,"_binaryString"],[21,24,28,4],[21,27,28,25,"binaryString"],[21,39,28,4],[22,0,29,3],[26,13,70,2],[26,30,70,10,"blob"],[26,34,70,2],[26,36,70,16],[27,0,71,4],[27,12,71,8],[27,14,71,10,"blob"],[27,18,71,14],[27,30,71,26,"FirestoreBlob"],[27,43,71,8],[27,44,71,4],[27,46,71,42],[28,0,72,6],[28,16,72,12],[28,20,72,16,"Error"],[28,25,72,12],[28,26,72,22],[28,78,72,12],[28,79,72,6],[29,0,73,5],[31,0,75,4],[31,15,75,11],[31,20,75,16,"_binaryString"],[31,33,75,11],[31,38,75,34,"blob"],[31,42,75,38],[31,43,75,39,"_binaryString"],[31,56,75,4],[32,0,76,3],[35,13,84,2],[35,33,84,13],[36,0,85,4],[36,15,85,11,"Base64"],[36,94,85,18,"btoa"],[36,98,85,11],[36,99,85,23],[36,104,85,28,"_binaryString"],[36,117,85,11],[36,118,85,4],[37,0,86,3],[40,13,94,2],[40,37,94,17],[41,0,95,4],[41,15,95,11],[41,19,95,15,"Uint8Array"],[41,29,95,11],[41,30,95,26],[41,35,95,31,"_binaryString"],[41,48,95,26],[41,49,95,45,"split"],[41,54,95,26],[41,55,95,51],[41,57,95,26],[41,59,95,55,"map"],[41,62,95,26],[41,63,95,59],[41,73,95,59,"c"],[41,74,95,60],[42,0,95,60],[42,17,95,64,"c"],[42,18,95,65],[42,19,95,66,"charCodeAt"],[42,29,95,64],[42,30,95,77],[42,31,95,64],[42,32,95,60],[43,0,95,60],[43,9,95,26],[43,10,95,11],[43,11,95,4],[44,0,96,3],[47,13,104,2],[47,33,104,13],[48,0,105,4],[48,43,105,37],[48,48,105,42,"toBase64"],[48,56,105,37],[48,58,105,4],[49,0,106,3],[52,13,37,2],[52,39,37,26,"base64"],[52,45,37,2],[52,47,37,34],[53,0,38,4],[53,12,38,8],[53,13,38,9],[53,99,38,18,"base64"],[53,105,38,9],[53,106,38,8],[53,110,38,29,"base64"],[53,116,38,35],[53,117,38,36,"length"],[53,123,38,29],[53,126,38,45],[53,127,38,4],[53,129,38,48],[54,0,39,6],[54,16,39,12],[54,20,39,16,"Error"],[54,25,39,12],[54,26,40,8],[54,110,39,12],[54,111,39,6],[55,0,42,5],[57,0,44,4],[57,15,44,11],[57,19,44,15,"FirestoreBlob"],[57,32,44,11],[57,33,44,29],[57,37,44,11],[57,39,44,35,"Base64"],[57,118,44,42,"atob"],[57,122,44,35],[57,123,44,47,"base64"],[57,129,44,35],[57,130,44,11],[57,131,44,4],[58,0,45,3],[61,13,53,2],[61,37,53,24,"array"],[61,42,53,2],[61,44,53,31],[62,0,54,4],[62,12,54,8],[62,14,54,10,"array"],[62,19,54,15],[62,31,54,27,"Uint8Array"],[62,41,54,8],[62,42,54,4],[62,44,54,40],[63,0,55,6],[63,16,55,12],[63,20,55,16,"Error"],[63,25,55,12],[63,26,55,22],[63,91,55,12],[63,92,55,6],[64,0,56,5],[66,0,58,4],[66,15,58,11],[66,19,58,15,"FirestoreBlob"],[66,32,58,11],[66,33,59,6],[66,37,58,11],[66,39,60,6,"Array"],[66,44,60,11],[66,45,60,12,"prototype"],[66,54,60,6],[66,55,60,22,"map"],[66,58,60,6],[66,59,60,26,"call"],[66,63,60,6],[66,64,60,31,"array"],[66,69,60,6],[66,71,60,38],[66,81,60,38,"$"],[66,82,60,39],[67,0,60,39],[67,17,60,43,"String"],[67,23,60,49],[67,24,60,50,"fromCharCode"],[67,36,60,43],[67,37,60,63,"$"],[67,38,60,43],[67,39,60,39],[68,0,60,39],[68,9,60,6],[68,11,60,67,"join"],[68,15,60,6],[68,16,60,72],[68,18,60,6],[68,19,58,11],[68,20,58,4],[69,0,62,3]],"functionMap":{"names":["<global>","FirestoreBlob","constructor","fromBase64String","fromUint8Array","Array.prototype.map.call$argument_1","isEqual","toBase64","toUint8Array","_binaryString.split.map$argument_0","toString"],"mappings":"AAA;eCmB;ECC;GDQ;EEQ;GFQ;EGQ;sCCO,2BD;GHE;EKQ;GLM;EMQ;GNE;EOQ;2DCC,oBD;GPC;ESQ;GTE;CDC"}},"type":"js/module"}]}