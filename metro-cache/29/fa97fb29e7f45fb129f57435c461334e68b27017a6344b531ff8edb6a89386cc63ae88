{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":317,"column":0}},{"start":{"line":1,"column":0},"end":{"line":317,"column":0}},{"start":{"line":1,"column":0},"end":{"line":317,"column":0}},{"start":{"line":7,"column":0},"end":{"line":7,"column":60}}]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":317,"column":0}}]}},{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":317,"column":0}}]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":317,"column":0}}]}},{"name":"query-string","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":1,"column":44}}]}},{"name":"./checkLegacyPathConfig","data":{"asyncType":null,"locs":[{"start":{"line":7,"column":0},"end":{"line":7,"column":60}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getPathFromState;\n\n  var _toConsumableArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _extends2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _slicedToArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var queryString = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"query-string\"));\n\n  var _checkLegacyPathConfig = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[5], \"./checkLegacyPathConfig\"));\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  var getActiveRoute = function getActiveRoute(state) {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n\n    if (route.state) {\n      return getActiveRoute(route.state);\n    }\n\n    return route;\n  };\n\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(\"Got 'undefined' for the navigation state. You must pass a valid state object.\");\n    }\n\n    var _checkLegacyPathConfi = (0, _checkLegacyPathConfig.default)(options),\n        _checkLegacyPathConfi2 = (0, _slicedToArray2.default)(_checkLegacyPathConfi, 2),\n        legacy = _checkLegacyPathConfi2[0],\n        compatOptions = _checkLegacyPathConfi2[1];\n\n    var configs = compatOptions ? createNormalizedConfigs(legacy, compatOptions.screens) : {};\n    var path = '/';\n    var current = state;\n    var allParams = {};\n\n    var _loop = function _loop() {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var pattern = void 0;\n      var focusedParams = void 0;\n      var focusedRoute = getActiveRoute(state);\n      var currentOptions = configs;\n      var nestedRouteNames = [];\n      var hasNext = true;\n\n      while (route.name in currentOptions && hasNext) {\n        pattern = currentOptions[route.name].pattern;\n        nestedRouteNames.push(route.name);\n\n        if (route.params) {\n          (function () {\n            var _currentOptions$route;\n\n            var stringify = (_currentOptions$route = currentOptions[route.name]) == null ? void 0 : _currentOptions$route.stringify;\n            var currentParams = fromEntries(Object.entries(route.params).map(function (_ref) {\n              var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n                  key = _ref2[0],\n                  value = _ref2[1];\n\n              return [key, stringify != null && stringify[key] ? stringify[key](value) : String(value)];\n            }));\n\n            if (pattern) {\n              (0, _extends2.default)(allParams, currentParams);\n            }\n\n            if (focusedRoute === route) {\n              var _pattern;\n\n              focusedParams = (0, _extends2.default)({}, currentParams);\n              (_pattern = pattern) == null ? void 0 : _pattern.split('/').filter(function (p) {\n                return p.startsWith(':');\n              }).forEach(function (p) {\n                var name = getParamName(p);\n\n                if (focusedParams) {\n                  delete focusedParams[name];\n                }\n              });\n            }\n          })();\n        }\n\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            hasNext = false;\n          }\n        }\n      }\n\n      if (pattern === undefined) {\n        pattern = nestedRouteNames.join('/');\n      }\n\n      if (currentOptions[route.name] !== undefined) {\n        path += pattern.split('/').map(function (p) {\n          var name = getParamName(p);\n\n          if (p === '*') {\n            if (legacy) {\n              throw new Error(\"Please update your config to the new format to use wildcard pattern ('*'). https://reactnavigation.org/docs/5.x/configuring-links/#updating-config\");\n            }\n\n            return route.name;\n          }\n\n          if (p.startsWith(':')) {\n            var _value = allParams[name];\n\n            if (_value === undefined && p.endsWith('?')) {\n              return '';\n            }\n\n            return encodeURIComponent(_value);\n          }\n\n          return encodeURIComponent(p);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n\n      if (!focusedParams) {\n        focusedParams = focusedRoute.params;\n      }\n\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            delete focusedParams[param];\n          }\n        }\n\n        var query = queryString.stringify(focusedParams);\n\n        if (query) {\n          path += \"?\" + query;\n        }\n      }\n\n      current = route.state;\n    };\n\n    while (current) {\n      _loop();\n    }\n\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n    return path;\n  }\n\n  var fromEntries = function fromEntries(entries) {\n    return entries.reduce(function (acc, _ref3) {\n      var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n          k = _ref4[0],\n          v = _ref4[1];\n\n      if (acc.hasOwnProperty(k)) {\n        throw new Error(\"A value for key '\" + k + \"' already exists in the object.\");\n      }\n\n      acc[k] = v;\n      return acc;\n    }, {});\n  };\n\n  var getParamName = function getParamName(pattern) {\n    return pattern.replace(/^:/, '').replace(/\\?$/, '');\n  };\n\n  var joinPaths = function joinPaths() {\n    var _ref5;\n\n    for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n      paths[_key] = arguments[_key];\n    }\n\n    return (_ref5 = []).concat.apply(_ref5, (0, _toConsumableArray2.default)(paths.map(function (p) {\n      return p.split('/');\n    }))).filter(Boolean).join('/');\n  };\n\n  var createConfigItem = function createConfigItem(legacy, config, parentPattern) {\n    var _pattern3;\n\n    if (typeof config === 'string') {\n      var _pattern2 = parentPattern ? joinPaths(parentPattern, config) : config;\n\n      return {\n        pattern: _pattern2\n      };\n    }\n\n    var pattern;\n\n    if (legacy) {\n      pattern = config.exact !== true && parentPattern && config.path ? joinPaths(parentPattern, config.path) : config.path;\n    } else {\n      if (config.exact && config.path === undefined) {\n        throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n      }\n\n      pattern = config.exact !== true ? joinPaths(parentPattern || '', config.path || '') : config.path || '';\n    }\n\n    var screens = config.screens ? createNormalizedConfigs(legacy, config.screens, pattern) : undefined;\n    return {\n      pattern: (_pattern3 = pattern) == null ? void 0 : _pattern3.split('/').filter(Boolean).join('/'),\n      stringify: config.stringify,\n      screens: screens\n    };\n  };\n\n  var createNormalizedConfigs = function createNormalizedConfigs(legacy, options, pattern) {\n    return fromEntries(Object.entries(options).map(function (_ref6) {\n      var _ref7 = (0, _slicedToArray2.default)(_ref6, 2),\n          name = _ref7[0],\n          c = _ref7[1];\n\n      var result = createConfigItem(legacy, c, pattern);\n      return [name, result];\n    }));\n  };\n});","lineCount":246,"map":[[13,0,1,0],[15,0,7,0],[21,0,22,0],[21,6,22,6,"getActiveRoute"],[21,20,22,20],[21,23,22,23],[21,32,22,6,"getActiveRoute"],[21,46,22,23],[21,47,22,24,"state"],[21,52,22,23],[21,54,22,76],[22,0,23,2],[22,8,23,8,"route"],[22,13,23,13],[22,16,24,4],[22,23,24,11,"state"],[22,28,24,16],[22,29,24,17,"index"],[22,34,24,4],[22,39,24,27],[22,47,24,4],[22,50,25,8,"state"],[22,55,25,13],[22,56,25,14,"routes"],[22,62,25,8],[22,63,25,21,"state"],[22,68,25,26],[22,69,25,27,"index"],[22,74,25,8],[22,75,24,4],[22,78,26,8,"state"],[22,83,26,13],[22,84,26,14,"routes"],[22,90,26,8],[22,91,26,21,"state"],[22,96,26,26],[22,97,26,27,"routes"],[22,103,26,21],[22,104,26,34,"length"],[22,110,26,21],[22,113,26,43],[22,114,26,8],[22,115,23,2],[24,0,28,2],[24,8,28,6,"route"],[24,13,28,11],[24,14,28,12,"state"],[24,19,28,2],[24,21,28,19],[25,0,29,4],[25,13,29,11,"getActiveRoute"],[25,27,29,25],[25,28,29,26,"route"],[25,33,29,31],[25,34,29,32,"state"],[25,39,29,25],[25,40,29,4],[26,0,30,3],[28,0,32,2],[28,11,32,9,"route"],[28,16,32,2],[29,0,33,1],[29,3,22,0],[31,0,64,15],[31,11,64,24,"getPathFromState"],[31,27,64,15],[31,28,65,2,"state"],[31,33,64,15],[31,35,66,2,"options"],[31,42,64,15],[31,44,67,10],[32,0,68,2],[32,8,68,6,"state"],[32,13,68,11],[32,17,68,15],[32,21,68,2],[32,23,68,21],[33,0,69,4],[33,12,69,10,"Error"],[33,17,69,15],[33,18,70,6],[33,97,69,15],[33,98,69,4],[34,0,72,3],[36,0,74,2],[36,32,74,34],[36,68,74,56,"options"],[36,75,74,34],[36,76,74,2],[37,0,74,2],[38,0,74,2],[38,8,74,9,"legacy"],[38,14,74,2],[39,0,74,2],[39,8,74,17,"compatOptions"],[39,21,74,2],[41,0,77,2],[41,8,77,8,"configs"],[41,15,77,43],[41,18,77,46,"compatOptions"],[41,31,77,59],[41,34,78,6,"createNormalizedConfigs"],[41,57,78,29],[41,58,78,30,"legacy"],[41,64,78,29],[41,66,78,38,"compatOptions"],[41,79,78,51],[41,80,78,52,"screens"],[41,87,78,29],[41,88,77,59],[41,91,79,6],[41,93,77,2],[42,0,81,2],[42,8,81,6,"path"],[42,12,81,10],[42,15,81,13],[42,18,81,2],[43,0,82,2],[43,8,82,6,"current"],[43,15,82,32],[43,18,82,35,"state"],[43,23,82,2],[44,0,84,2],[44,8,84,8,"allParams"],[44,17,84,38],[44,20,84,41],[44,22,84,2],[46,0,67,10],[47,0,87,4],[47,10,87,8,"index"],[47,15,87,13],[47,18,87,16],[47,25,87,23,"current"],[47,32,87,30],[47,33,87,31,"index"],[47,38,87,16],[47,43,87,41],[47,51,87,16],[47,54,87,52,"current"],[47,61,87,59],[47,62,87,60,"index"],[47,67,87,16],[47,70,87,68],[47,71,87,4],[48,0,88,4],[48,10,88,8,"route"],[48,15,88,13],[48,18,88,16,"current"],[48,25,88,23],[48,26,88,24,"routes"],[48,32,88,16],[48,33,88,31,"index"],[48,38,88,16],[48,39,88,4],[49,0,92,4],[49,10,92,8,"pattern"],[49,17,92,35],[49,26,92,4],[50,0,94,4],[50,10,94,8,"focusedParams"],[50,23,94,54],[50,32,94,4],[51,0,95,4],[51,10,95,8,"focusedRoute"],[51,22,95,20],[51,25,95,23,"getActiveRoute"],[51,39,95,37],[51,40,95,38,"state"],[51,45,95,37],[51,46,95,4],[52,0,96,4],[52,10,96,8,"currentOptions"],[52,24,96,22],[52,27,96,25,"configs"],[52,34,96,4],[53,0,99,4],[53,10,99,8,"nestedRouteNames"],[53,26,99,24],[53,29,99,27],[53,31,99,4],[54,0,101,4],[54,10,101,8,"hasNext"],[54,17,101,15],[54,20,101,18],[54,24,101,4],[56,0,103,4],[56,13,103,11,"route"],[56,18,103,16],[56,19,103,17,"name"],[56,23,103,11],[56,27,103,25,"currentOptions"],[56,41,103,11],[56,45,103,43,"hasNext"],[56,52,103,4],[56,54,103,52],[57,0,104,6,"pattern"],[57,8,104,6,"pattern"],[57,15,104,13],[57,18,104,16,"currentOptions"],[57,32,104,30],[57,33,104,31,"route"],[57,38,104,36],[57,39,104,37,"name"],[57,43,104,30],[57,44,104,16],[57,45,104,43,"pattern"],[57,52,104,6],[58,0,106,6,"nestedRouteNames"],[58,8,106,6,"nestedRouteNames"],[58,24,106,22],[58,25,106,23,"push"],[58,29,106,6],[58,30,106,28,"route"],[58,35,106,33],[58,36,106,34,"name"],[58,40,106,6],[60,0,108,6],[60,12,108,10,"route"],[60,17,108,15],[60,18,108,16,"params"],[60,24,108,6],[60,26,108,24],[61,0,108,24],[62,0,108,24],[64,0,109,8],[64,16,109,14,"stringify"],[64,25,109,23],[64,53,109,26,"currentOptions"],[64,67,109,40],[64,68,109,41,"route"],[64,73,109,46],[64,74,109,47,"name"],[64,78,109,40],[64,79,109,23],[64,100,109,26],[64,122,109,54,"stringify"],[64,131,109,8],[65,0,111,8],[65,16,111,14,"currentParams"],[65,29,111,27],[65,32,111,30,"fromEntries"],[65,43,111,41],[65,44,112,10,"Object"],[65,50,112,16],[65,51,112,17,"entries"],[65,58,112,10],[65,59,112,25,"route"],[65,64,112,30],[65,65,112,31,"params"],[65,71,112,10],[65,73,112,39,"map"],[65,76,112,10],[65,77,112,43],[66,0,112,43],[67,0,112,43],[67,18,112,45,"key"],[67,21,112,43],[68,0,112,43],[68,18,112,50,"value"],[68,23,112,43],[70,0,112,43],[70,21,112,61],[70,22,113,12,"key"],[70,25,112,61],[70,27,114,12,"stringify"],[70,36,114,21],[70,44,114,12],[70,48,114,12,"stringify"],[70,57,114,21],[70,58,114,24,"key"],[70,61,114,21],[70,62,114,12],[70,65,114,31,"stringify"],[70,74,114,40],[70,75,114,41,"key"],[70,78,114,40],[70,79,114,31],[70,80,114,46,"value"],[70,85,114,31],[70,86,114,12],[70,89,114,55,"String"],[70,95,114,61],[70,96,114,62,"value"],[70,101,114,61],[70,102,112,61],[70,103,112,43],[71,0,112,43],[71,13,112,10],[71,14,111,41],[71,15,111,8],[73,0,118,8],[73,16,118,12,"pattern"],[73,23,118,8],[73,25,118,21],[74,0,119,10],[74,37,119,24,"allParams"],[74,46,119,10],[74,48,119,35,"currentParams"],[74,61,119,10],[75,0,120,9],[77,0,122,8],[77,16,122,12,"focusedRoute"],[77,28,122,24],[77,33,122,29,"route"],[77,38,122,8],[77,40,122,36],[78,0,122,36],[80,0,125,10,"focusedParams"],[80,14,125,10,"focusedParams"],[80,27,125,23],[80,57,125,31,"currentParams"],[80,70,125,23],[80,71,125,10],[81,0,127,10],[81,26,127,10,"pattern"],[81,33,127,17],[81,42,127,10],[81,63,128,14,"split"],[81,68,127,10],[81,69,128,20],[81,72,127,10],[81,74,129,13,"filter"],[81,80,127,10],[81,81,129,20],[81,91,129,21,"p"],[81,92,129,20],[82,0,129,20],[82,23,129,27,"p"],[82,24,129,28],[82,25,129,29,"startsWith"],[82,35,129,27],[82,36,129,40],[82,39,129,27],[82,40,129,20],[83,0,129,20],[83,15,127,10],[83,17,131,13,"forEach"],[83,24,127,10],[83,25,131,21],[83,35,131,22,"p"],[83,36,131,21],[83,38,131,28],[84,0,132,14],[84,20,132,20,"name"],[84,24,132,24],[84,27,132,27,"getParamName"],[84,39,132,39],[84,40,132,40,"p"],[84,41,132,39],[84,42,132,14],[86,0,135,14],[86,20,135,18,"focusedParams"],[86,33,135,14],[86,35,135,33],[87,0,137,16],[87,25,137,23,"focusedParams"],[87,38,137,36],[87,39,137,37,"name"],[87,43,137,36],[87,44,137,16],[88,0,138,15],[89,0,139,13],[89,15,127,10],[90,0,140,9],[91,0,108,24],[92,0,141,7],[94,0,144,6],[94,12,144,10],[94,13,144,11,"currentOptions"],[94,27,144,25],[94,28,144,26,"route"],[94,33,144,31],[94,34,144,32,"name"],[94,38,144,25],[94,39,144,11],[94,40,144,38,"screens"],[94,47,144,10],[94,51,144,49,"route"],[94,56,144,54],[94,57,144,55,"state"],[94,62,144,49],[94,67,144,65,"undefined"],[94,76,144,6],[94,78,144,76],[95,0,145,8,"hasNext"],[95,10,145,8,"hasNext"],[95,17,145,15],[95,20,145,18],[95,25,145,8],[96,0,146,7],[96,9,144,6],[96,15,146,13],[97,0,147,8,"index"],[97,10,147,8,"index"],[97,15,147,13],[97,18,148,10],[97,25,148,17,"route"],[97,30,148,22],[97,31,148,23,"state"],[97,36,148,17],[97,37,148,29,"index"],[97,42,148,10],[97,47,148,39],[97,55,148,10],[97,58,149,14,"route"],[97,63,149,19],[97,64,149,20,"state"],[97,69,149,14],[97,70,149,26,"index"],[97,75,148,10],[97,78,150,14,"route"],[97,83,150,19],[97,84,150,20,"state"],[97,89,150,14],[97,90,150,26,"routes"],[97,96,150,14],[97,97,150,33,"length"],[97,103,150,14],[97,106,150,42],[97,107,147,8],[98,0,152,8],[98,14,152,14,"nextRoute"],[98,23,152,23],[98,26,152,26,"route"],[98,31,152,31],[98,32,152,32,"state"],[98,37,152,26],[98,38,152,38,"routes"],[98,44,152,26],[98,45,152,45,"index"],[98,50,152,26],[98,51,152,8],[99,0,153,8],[99,14,153,14,"nestedConfig"],[99,26,153,26],[99,29,153,29,"currentOptions"],[99,43,153,43],[99,44,153,44,"route"],[99,49,153,49],[99,50,153,50,"name"],[99,54,153,43],[99,55,153,29],[99,56,153,56,"screens"],[99,63,153,8],[101,0,156,8],[101,14,156,12,"nestedConfig"],[101,26,156,24],[101,30,156,28,"nextRoute"],[101,39,156,37],[101,40,156,38,"name"],[101,44,156,28],[101,48,156,46,"nestedConfig"],[101,60,156,8],[101,62,156,60],[102,0,157,10,"route"],[102,12,157,10,"route"],[102,17,157,15],[102,20,157,18,"nextRoute"],[102,29,157,10],[103,0,158,10,"currentOptions"],[103,12,158,10,"currentOptions"],[103,26,158,24],[103,29,158,27,"nestedConfig"],[103,41,158,10],[104,0,159,9],[104,11,156,8],[104,17,159,15],[105,0,161,10,"hasNext"],[105,12,161,10,"hasNext"],[105,19,161,17],[105,22,161,20],[105,27,161,10],[106,0,162,9],[107,0,163,7],[108,0,164,5],[110,0,166,4],[110,10,166,8,"pattern"],[110,17,166,15],[110,22,166,20,"undefined"],[110,31,166,4],[110,33,166,31],[111,0,167,6,"pattern"],[111,8,167,6,"pattern"],[111,15,167,13],[111,18,167,16,"nestedRouteNames"],[111,34,167,32],[111,35,167,33,"join"],[111,39,167,16],[111,40,167,38],[111,43,167,16],[111,44,167,6],[112,0,168,5],[114,0,170,4],[114,10,170,8,"currentOptions"],[114,24,170,22],[114,25,170,23,"route"],[114,30,170,28],[114,31,170,29,"name"],[114,35,170,22],[114,36,170,8],[114,41,170,39,"undefined"],[114,50,170,4],[114,52,170,50],[115,0,171,6,"path"],[115,8,171,6,"path"],[115,12,171,10],[115,16,171,14,"pattern"],[115,23,171,21],[115,24,172,9,"split"],[115,29,171,14],[115,30,172,15],[115,33,171,14],[115,35,173,9,"map"],[115,38,171,14],[115,39,173,13],[115,49,173,14,"p"],[115,50,173,13],[115,52,173,20],[116,0,174,10],[116,14,174,16,"name"],[116,18,174,20],[116,21,174,23,"getParamName"],[116,33,174,35],[116,34,174,36,"p"],[116,35,174,35],[116,36,174,10],[118,0,179,10],[118,14,179,14,"p"],[118,15,179,15],[118,20,179,20],[118,23,179,10],[118,25,179,25],[119,0,180,12],[119,16,180,16,"legacy"],[119,22,180,12],[119,24,180,24],[120,0,181,14],[120,20,181,20],[120,24,181,24,"Error"],[120,29,181,20],[120,30,182,16],[120,178,181,20],[120,179,181,14],[121,0,184,13],[123,0,186,12],[123,19,186,19,"route"],[123,24,186,24],[123,25,186,25,"name"],[123,29,186,12],[124,0,187,11],[126,0,190,10],[126,14,190,14,"p"],[126,15,190,15],[126,16,190,16,"startsWith"],[126,26,190,14],[126,27,190,27],[126,30,190,14],[126,31,190,10],[126,33,190,33],[127,0,191,12],[127,16,191,18,"value"],[127,22,191,23],[127,25,191,26,"allParams"],[127,34,191,35],[127,35,191,36,"name"],[127,39,191,35],[127,40,191,12],[129,0,193,12],[129,16,193,16,"value"],[129,22,193,21],[129,27,193,26,"undefined"],[129,36,193,16],[129,40,193,39,"p"],[129,41,193,40],[129,42,193,41,"endsWith"],[129,50,193,39],[129,51,193,50],[129,54,193,39],[129,55,193,12],[129,57,193,56],[130,0,195,14],[130,21,195,21],[130,23,195,14],[131,0,196,13],[133,0,198,12],[133,19,198,19,"encodeURIComponent"],[133,37,198,37],[133,38,198,38,"value"],[133,44,198,37],[133,45,198,12],[134,0,199,11],[136,0,201,10],[136,17,201,17,"encodeURIComponent"],[136,35,201,35],[136,36,201,36,"p"],[136,37,201,35],[136,38,201,10],[137,0,202,9],[137,9,171,14],[137,11,203,9,"join"],[137,15,171,14],[137,16,203,14],[137,19,171,14],[137,20,171,6],[138,0,204,5],[138,7,170,4],[138,13,204,11],[139,0,205,6,"path"],[139,8,205,6,"path"],[139,12,205,10],[139,16,205,14,"encodeURIComponent"],[139,34,205,32],[139,35,205,33,"route"],[139,40,205,38],[139,41,205,39,"name"],[139,45,205,32],[139,46,205,6],[140,0,206,5],[142,0,208,4],[142,10,208,8],[142,11,208,9,"focusedParams"],[142,24,208,4],[142,26,208,24],[143,0,209,6,"focusedParams"],[143,8,209,6,"focusedParams"],[143,21,209,19],[143,24,209,22,"focusedRoute"],[143,36,209,34],[143,37,209,35,"params"],[143,43,209,6],[144,0,210,5],[146,0,212,4],[146,10,212,8,"route"],[146,15,212,13],[146,16,212,14,"state"],[146,21,212,4],[146,23,212,21],[147,0,213,6,"path"],[147,8,213,6,"path"],[147,12,213,10],[147,16,213,14],[147,19,213,6],[148,0,214,5],[148,7,212,4],[148,13,214,11],[148,17,214,15,"focusedParams"],[148,30,214,11],[148,32,214,30],[149,0,215,6],[149,13,215,11],[149,17,215,15,"param"],[149,22,215,6],[149,26,215,24,"focusedParams"],[149,39,215,6],[149,41,215,39],[150,0,216,8],[150,14,216,12,"focusedParams"],[150,27,216,25],[150,28,216,26,"param"],[150,33,216,25],[150,34,216,12],[150,39,216,37],[150,50,216,8],[150,52,216,50],[151,0,218,10],[151,19,218,17,"focusedParams"],[151,32,218,30],[151,33,218,31,"param"],[151,38,218,30],[151,39,218,10],[152,0,219,9],[153,0,220,7],[155,0,222,6],[155,12,222,12,"query"],[155,17,222,17],[155,20,222,20,"queryString"],[155,31,222,31],[155,32,222,32,"stringify"],[155,41,222,20],[155,42,222,42,"focusedParams"],[155,55,222,20],[155,56,222,6],[157,0,224,6],[157,12,224,10,"query"],[157,17,224,6],[157,19,224,17],[158,0,225,8,"path"],[158,10,225,8,"path"],[158,14,225,12],[158,24,225,20,"query"],[158,29,225,8],[159,0,226,7],[160,0,227,5],[162,0,229,4,"current"],[162,6,229,4,"current"],[162,13,229,11],[162,16,229,14,"route"],[162,21,229,19],[162,22,229,20,"state"],[162,27,229,4],[163,0,67,10],[165,0,86,2],[165,11,86,9,"current"],[165,18,86,2],[165,20,86,18],[166,0,86,18],[167,0,230,3],[169,0,233,2,"path"],[169,4,233,2,"path"],[169,8,233,6],[169,11,233,9,"path"],[169,15,233,13],[169,16,233,14,"replace"],[169,23,233,9],[169,24,233,22],[169,30,233,9],[169,32,233,30],[169,35,233,9],[169,36,233,2],[170,0,234,2,"path"],[170,4,234,2,"path"],[170,8,234,6],[170,11,234,9,"path"],[170,15,234,13],[170,16,234,14,"length"],[170,22,234,9],[170,25,234,23],[170,26,234,9],[170,29,234,27,"path"],[170,33,234,31],[170,34,234,32,"replace"],[170,41,234,27],[170,42,234,40],[170,47,234,27],[170,49,234,47],[170,51,234,27],[170,52,234,9],[170,55,234,53,"path"],[170,59,234,2],[171,0,236,2],[171,11,236,9,"path"],[171,15,236,2],[172,0,237,1],[174,0,240,0],[174,6,240,6,"fromEntries"],[174,17,240,17],[174,20,240,20],[174,29,240,6,"fromEntries"],[174,40,240,20],[174,41,240,42,"entries"],[174,48,240,20],[175,0,240,20],[175,11,241,2,"entries"],[175,18,241,9],[175,19,241,10,"reduce"],[175,25,241,2],[175,26,241,17],[175,36,241,18,"acc"],[175,39,241,17],[175,48,241,34],[176,0,241,34],[177,0,241,34],[177,10,241,24,"k"],[177,11,241,34],[178,0,241,34],[178,10,241,27,"v"],[178,11,241,34],[180,0,242,4],[180,10,242,8,"acc"],[180,13,242,11],[180,14,242,12,"hasOwnProperty"],[180,28,242,8],[180,29,242,27,"k"],[180,30,242,8],[180,31,242,4],[180,33,242,31],[181,0,243,6],[181,14,243,12],[181,18,243,16,"Error"],[181,23,243,12],[181,46,243,42,"k"],[181,47,243,12],[181,84,243,6],[182,0,244,5],[184,0,246,4,"acc"],[184,6,246,4,"acc"],[184,9,246,7],[184,10,246,8,"k"],[184,11,246,7],[184,12,246,4],[184,15,246,13,"v"],[184,16,246,4],[185,0,247,4],[185,13,247,11,"acc"],[185,16,247,4],[186,0,248,3],[186,5,241,2],[186,7,248,5],[186,9,241,2],[186,10,240,20],[187,0,240,20],[187,3,240,0],[189,0,250,0],[189,6,250,6,"getParamName"],[189,18,250,18],[189,21,250,21],[189,30,250,6,"getParamName"],[189,42,250,21],[189,43,250,22,"pattern"],[189,50,250,21],[190,0,250,21],[190,11,251,2,"pattern"],[190,18,251,9],[190,19,251,10,"replace"],[190,26,251,2],[190,27,251,18],[190,31,251,2],[190,33,251,24],[190,35,251,2],[190,37,251,28,"replace"],[190,44,251,2],[190,45,251,36],[190,50,251,2],[190,52,251,43],[190,54,251,2],[190,55,250,21],[191,0,250,21],[191,3,250,0],[193,0,253,0],[193,6,253,6,"joinPaths"],[193,15,253,15],[193,18,253,18],[193,27,253,6,"joinPaths"],[193,36,253,18],[194,0,253,18],[196,0,253,18],[196,38,253,22,"paths"],[196,43,253,18],[197,0,253,22,"paths"],[197,6,253,22,"paths"],[197,11,253,18],[198,0,253,18],[200,0,253,18],[200,11,254,2],[200,20,254,3],[200,22,254,2],[200,24,255,5,"concat"],[200,30,254,2],[200,77,255,15,"paths"],[200,82,255,20],[200,83,255,21,"map"],[200,86,255,15],[200,87,255,25],[200,97,255,26,"p"],[200,98,255,25],[201,0,255,25],[201,13,255,32,"p"],[201,14,255,33],[201,15,255,34,"split"],[201,20,255,32],[201,21,255,40],[201,24,255,32],[201,25,255,25],[202,0,255,25],[202,5,255,15],[202,6,254,2],[202,9,256,5,"filter"],[202,15,254,2],[202,16,256,12,"Boolean"],[202,23,254,2],[202,25,257,5,"join"],[202,29,254,2],[202,30,257,10],[202,33,254,2],[202,34,253,18],[203,0,253,18],[203,3,253,0],[205,0,259,0],[205,6,259,6,"createConfigItem"],[205,22,259,22],[205,25,259,25],[205,34,259,6,"createConfigItem"],[205,50,259,25],[205,51,260,2,"legacy"],[205,57,259,25],[205,59,261,2,"config"],[205,65,259,25],[205,67,262,2,"parentPattern"],[205,80,259,25],[205,82,263,17],[206,0,263,17],[208,0,264,2],[208,8,264,6],[208,15,264,13,"config"],[208,21,264,6],[208,26,264,24],[208,34,264,2],[208,36,264,34],[209,0,266,4],[209,10,266,10,"pattern"],[209,19,266,17],[209,22,266,20,"parentPattern"],[209,35,266,33],[209,38,266,36,"joinPaths"],[209,47,266,45],[209,48,266,46,"parentPattern"],[209,61,266,45],[209,63,266,61,"config"],[209,69,266,45],[209,70,266,33],[209,73,266,71,"config"],[209,79,266,4],[211,0,268,4],[211,13,268,11],[212,0,268,13,"pattern"],[212,8,268,13,"pattern"],[212,15,268,20],[212,17,268,13,"pattern"],[213,0,268,11],[213,7,268,4],[214,0,269,3],[216,0,273,2],[216,8,273,6,"pattern"],[216,15,273,2],[218,0,275,2],[218,8,275,6,"legacy"],[218,14,275,2],[218,16,275,14],[219,0,276,4,"pattern"],[219,6,276,4,"pattern"],[219,13,276,11],[219,16,277,6,"config"],[219,22,277,12],[219,23,277,13,"exact"],[219,28,277,6],[219,33,277,23],[219,37,277,6],[219,41,277,31,"parentPattern"],[219,54,277,6],[219,58,277,48,"config"],[219,64,277,54],[219,65,277,55,"path"],[219,69,277,6],[219,72,278,10,"joinPaths"],[219,81,278,19],[219,82,278,20,"parentPattern"],[219,95,278,19],[219,97,278,35,"config"],[219,103,278,41],[219,104,278,42,"path"],[219,108,278,19],[219,109,277,6],[219,112,279,10,"config"],[219,118,279,16],[219,119,279,17,"path"],[219,123,276,4],[220,0,280,3],[220,5,275,2],[220,11,280,9],[221,0,281,4],[221,10,281,8,"config"],[221,16,281,14],[221,17,281,15,"exact"],[221,22,281,8],[221,26,281,24,"config"],[221,32,281,30],[221,33,281,31,"path"],[221,37,281,24],[221,42,281,40,"undefined"],[221,51,281,4],[221,53,281,51],[222,0,282,6],[222,14,282,12],[222,18,282,16,"Error"],[222,23,282,12],[222,24,283,8],[222,174,282,12],[222,175,282,6],[223,0,285,5],[225,0,287,4,"pattern"],[225,6,287,4,"pattern"],[225,13,287,11],[225,16,288,6,"config"],[225,22,288,12],[225,23,288,13,"exact"],[225,28,288,6],[225,33,288,23],[225,37,288,6],[225,40,289,10,"joinPaths"],[225,49,289,19],[225,50,289,20,"parentPattern"],[225,63,289,33],[225,67,289,37],[225,69,289,19],[225,71,289,41,"config"],[225,77,289,47],[225,78,289,48,"path"],[225,82,289,41],[225,86,289,56],[225,88,289,19],[225,89,288,6],[225,92,290,10,"config"],[225,98,290,16],[225,99,290,17,"path"],[225,103,290,10],[225,107,290,25],[225,109,287,4],[226,0,291,3],[228,0,293,2],[228,8,293,8,"screens"],[228,15,293,15],[228,18,293,18,"config"],[228,24,293,24],[228,25,293,25,"screens"],[228,32,293,18],[228,35,294,6,"createNormalizedConfigs"],[228,58,294,29],[228,59,294,30,"legacy"],[228,65,294,29],[228,67,294,38,"config"],[228,73,294,44],[228,74,294,45,"screens"],[228,81,294,29],[228,83,294,54,"pattern"],[228,90,294,29],[228,91,293,18],[228,94,295,6,"undefined"],[228,103,293,2],[229,0,297,2],[229,11,297,9],[230,0,299,4,"pattern"],[230,6,299,4,"pattern"],[230,13,299,11],[230,28,299,13,"pattern"],[230,35,299,11],[230,56,299,13],[230,66,299,22,"split"],[230,71,299,13],[230,72,299,28],[230,75,299,13],[230,77,299,33,"filter"],[230,83,299,13],[230,84,299,40,"Boolean"],[230,91,299,13],[230,93,299,49,"join"],[230,97,299,13],[230,98,299,54],[230,101,299,13],[230,102,297,9],[231,0,300,4,"stringify"],[231,6,300,4,"stringify"],[231,15,300,13],[231,17,300,15,"config"],[231,23,300,21],[231,24,300,22,"stringify"],[231,33,297,9],[232,0,301,4,"screens"],[232,6,301,4,"screens"],[232,13,301,11],[232,15,301,4,"screens"],[233,0,297,9],[233,5,297,2],[234,0,303,1],[234,3,259,0],[236,0,305,0],[236,6,305,6,"createNormalizedConfigs"],[236,29,305,29],[236,32,305,32],[236,41,305,6,"createNormalizedConfigs"],[236,64,305,32],[236,65,306,2,"legacy"],[236,71,305,32],[236,73,307,2,"options"],[236,80,305,32],[236,82,308,2,"pattern"],[236,89,305,32],[237,0,305,32],[237,11,310,2,"fromEntries"],[237,22,310,13],[237,23,311,4,"Object"],[237,29,311,10],[237,30,311,11,"entries"],[237,37,311,4],[237,38,311,19,"options"],[237,45,311,4],[237,47,311,28,"map"],[237,50,311,4],[237,51,311,32],[237,68,311,47],[238,0,311,47],[239,0,311,47],[239,10,311,34,"name"],[239,14,311,47],[240,0,311,47],[240,10,311,40,"c"],[240,11,311,47],[242,0,312,6],[242,10,312,12,"result"],[242,16,312,18],[242,19,312,21,"createConfigItem"],[242,35,312,37],[242,36,312,38,"legacy"],[242,42,312,37],[242,44,312,46,"c"],[242,45,312,37],[242,47,312,49,"pattern"],[242,54,312,37],[242,55,312,6],[243,0,314,6],[243,13,314,13],[243,14,314,14,"name"],[243,18,314,13],[243,20,314,20,"result"],[243,26,314,13],[243,27,314,6],[244,0,315,5],[244,5,311,4],[244,6,310,13],[244,7,305,32],[245,0,305,32],[245,3,305,0]],"functionMap":{"names":["<global>","getActiveRoute","getPathFromState","Object.entries.map$argument_0","<anonymous>","pattern.split.map$argument_0","fromEntries","entries.reduce$argument_0","getParamName","joinPaths","paths.map$argument_0","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;uBCqB;CDW;eE+B;2CCgD;WDG;oBEc,wBF;qBEE;aFQ;aGkC;SH6B;CFmC;oBMG;iBCC;GDO,qBN;qBQE;8CRC;kBSE;yBCE,mBD;cTE;yBWE;CX4C;gCYE;gCTM;KSI;GZC"}},"type":"js/module"}]}