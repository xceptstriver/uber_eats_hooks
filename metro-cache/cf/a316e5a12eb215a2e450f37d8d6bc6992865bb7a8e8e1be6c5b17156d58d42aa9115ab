{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":253,"column":0}}]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":253,"column":0}}]}},{"name":"./bezier","data":{"asyncType":null,"locs":[{"start":{"line":219,"column":20},"end":{"line":219,"column":39}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _ease;\n\n  var Easing = function () {\n    function Easing() {\n      _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\")(this, Easing);\n    }\n\n    _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\")(Easing, null, [{\n      key: \"step0\",\n      value: function step0(n) {\n        return n > 0 ? 1 : 0;\n      }\n    }, {\n      key: \"step1\",\n      value: function step1(n) {\n        return n >= 1 ? 1 : 0;\n      }\n    }, {\n      key: \"linear\",\n      value: function linear(t) {\n        return t;\n      }\n    }, {\n      key: \"ease\",\n      value: function ease(t) {\n        if (!_ease) {\n          _ease = Easing.bezier(0.42, 0, 1, 1);\n        }\n\n        return _ease(t);\n      }\n    }, {\n      key: \"quad\",\n      value: function quad(t) {\n        return t * t;\n      }\n    }, {\n      key: \"cubic\",\n      value: function cubic(t) {\n        return t * t * t;\n      }\n    }, {\n      key: \"poly\",\n      value: function poly(n) {\n        return function (t) {\n          return Math.pow(t, n);\n        };\n      }\n    }, {\n      key: \"sin\",\n      value: function sin(t) {\n        return 1 - Math.cos(t * Math.PI / 2);\n      }\n    }, {\n      key: \"circle\",\n      value: function circle(t) {\n        return 1 - Math.sqrt(1 - t * t);\n      }\n    }, {\n      key: \"exp\",\n      value: function exp(t) {\n        return Math.pow(2, 10 * (t - 1));\n      }\n    }, {\n      key: \"elastic\",\n      value: function elastic() {\n        var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        var p = bounciness * Math.PI;\n        return function (t) {\n          return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n        };\n      }\n    }, {\n      key: \"back\",\n      value: function back() {\n        var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1.70158;\n        return function (t) {\n          return t * t * ((s + 1) * t - s);\n        };\n      }\n    }, {\n      key: \"bounce\",\n      value: function bounce(t) {\n        if (t < 1 / 2.75) {\n          return 7.5625 * t * t;\n        }\n\n        if (t < 2 / 2.75) {\n          var _t = t - 1.5 / 2.75;\n\n          return 7.5625 * _t * _t + 0.75;\n        }\n\n        if (t < 2.5 / 2.75) {\n          var _t2 = t - 2.25 / 2.75;\n\n          return 7.5625 * _t2 * _t2 + 0.9375;\n        }\n\n        var t2 = t - 2.625 / 2.75;\n        return 7.5625 * t2 * t2 + 0.984375;\n      }\n    }, {\n      key: \"bezier\",\n      value: function bezier(x1, y1, x2, y2) {\n        var _bezier = _$$_REQUIRE(_dependencyMap[2], \"./bezier\");\n\n        return _bezier(x1, y1, x2, y2);\n      }\n    }, {\n      key: \"in\",\n      value: function _in(easing) {\n        return easing;\n      }\n    }, {\n      key: \"out\",\n      value: function out(easing) {\n        return function (t) {\n          return 1 - easing(1 - t);\n        };\n      }\n    }, {\n      key: \"inOut\",\n      value: function inOut(easing) {\n        return function (t) {\n          if (t < 0.5) {\n            return easing(t * 2) / 2;\n          }\n\n          return 1 - easing((1 - t) * 2) / 2;\n        };\n      }\n    }]);\n\n    return Easing;\n  }();\n\n  module.exports = Easing;\n});","lineCount":142,"map":[[2,0,11,0],[4,0,13,0],[4,6,13,4,"ease"],[4,11,13,0],[6,6,60,6,"Easing"],[6,12],[13,13,64,2],[13,28,64,15,"n"],[13,29,64,2],[13,31,64,34],[14,0,65,4],[14,15,65,11,"n"],[14,16,65,12],[14,19,65,15],[14,20,65,11],[14,23,65,19],[14,24,65,11],[14,27,65,23],[14,28,65,4],[15,0,66,3],[18,13,71,2],[18,28,71,15,"n"],[18,29,71,2],[18,31,71,34],[19,0,72,4],[19,15,72,11,"n"],[19,16,72,12],[19,20,72,16],[19,21,72,11],[19,24,72,20],[19,25,72,11],[19,28,72,24],[19,29,72,4],[20,0,73,3],[23,13,81,2],[23,29,81,16,"t"],[23,30,81,2],[23,32,81,35],[24,0,82,4],[24,15,82,11,"t"],[24,16,82,4],[25,0,83,3],[28,13,91,2],[28,27,91,14,"t"],[28,28,91,2],[28,30,91,33],[29,0,92,4],[29,12,92,8],[29,13,92,9,"ease"],[29,18,92,4],[29,20,92,15],[30,0,93,6,"ease"],[30,10,93,6,"ease"],[30,15,93,10],[30,18,93,13,"Easing"],[30,24,93,19],[30,25,93,20,"bezier"],[30,31,93,13],[30,32,93,27],[30,36,93,13],[30,38,93,33],[30,39,93,13],[30,41,93,36],[30,42,93,13],[30,44,93,39],[30,45,93,13],[30,46,93,6],[31,0,94,5],[33,0,95,4],[33,15,95,11,"ease"],[33,20,95,15],[33,21,95,16,"t"],[33,22,95,15],[33,23,95,4],[34,0,96,3],[37,13,104,2],[37,27,104,14,"t"],[37,28,104,2],[37,30,104,33],[38,0,105,4],[38,15,105,11,"t"],[38,16,105,12],[38,19,105,15,"t"],[38,20,105,4],[39,0,106,3],[42,13,114,2],[42,28,114,15,"t"],[42,29,114,2],[42,31,114,34],[43,0,115,4],[43,15,115,11,"t"],[43,16,115,12],[43,19,115,15,"t"],[43,20,115,11],[43,23,115,19,"t"],[43,24,115,4],[44,0,116,3],[47,13,124,2],[47,27,124,14,"n"],[47,28,124,2],[47,30,124,48],[48,0,125,4],[48,15,125,11],[48,25,125,12,"t"],[48,26,125,11],[49,0,125,11],[49,17,125,26,"Math"],[49,21,125,30],[49,22,125,31,"pow"],[49,25,125,26],[49,26,125,35,"t"],[49,27,125,26],[49,29,125,38,"n"],[49,30,125,26],[49,31,125,11],[50,0,125,11],[50,9,125,4],[51,0,126,3],[54,13,133,2],[54,26,133,13,"t"],[54,27,133,2],[54,29,133,32],[55,0,134,4],[55,15,134,11],[55,19,134,15,"Math"],[55,23,134,19],[55,24,134,20,"cos"],[55,27,134,15],[55,28,134,25,"t"],[55,29,134,26],[55,32,134,29,"Math"],[55,36,134,33],[55,37,134,34,"PI"],[55,39,134,24],[55,42,134,40],[55,43,134,15],[55,44,134,4],[56,0,135,3],[59,13,142,2],[59,29,142,16,"t"],[59,30,142,2],[59,32,142,35],[60,0,143,4],[60,15,143,11],[60,19,143,15,"Math"],[60,23,143,19],[60,24,143,20,"sqrt"],[60,28,143,15],[60,29,143,25],[60,33,143,29,"t"],[60,34,143,30],[60,37,143,33,"t"],[60,38,143,15],[60,39,143,4],[61,0,144,3],[64,13,151,2],[64,26,151,13,"t"],[64,27,151,2],[64,29,151,32],[65,0,152,4],[65,15,152,11,"Math"],[65,19,152,15],[65,20,152,16,"pow"],[65,23,152,11],[65,24,152,20],[65,25,152,11],[65,27,152,23],[65,33,152,29,"t"],[65,34,152,30],[65,37,152,33],[65,38,152,23],[65,39,152,11],[65,40,152,4],[66,0,153,3],[69,13,165,2],[69,32,165,64],[70,0,165,64],[70,12,165,17,"bounciness"],[70,22,165,64],[70,93,165,38],[70,94,165,64],[71,0,166,4],[71,12,166,10,"p"],[71,13,166,11],[71,16,166,14,"bounciness"],[71,26,166,24],[71,29,166,27,"Math"],[71,33,166,31],[71,34,166,32,"PI"],[71,36,166,4],[72,0,167,4],[72,15,167,11],[72,25,167,11,"t"],[72,26,167,12],[73,0,167,12],[73,17,167,16],[73,21,167,20,"Math"],[73,25,167,24],[73,26,167,25,"pow"],[73,29,167,20],[73,30,167,29,"Math"],[73,34,167,33],[73,35,167,34,"cos"],[73,38,167,29],[73,39,167,39,"t"],[73,40,167,40],[73,43,167,43,"Math"],[73,47,167,47],[73,48,167,48,"PI"],[73,50,167,38],[73,53,167,54],[73,54,167,29],[73,55,167,20],[73,57,167,58],[73,58,167,20],[73,62,167,63,"Math"],[73,66,167,67],[73,67,167,68,"cos"],[73,70,167,63],[73,71,167,72,"t"],[73,72,167,73],[73,75,167,76,"p"],[73,76,167,63],[73,77,167,12],[74,0,167,12],[74,9,167,4],[75,0,168,3],[78,13,178,2],[78,29,178,58],[79,0,178,58],[79,12,178,14,"s"],[79,13,178,58],[79,84,178,26],[79,91,178,58],[80,0,179,4],[80,15,179,11],[80,25,179,11,"t"],[80,26,179,12],[81,0,179,12],[81,17,179,16,"t"],[81,18,179,17],[81,21,179,20,"t"],[81,22,179,16],[81,26,179,25],[81,27,179,26,"s"],[81,28,179,27],[81,31,179,30],[81,32,179,25],[81,36,179,35,"t"],[81,37,179,25],[81,40,179,39,"s"],[81,41,179,16],[81,42,179,12],[82,0,179,12],[82,9,179,4],[83,0,180,3],[86,13,187,2],[86,29,187,16,"t"],[86,30,187,2],[86,32,187,35],[87,0,188,4],[87,12,188,8,"t"],[87,13,188,9],[87,16,188,12],[87,20,188,16],[87,24,188,4],[87,26,188,22],[88,0,189,6],[88,17,189,13],[88,26,189,22,"t"],[88,27,189,13],[88,30,189,26,"t"],[88,31,189,6],[89,0,190,5],[91,0,192,4],[91,12,192,8,"t"],[91,13,192,9],[91,16,192,12],[91,20,192,16],[91,24,192,4],[91,26,192,22],[92,0,193,6],[92,14,193,12,"t2"],[92,16,193,14],[92,19,193,17,"t"],[92,20,193,18],[92,23,193,21],[92,29,193,27],[92,33,193,6],[94,0,194,6],[94,17,194,13],[94,26,194,22,"t2"],[94,28,194,13],[94,31,194,27,"t2"],[94,33,194,13],[94,36,194,32],[94,40,194,6],[95,0,195,5],[97,0,197,4],[97,12,197,8,"t"],[97,13,197,9],[97,16,197,12],[97,22,197,18],[97,26,197,4],[97,28,197,24],[98,0,198,6],[98,14,198,12,"t2"],[98,17,198,14],[98,20,198,17,"t"],[98,21,198,18],[98,24,198,21],[98,31,198,28],[98,35,198,6],[100,0,199,6],[100,17,199,13],[100,26,199,22,"t2"],[100,29,199,13],[100,32,199,27,"t2"],[100,35,199,13],[100,38,199,32],[100,44,199,6],[101,0,200,5],[103,0,202,4],[103,12,202,10,"t2"],[103,14,202,12],[103,17,202,15,"t"],[103,18,202,16],[103,21,202,19],[103,29,202,27],[103,33,202,4],[104,0,203,4],[104,15,203,11],[104,24,203,20,"t2"],[104,26,203,11],[104,29,203,25,"t2"],[104,31,203,11],[104,34,203,30],[104,42,203,4],[105,0,204,3],[108,13,213,2],[108,29,214,4,"x1"],[108,31,213,2],[108,33,215,4,"y1"],[108,35,213,2],[108,37,216,4,"x2"],[108,39,213,2],[108,41,217,4,"y2"],[108,43,213,2],[108,45,218,27],[109,0,219,4],[109,12,219,10,"_bezier"],[109,19,219,17],[109,22,219,20,"require"],[109,33,219,27],[109,64,219,4],[111,0,220,4],[111,15,220,11,"_bezier"],[111,22,220,18],[111,23,220,19,"x1"],[111,25,220,18],[111,27,220,23,"y1"],[111,29,220,18],[111,31,220,27,"x2"],[111,33,220,18],[111,35,220,31,"y2"],[111,37,220,18],[111,38,220,4],[112,0,221,3],[115,13,226,2],[115,26,226,12,"easing"],[115,32,226,2],[115,34,226,66],[116,0,227,4],[116,15,227,11,"easing"],[116,21,227,4],[117,0,228,3],[120,13,233,2],[120,26,233,13,"easing"],[120,32,233,2],[120,34,233,67],[121,0,234,4],[121,15,234,11],[121,25,234,11,"t"],[121,26,234,12],[122,0,234,12],[122,17,234,16],[122,21,234,20,"easing"],[122,27,234,26],[122,28,234,27],[122,32,234,31,"t"],[122,33,234,26],[122,34,234,12],[123,0,234,12],[123,9,234,4],[124,0,235,3],[127,13,242,2],[127,28,242,15,"easing"],[127,34,242,2],[127,36,242,69],[128,0,243,4],[128,15,243,11],[128,25,243,11,"t"],[128,26,243,12],[128,28,243,16],[129,0,244,6],[129,14,244,10,"t"],[129,15,244,11],[129,18,244,14],[129,21,244,6],[129,23,244,19],[130,0,245,8],[130,19,245,15,"easing"],[130,25,245,21],[130,26,245,22,"t"],[130,27,245,23],[130,30,245,26],[130,31,245,21],[130,32,245,15],[130,35,245,31],[130,36,245,8],[131,0,246,7],[133,0,247,6],[133,17,247,13],[133,21,247,17,"easing"],[133,27,247,23],[133,28,247,24],[133,29,247,25],[133,33,247,29,"t"],[133,34,247,24],[133,38,247,34],[133,39,247,23],[133,40,247,17],[133,43,247,39],[133,44,247,6],[134,0,248,5],[134,9,243,4],[135,0,249,3],[141,0,252,0,"module"],[141,2,252,0,"module"],[141,8,252,6],[141,9,252,7,"exports"],[141,16,252,0],[141,19,252,17,"Easing"],[141,25,252,0]],"functionMap":{"names":["<global>","Easing","step0","step1","linear","ease","quad","cubic","poly","<anonymous>","sin","circle","exp","elastic","back","bounce","bezier","_in","out","inOut"],"mappings":"AAA;AC2D;ECI;GDE;EEK;GFE;EGQ;GHE;EIQ;GJK;EKQ;GLE;EMQ;GNE;EOQ;WCC,6BD;GPC;ESO;GTE;EUO;GVE;EWO;GXE;EYY;WJE,mEI;GZC;EaU;WLC,8BK;GbC;EcO;GdiB;EeS;GfQ;EgBK;GhBE;EiBK;WTC,sBS;GjBC;EkBO;WVC;KUK;GlBC;CDC"}},"type":"js/module"}]}