{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":641,"column":0}},{"start":{"line":1,"column":0},"end":{"line":641,"column":0}},{"start":{"line":1,"column":0},"end":{"line":641,"column":0}},{"start":{"line":1,"column":0},"end":{"line":641,"column":0}},{"start":{"line":1,"column":0},"end":{"line":1,"column":42}},{"start":{"line":8,"column":0},"end":{"line":8,"column":60}}]}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":641,"column":0}}]}},{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":641,"column":0}}]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":641,"column":0}}]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":641,"column":0}}]}},{"name":"escape-string-regexp","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":1,"column":42}}]}},{"name":"query-string","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0},"end":{"line":2,"column":44}}]}},{"name":"./checkLegacyPathConfig","data":{"asyncType":null,"locs":[{"start":{"line":8,"column":0},"end":{"line":8,"column":60}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getStateFromPath;\n\n  var _defineProperty2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _extends4 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _toConsumableArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _slicedToArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _escapeStringRegexp = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[5], \"escape-string-regexp\"));\n\n  var queryString = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"query-string\"));\n\n  var _checkLegacyPathConfig = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[7], \"./checkLegacyPathConfig\"));\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function getStateFromPath(path, options) {\n    var _ref;\n\n    var _checkLegacyPathConfi = (0, _checkLegacyPathConfig.default)(options),\n        _checkLegacyPathConfi2 = (0, _slicedToArray2.default)(_checkLegacyPathConfi, 2),\n        legacy = _checkLegacyPathConfi2[0],\n        compatOptions = _checkLegacyPathConfi2[1];\n\n    var initialRoutes = [];\n\n    if (compatOptions != null && compatOptions.initialRouteName) {\n      initialRoutes.push({\n        initialRouteName: compatOptions.initialRouteName,\n        parentScreens: []\n      });\n    }\n\n    var screens = compatOptions == null ? void 0 : compatOptions.screens;\n    var remaining = path.replace(/\\/+/g, '/').replace(/^\\//, '').replace(/\\?.*$/, '');\n    remaining = remaining.endsWith('/') ? remaining : remaining + \"/\";\n\n    if (screens === undefined) {\n      var routes = remaining.split('/').filter(Boolean).map(function (segment, i, self) {\n        var name = decodeURIComponent(segment);\n\n        if (i === self.length - 1) {\n          return {\n            name: name,\n            params: parseQueryParams(path)\n          };\n        }\n\n        return {\n          name: name\n        };\n      });\n\n      if (routes.length) {\n        return createNestedStateObject(routes, initialRoutes);\n      }\n\n      return undefined;\n    }\n\n    var configs = (_ref = []).concat.apply(_ref, (0, _toConsumableArray2.default)(Object.keys(screens).map(function (key) {\n      return createNormalizedConfigs(legacy, key, screens, [], initialRoutes, []);\n    }))).sort(function (a, b) {\n      if (a.pattern === b.pattern) {\n        return b.routeNames.join('>').localeCompare(a.routeNames.join('>'));\n      }\n\n      if (a.pattern.startsWith(b.pattern)) {\n        return -1;\n      }\n\n      if (b.pattern.startsWith(a.pattern)) {\n        return 1;\n      }\n\n      var aParts = a.pattern.split('/');\n      var bParts = b.pattern.split('/');\n      var aWildcardIndex = aParts.indexOf('*');\n      var bWildcardIndex = bParts.indexOf('*');\n\n      if (aWildcardIndex === -1 && bWildcardIndex !== -1) {\n        return -1;\n      }\n\n      if (aWildcardIndex !== -1 && bWildcardIndex === -1) {\n        return 1;\n      }\n\n      if (aWildcardIndex === bWildcardIndex) {\n        return bParts.length - aParts.length;\n      }\n\n      return bWildcardIndex - aWildcardIndex;\n    });\n\n    configs.reduce(function (acc, config) {\n      if (acc[config.pattern]) {\n        var a = acc[config.pattern].routeNames;\n        var b = config.routeNames;\n        var intersects = a.length > b.length ? b.every(function (it, i) {\n          return a[i] === it;\n        }) : a.every(function (it, i) {\n          return b[i] === it;\n        });\n\n        if (!intersects) {\n          throw new Error(\"Found conflicting screens with the same pattern. The pattern '\" + config.pattern + \"' resolves to both '\" + a.join(' > ') + \"' and '\" + b.join(' > ') + \"'. Patterns must be unique and cannot resolve to more than one screen.\");\n        }\n      }\n\n      return (0, _extends4.default)(acc, (0, _defineProperty2.default)({}, config.pattern, config));\n    }, {});\n\n    if (remaining === '/') {\n      var match = configs.find(function (config) {\n        return config.path === '' && config.routeNames.every(function (name) {\n          var _configs$find;\n\n          return !((_configs$find = configs.find(function (c) {\n            return c.screen === name;\n          })) != null && _configs$find.path);\n        });\n      });\n\n      if (match) {\n        return createNestedStateObject(match.routeNames.map(function (name, i, self) {\n          if (i === self.length - 1) {\n            return {\n              name: name,\n              params: parseQueryParams(path, match.parse)\n            };\n          }\n\n          return {\n            name: name\n          };\n        }), initialRoutes);\n      }\n\n      return undefined;\n    }\n\n    var result;\n    var current;\n\n    if (legacy === false) {\n      var _matchAgainstConfigs = matchAgainstConfigs(remaining, configs.map(function (c) {\n        return (0, _extends4.default)({}, c, {\n          regex: c.regex ? new RegExp(c.regex.source + '$') : undefined\n        });\n      })),\n          _routes = _matchAgainstConfigs.routes,\n          remainingPath = _matchAgainstConfigs.remainingPath;\n\n      if (_routes !== undefined) {\n        current = createNestedStateObject(_routes, initialRoutes);\n        remaining = remainingPath;\n        result = current;\n      }\n    } else {\n      while (remaining) {\n        var _matchAgainstConfigs2 = matchAgainstConfigs(remaining, configs),\n            _routes2 = _matchAgainstConfigs2.routes,\n            _remainingPath = _matchAgainstConfigs2.remainingPath;\n\n        remaining = _remainingPath;\n\n        if (_routes2 === undefined) {\n          var segments = remaining.split('/');\n          _routes2 = [{\n            name: decodeURIComponent(segments[0])\n          }];\n          segments.shift();\n          remaining = segments.join('/');\n        }\n\n        var state = createNestedStateObject(_routes2, initialRoutes);\n\n        if (current) {\n          var _current2;\n\n          while ((_current = current) != null && _current.routes[current.index || 0].state) {\n            var _current;\n\n            current = current.routes[current.index || 0].state;\n          }\n\n          current.routes[((_current2 = current) == null ? void 0 : _current2.index) || 0].state = state;\n        } else {\n          result = state;\n        }\n\n        current = state;\n      }\n    }\n\n    if (current == null || result == null) {\n      return undefined;\n    }\n\n    var route = findFocusedRoute(current);\n    var params = parseQueryParams(path, findParseConfigForRoute(route.name, configs));\n\n    if (params) {\n      route.params = (0, _extends4.default)({}, route.params, params);\n    }\n\n    return result;\n  }\n\n  var joinPaths = function joinPaths() {\n    var _ref2;\n\n    for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n      paths[_key] = arguments[_key];\n    }\n\n    return (_ref2 = []).concat.apply(_ref2, (0, _toConsumableArray2.default)(paths.map(function (p) {\n      return p.split('/');\n    }))).filter(Boolean).join('/');\n  };\n\n  var matchAgainstConfigs = function matchAgainstConfigs(remaining, configs) {\n    var routes;\n    var remainingPath = remaining;\n\n    var _loop = function _loop(config) {\n      if (!config.regex) {\n        return \"continue\";\n      }\n\n      var match = remainingPath.match(config.regex);\n\n      if (match) {\n        var _config$pattern;\n\n        var matchedParams = (_config$pattern = config.pattern) == null ? void 0 : _config$pattern.split('/').filter(function (p) {\n          return p.startsWith(':');\n        }).reduce(function (acc, p, i) {\n          return (0, _extends4.default)(acc, (0, _defineProperty2.default)({}, p, match[(i + 1) * 2].replace(/\\//, '')));\n        }, {});\n        routes = config.routeNames.map(function (name) {\n          var _config$path;\n\n          var config = configs.find(function (c) {\n            return c.screen === name;\n          });\n          var params = config == null ? void 0 : (_config$path = config.path) == null ? void 0 : _config$path.split('/').filter(function (p) {\n            return p.startsWith(':');\n          }).reduce(function (acc, p) {\n            var value = matchedParams[p];\n\n            if (value) {\n              var _config$parse;\n\n              var key = p.replace(/^:/, '').replace(/\\?$/, '');\n              acc[key] = (_config$parse = config.parse) != null && _config$parse[key] ? config.parse[key](value) : value;\n            }\n\n            return acc;\n          }, {});\n\n          if (params && Object.keys(params).length) {\n            return {\n              name: name,\n              params: params\n            };\n          }\n\n          return {\n            name: name\n          };\n        });\n        remainingPath = remainingPath.replace(match[1], '');\n        return \"break\";\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(configs), _step; !(_step = _iterator()).done;) {\n      var config = _step.value;\n\n      var _ret = _loop(config);\n\n      if (_ret === \"continue\") continue;\n      if (_ret === \"break\") break;\n    }\n\n    return {\n      routes: routes,\n      remainingPath: remainingPath\n    };\n  };\n\n  var createNormalizedConfigs = function createNormalizedConfigs(legacy, screen, routeConfig) {\n    var routeNames = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    var initials = arguments.length > 4 ? arguments[4] : undefined;\n    var parentScreens = arguments.length > 5 ? arguments[5] : undefined;\n    var parentPattern = arguments.length > 6 ? arguments[6] : undefined;\n    var configs = [];\n    routeNames.push(screen);\n    parentScreens.push(screen);\n    var config = routeConfig[screen];\n\n    if (typeof config === 'string') {\n      var pattern = parentPattern ? joinPaths(parentPattern, config) : config;\n      configs.push(createConfigItem(legacy, screen, routeNames, pattern, config));\n    } else if (typeof config === 'object') {\n      var _pattern;\n\n      if (typeof config.path === 'string') {\n        if (legacy) {\n          _pattern = config.exact !== true && parentPattern ? joinPaths(parentPattern, config.path) : config.path;\n        } else {\n          if (config.exact && config.path === undefined) {\n            throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n          }\n\n          _pattern = config.exact !== true ? joinPaths(parentPattern || '', config.path || '') : config.path || '';\n        }\n\n        configs.push(createConfigItem(legacy, screen, routeNames, _pattern, config.path, config.parse));\n      }\n\n      if (config.screens) {\n        if (config.initialRouteName) {\n          initials.push({\n            initialRouteName: config.initialRouteName,\n            parentScreens: parentScreens\n          });\n        }\n\n        Object.keys(config.screens).forEach(function (nestedConfig) {\n          var _pattern2;\n\n          var result = createNormalizedConfigs(legacy, nestedConfig, config.screens, routeNames, initials, (0, _toConsumableArray2.default)(parentScreens), (_pattern2 = _pattern) != null ? _pattern2 : parentPattern);\n          configs.push.apply(configs, (0, _toConsumableArray2.default)(result));\n        });\n      }\n    }\n\n    routeNames.pop();\n    return configs;\n  };\n\n  var createConfigItem = function createConfigItem(legacy, screen, routeNames, pattern, path, parse) {\n    pattern = pattern.split('/').filter(Boolean).join('/');\n    var regex = pattern ? new RegExp(\"^(\" + pattern.split('/').map(function (it) {\n      if (legacy && it === '*') {\n        throw new Error(\"Please update your config to the new format to use wildcard pattern ('*'). https://reactnavigation.org/docs/5.x/configuring-links/#updating-config\");\n      }\n\n      if (it.startsWith(':')) {\n        return \"(([^/]+\\\\/)\" + (it.endsWith('?') ? '?' : '') + \")\";\n      }\n\n      return (it === '*' ? '.*' : (0, _escapeStringRegexp.default)(it)) + \"\\\\/\";\n    }).join('') + \")\") : undefined;\n    return {\n      screen: screen,\n      regex: regex,\n      pattern: pattern,\n      path: path,\n      routeNames: (0, _toConsumableArray2.default)(routeNames),\n      parse: parse\n    };\n  };\n\n  var findParseConfigForRoute = function findParseConfigForRoute(routeName, flatConfig) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose(flatConfig), _step2; !(_step2 = _iterator2()).done;) {\n      var config = _step2.value;\n\n      if (routeName === config.routeNames[config.routeNames.length - 1]) {\n        return config.parse;\n      }\n    }\n\n    return undefined;\n  };\n\n  var findInitialRoute = function findInitialRoute(routeName, parentScreens, initialRoutes) {\n    for (var _iterator3 = _createForOfIteratorHelperLoose(initialRoutes), _step3; !(_step3 = _iterator3()).done;) {\n      var config = _step3.value;\n\n      if (parentScreens.length === config.parentScreens.length) {\n        var sameParents = true;\n\n        for (var i = 0; i < parentScreens.length; i++) {\n          if (parentScreens[i].localeCompare(config.parentScreens[i]) !== 0) {\n            sameParents = false;\n            break;\n          }\n        }\n\n        if (sameParents) {\n          return routeName !== config.initialRouteName ? config.initialRouteName : undefined;\n        }\n      }\n    }\n\n    return undefined;\n  };\n\n  var createStateObject = function createStateObject(initialRoute, route, isEmpty) {\n    if (isEmpty) {\n      if (initialRoute) {\n        return {\n          index: 1,\n          routes: [{\n            name: initialRoute\n          }, route]\n        };\n      } else {\n        return {\n          routes: [route]\n        };\n      }\n    } else {\n      if (initialRoute) {\n        return {\n          index: 1,\n          routes: [{\n            name: initialRoute\n          }, (0, _extends4.default)({}, route, {\n            state: {\n              routes: []\n            }\n          })]\n        };\n      } else {\n        return {\n          routes: [(0, _extends4.default)({}, route, {\n            state: {\n              routes: []\n            }\n          })]\n        };\n      }\n    }\n  };\n\n  var createNestedStateObject = function createNestedStateObject(routes, initialRoutes) {\n    var state;\n    var route = routes.shift();\n    var parentScreens = [];\n    var initialRoute = findInitialRoute(route.name, parentScreens, initialRoutes);\n    parentScreens.push(route.name);\n    state = createStateObject(initialRoute, route, routes.length === 0);\n\n    if (routes.length > 0) {\n      var nestedState = state;\n\n      while (route = routes.shift()) {\n        initialRoute = findInitialRoute(route.name, parentScreens, initialRoutes);\n        var nestedStateIndex = nestedState.index || nestedState.routes.length - 1;\n        nestedState.routes[nestedStateIndex].state = createStateObject(initialRoute, route, routes.length === 0);\n\n        if (routes.length > 0) {\n          nestedState = nestedState.routes[nestedStateIndex].state;\n        }\n\n        parentScreens.push(route.name);\n      }\n    }\n\n    return state;\n  };\n\n  var findFocusedRoute = function findFocusedRoute(state) {\n    var _current4;\n\n    var current = state;\n\n    while ((_current3 = current) != null && _current3.routes[current.index || 0].state) {\n      var _current3;\n\n      current = current.routes[current.index || 0].state;\n    }\n\n    var route = current.routes[((_current4 = current) == null ? void 0 : _current4.index) || 0];\n    return route;\n  };\n\n  var parseQueryParams = function parseQueryParams(path, parseConfig) {\n    var query = path.split('?')[1];\n    var params = queryString.parse(query);\n\n    if (parseConfig) {\n      Object.keys(params).forEach(function (name) {\n        if (parseConfig[name] && typeof params[name] === 'string') {\n          params[name] = parseConfig[name](params[name]);\n        }\n      });\n    }\n\n    return Object.keys(params).length ? params : undefined;\n  };\n});","lineCount":511,"map":[[15,0,1,0],[17,0,2,0],[19,0,8,0],[31,0,62,15],[31,11,62,24,"getStateFromPath"],[31,27,62,15],[31,28,63,2,"path"],[31,32,62,15],[31,34,64,2,"options"],[31,41,62,15],[31,43,65,27],[32,0,65,27],[34,0,66,2],[34,32,66,34],[34,68,66,56,"options"],[34,75,66,34],[34,76,66,2],[35,0,66,2],[36,0,66,2],[36,8,66,9,"legacy"],[36,14,66,2],[37,0,66,2],[37,8,66,17,"compatOptions"],[37,21,66,2],[39,0,68,2],[39,8,68,6,"initialRoutes"],[39,21,68,41],[39,24,68,44],[39,26,68,2],[41,0,70,2],[41,8,70,6,"compatOptions"],[41,21,70,2],[41,33,70,6,"compatOptions"],[41,46,70,19],[41,47,70,21,"initialRouteName"],[41,63,70,2],[41,65,70,39],[42,0,71,4,"initialRoutes"],[42,6,71,4,"initialRoutes"],[42,19,71,17],[42,20,71,18,"push"],[42,24,71,4],[42,25,71,23],[43,0,72,6,"initialRouteName"],[43,8,72,6,"initialRouteName"],[43,24,72,22],[43,26,72,24,"compatOptions"],[43,39,72,37],[43,40,72,38,"initialRouteName"],[43,56,71,23],[44,0,73,6,"parentScreens"],[44,8,73,6,"parentScreens"],[44,21,73,19],[44,23,73,21],[45,0,71,23],[45,7,71,4],[46,0,75,3],[48,0,77,2],[48,8,77,8,"screens"],[48,15,77,15],[48,18,77,18,"compatOptions"],[48,31,77,15],[48,51,77,18,"compatOptions"],[48,64,77,31],[48,65,77,33,"screens"],[48,72,77,2],[49,0,79,2],[49,8,79,6,"remaining"],[49,17,79,15],[49,20,79,18,"path"],[49,24,79,22],[49,25,80,5,"replace"],[49,32,79,18],[49,33,80,13],[49,39,79,18],[49,41,80,21],[49,44,79,18],[49,46,81,5,"replace"],[49,53,79,18],[49,54,81,13],[49,59,79,18],[49,61,81,20],[49,63,79,18],[49,65,82,5,"replace"],[49,72,79,18],[49,73,82,13],[49,80,79,18],[49,82,82,22],[49,84,79,18],[49,85,79,2],[50,0,85,2,"remaining"],[50,4,85,2,"remaining"],[50,13,85,11],[50,16,85,14,"remaining"],[50,25,85,23],[50,26,85,24,"endsWith"],[50,34,85,14],[50,35,85,33],[50,38,85,14],[50,42,85,40,"remaining"],[50,51,85,14],[50,54,85,55,"remaining"],[50,63,85,14],[50,69,85,2],[52,0,87,2],[52,8,87,6,"screens"],[52,15,87,13],[52,20,87,18,"undefined"],[52,29,87,2],[52,31,87,29],[53,0,89,4],[53,10,89,10,"routes"],[53,16,89,16],[53,19,89,19,"remaining"],[53,28,89,28],[53,29,90,7,"split"],[53,34,89,19],[53,35,90,13],[53,38,89,19],[53,40,91,7,"filter"],[53,46,89,19],[53,47,91,14,"Boolean"],[53,54,89,19],[53,56,92,7,"map"],[53,59,89,19],[53,60,92,11],[53,70,92,12,"segment"],[53,77,92,11],[53,79,92,21,"i"],[53,80,92,11],[53,82,92,24,"self"],[53,86,92,11],[53,88,92,33],[54,0,93,8],[54,12,93,14,"name"],[54,16,93,18],[54,19,93,21,"decodeURIComponent"],[54,37,93,39],[54,38,93,40,"segment"],[54,45,93,39],[54,46,93,8],[56,0,95,8],[56,12,95,12,"i"],[56,13,95,13],[56,18,95,18,"self"],[56,22,95,22],[56,23,95,23,"length"],[56,29,95,18],[56,32,95,32],[56,33,95,8],[56,35,95,35],[57,0,96,10],[57,17,96,17],[58,0,96,19,"name"],[58,12,96,19,"name"],[58,16,96,23],[58,18,96,19,"name"],[58,22,96,17],[59,0,96,25,"params"],[59,12,96,25,"params"],[59,18,96,31],[59,20,96,33,"parseQueryParams"],[59,36,96,49],[59,37,96,50,"path"],[59,41,96,49],[60,0,96,17],[60,11,96,10],[61,0,97,9],[63,0,99,8],[63,15,99,15],[64,0,99,17,"name"],[64,10,99,17,"name"],[64,14,99,21],[64,16,99,17,"name"],[65,0,99,15],[65,9,99,8],[66,0,100,7],[66,7,89,19],[66,8,89,4],[68,0,102,4],[68,10,102,8,"routes"],[68,16,102,14],[68,17,102,15,"length"],[68,23,102,4],[68,25,102,23],[69,0,103,6],[69,15,103,13,"createNestedStateObject"],[69,38,103,36],[69,39,103,37,"routes"],[69,45,103,36],[69,47,103,45,"initialRoutes"],[69,60,103,36],[69,61,103,6],[70,0,104,5],[72,0,106,4],[72,13,106,11,"undefined"],[72,22,106,4],[73,0,107,3],[75,0,110,2],[75,8,110,8,"configs"],[75,15,110,15],[75,18,110,18],[75,26,110,19],[75,28,110,18],[75,30,111,5,"concat"],[75,36,110,18],[75,82,112,9,"Object"],[75,88,112,15],[75,89,112,16,"keys"],[75,93,112,9],[75,94,112,21,"screens"],[75,101,112,9],[75,103,112,30,"map"],[75,106,112,9],[75,107,112,34],[75,117,112,35,"key"],[75,120,112,34],[76,0,112,34],[76,13,113,8,"createNormalizedConfigs"],[76,36,113,31],[76,37,114,10,"legacy"],[76,43,113,31],[76,45,115,10,"key"],[76,48,113,31],[76,50,116,10,"screens"],[76,57,113,31],[76,59,117,10],[76,61,113,31],[76,63,118,10,"initialRoutes"],[76,76,113,31],[76,78,119,10],[76,80,113,31],[76,81,112,34],[77,0,112,34],[77,5,112,9],[77,6,110,18],[77,9,123,5,"sort"],[77,13,110,18],[77,14,123,10],[77,24,123,11,"a"],[77,25,123,10],[77,27,123,14,"b"],[77,28,123,10],[77,30,123,20],[78,0,130,6],[78,10,130,10,"a"],[78,11,130,11],[78,12,130,12,"pattern"],[78,19,130,10],[78,24,130,24,"b"],[78,25,130,25],[78,26,130,26,"pattern"],[78,33,130,6],[78,35,130,35],[79,0,131,8],[79,15,131,15,"b"],[79,16,131,16],[79,17,131,17,"routeNames"],[79,27,131,15],[79,28,131,28,"join"],[79,32,131,15],[79,33,131,33],[79,36,131,15],[79,38,131,38,"localeCompare"],[79,51,131,15],[79,52,131,52,"a"],[79,53,131,53],[79,54,131,54,"routeNames"],[79,64,131,52],[79,65,131,65,"join"],[79,69,131,52],[79,70,131,70],[79,73,131,52],[79,74,131,15],[79,75,131,8],[80,0,132,7],[82,0,136,6],[82,10,136,10,"a"],[82,11,136,11],[82,12,136,12,"pattern"],[82,19,136,10],[82,20,136,20,"startsWith"],[82,30,136,10],[82,31,136,31,"b"],[82,32,136,32],[82,33,136,33,"pattern"],[82,40,136,10],[82,41,136,6],[82,43,136,43],[83,0,137,8],[83,15,137,15],[83,16,137,16],[83,17,137,8],[84,0,138,7],[86,0,140,6],[86,10,140,10,"b"],[86,11,140,11],[86,12,140,12,"pattern"],[86,19,140,10],[86,20,140,20,"startsWith"],[86,30,140,10],[86,31,140,31,"a"],[86,32,140,32],[86,33,140,33,"pattern"],[86,40,140,10],[86,41,140,6],[86,43,140,43],[87,0,141,8],[87,15,141,15],[87,16,141,8],[88,0,142,7],[90,0,144,6],[90,10,144,12,"aParts"],[90,16,144,18],[90,19,144,21,"a"],[90,20,144,22],[90,21,144,23,"pattern"],[90,28,144,21],[90,29,144,31,"split"],[90,34,144,21],[90,35,144,37],[90,38,144,21],[90,39,144,6],[91,0,145,6],[91,10,145,12,"bParts"],[91,16,145,18],[91,19,145,21,"b"],[91,20,145,22],[91,21,145,23,"pattern"],[91,28,145,21],[91,29,145,31,"split"],[91,34,145,21],[91,35,145,37],[91,38,145,21],[91,39,145,6],[92,0,147,6],[92,10,147,12,"aWildcardIndex"],[92,24,147,26],[92,27,147,29,"aParts"],[92,33,147,35],[92,34,147,36,"indexOf"],[92,41,147,29],[92,42,147,44],[92,45,147,29],[92,46,147,6],[93,0,148,6],[93,10,148,12,"bWildcardIndex"],[93,24,148,26],[93,27,148,29,"bParts"],[93,33,148,35],[93,34,148,36,"indexOf"],[93,41,148,29],[93,42,148,44],[93,45,148,29],[93,46,148,6],[95,0,151,6],[95,10,151,10,"aWildcardIndex"],[95,24,151,24],[95,29,151,29],[95,30,151,30],[95,31,151,10],[95,35,151,35,"bWildcardIndex"],[95,49,151,49],[95,54,151,54],[95,55,151,55],[95,56,151,6],[95,58,151,58],[96,0,152,8],[96,15,152,15],[96,16,152,16],[96,17,152,8],[97,0,153,7],[99,0,155,6],[99,10,155,10,"aWildcardIndex"],[99,24,155,24],[99,29,155,29],[99,30,155,30],[99,31,155,10],[99,35,155,35,"bWildcardIndex"],[99,49,155,49],[99,54,155,54],[99,55,155,55],[99,56,155,6],[99,58,155,58],[100,0,156,8],[100,15,156,15],[100,16,156,8],[101,0,157,7],[103,0,159,6],[103,10,159,10,"aWildcardIndex"],[103,24,159,24],[103,29,159,29,"bWildcardIndex"],[103,43,159,6],[103,45,159,45],[104,0,162,8],[104,15,162,15,"bParts"],[104,21,162,21],[104,22,162,22,"length"],[104,28,162,15],[104,31,162,31,"aParts"],[104,37,162,37],[104,38,162,38,"length"],[104,44,162,8],[105,0,163,7],[107,0,167,6],[107,13,167,13,"bWildcardIndex"],[107,27,167,27],[107,30,167,30,"aWildcardIndex"],[107,44,167,6],[108,0,168,5],[108,5,110,18],[108,6,110,2],[110,0,171,2,"configs"],[110,4,171,2,"configs"],[110,11,171,9],[110,12,171,10,"reduce"],[110,18,171,2],[110,19,171,46],[110,29,171,47,"acc"],[110,32,171,46],[110,34,171,52,"config"],[110,40,171,46],[110,42,171,63],[111,0,172,4],[111,10,172,8,"acc"],[111,13,172,11],[111,14,172,12,"config"],[111,20,172,18],[111,21,172,19,"pattern"],[111,28,172,11],[111,29,172,4],[111,31,172,29],[112,0,173,6],[112,12,173,12,"a"],[112,13,173,13],[112,16,173,16,"acc"],[112,19,173,19],[112,20,173,20,"config"],[112,26,173,26],[112,27,173,27,"pattern"],[112,34,173,19],[112,35,173,16],[112,36,173,36,"routeNames"],[112,46,173,6],[113,0,174,6],[113,12,174,12,"b"],[113,13,174,13],[113,16,174,16,"config"],[113,22,174,22],[113,23,174,23,"routeNames"],[113,33,174,6],[114,0,178,6],[114,12,178,12,"intersects"],[114,22,178,22],[114,25,179,8,"a"],[114,26,179,9],[114,27,179,10,"length"],[114,33,179,8],[114,36,179,19,"b"],[114,37,179,20],[114,38,179,21,"length"],[114,44,179,8],[114,47,180,12,"b"],[114,48,180,13],[114,49,180,14,"every"],[114,54,180,12],[114,55,180,20],[114,65,180,21,"it"],[114,67,180,20],[114,69,180,25,"i"],[114,70,180,20],[115,0,180,20],[115,17,180,31,"a"],[115,18,180,32],[115,19,180,33,"i"],[115,20,180,32],[115,21,180,31],[115,26,180,40,"it"],[115,28,180,20],[116,0,180,20],[116,9,180,12],[116,10,179,8],[116,13,181,12,"a"],[116,14,181,13],[116,15,181,14,"every"],[116,20,181,12],[116,21,181,20],[116,31,181,21,"it"],[116,33,181,20],[116,35,181,25,"i"],[116,36,181,20],[117,0,181,20],[117,17,181,31,"b"],[117,18,181,32],[117,19,181,33,"i"],[117,20,181,32],[117,21,181,31],[117,26,181,40,"it"],[117,28,181,20],[118,0,181,20],[118,9,181,12],[118,10,178,6],[120,0,183,6],[120,12,183,10],[120,13,183,11,"intersects"],[120,23,183,6],[120,25,183,23],[121,0,184,8],[121,16,184,14],[121,20,184,18,"Error"],[121,25,184,14],[121,93,186,12,"config"],[121,99,186,18],[121,100,186,19,"pattern"],[121,107,184,14],[121,135,187,33,"a"],[121,136,187,34],[121,137,187,35,"join"],[121,141,187,33],[121,142,187,40],[121,147,187,33],[121,148,184,14],[121,163,187,56,"b"],[121,164,187,57],[121,165,187,58,"join"],[121,169,187,56],[121,170,188,12],[121,175,187,56],[121,176,184,14],[121,252,184,8],[122,0,191,7],[123,0,192,5],[125,0,194,4],[125,13,194,11],[125,36,194,25,"acc"],[125,39,194,11],[125,75,195,7,"config"],[125,81,195,13],[125,82,195,14,"pattern"],[125,89,194,11],[125,91,195,24,"config"],[125,97,194,11],[125,99,194,4],[126,0,197,3],[126,5,171,2],[126,7,197,5],[126,9,171,2],[128,0,199,2],[128,8,199,6,"remaining"],[128,17,199,15],[128,22,199,20],[128,25,199,2],[128,27,199,25],[129,0,202,4],[129,10,202,10,"match"],[129,15,202,15],[129,18,202,18,"configs"],[129,25,202,25],[129,26,202,26,"find"],[129,30,202,18],[129,31,203,6],[129,41,203,7,"config"],[129,47,203,6],[130,0,203,6],[130,15,204,8,"config"],[130,21,204,14],[130,22,204,15,"path"],[130,26,204,8],[130,31,204,24],[130,33,204,8],[130,37,205,8,"config"],[130,43,205,14],[130,44,205,15,"routeNames"],[130,54,205,8],[130,55,205,26,"every"],[130,60,205,8],[130,61,207,10],[130,71,207,11,"name"],[130,75,207,10],[131,0,207,10],[133,0,207,10],[133,17,207,20],[133,36,207,21,"configs"],[133,43,207,28],[133,44,207,29,"find"],[133,48,207,21],[133,49,207,34],[133,59,207,35,"c"],[133,60,207,34],[134,0,207,34],[134,19,207,41,"c"],[134,20,207,42],[134,21,207,43,"screen"],[134,27,207,41],[134,32,207,54,"name"],[134,36,207,34],[135,0,207,34],[135,11,207,21],[135,12,207,20],[135,25,207,21],[135,39,207,61,"path"],[135,43,207,20],[135,44,207,10],[136,0,207,10],[136,9,205,8],[136,10,203,6],[137,0,203,6],[137,7,202,18],[137,8,202,4],[139,0,211,4],[139,10,211,8,"match"],[139,15,211,4],[139,17,211,15],[140,0,212,6],[140,15,212,13,"createNestedStateObject"],[140,38,212,36],[140,39,213,8,"match"],[140,44,213,13],[140,45,213,14,"routeNames"],[140,55,213,8],[140,56,213,25,"map"],[140,59,213,8],[140,60,213,29],[140,70,213,30,"name"],[140,74,213,29],[140,76,213,36,"i"],[140,77,213,29],[140,79,213,39,"self"],[140,83,213,29],[140,85,213,48],[141,0,214,10],[141,14,214,14,"i"],[141,15,214,15],[141,20,214,20,"self"],[141,24,214,24],[141,25,214,25,"length"],[141,31,214,20],[141,34,214,34],[141,35,214,10],[141,37,214,37],[142,0,215,12],[142,19,215,19],[143,0,215,21,"name"],[143,14,215,21,"name"],[143,18,215,25],[143,20,215,21,"name"],[143,24,215,19],[144,0,215,27,"params"],[144,14,215,27,"params"],[144,20,215,33],[144,22,215,35,"parseQueryParams"],[144,38,215,51],[144,39,215,52,"path"],[144,43,215,51],[144,45,215,58,"match"],[144,50,215,63],[144,51,215,64,"parse"],[144,56,215,51],[145,0,215,19],[145,13,215,12],[146,0,216,11],[148,0,218,10],[148,17,218,17],[149,0,218,19,"name"],[149,12,218,19,"name"],[149,16,218,23],[149,18,218,19,"name"],[150,0,218,17],[150,11,218,10],[151,0,219,9],[151,9,213,8],[151,10,212,36],[151,12,220,8,"initialRoutes"],[151,25,212,36],[151,26,212,6],[152,0,222,5],[154,0,224,4],[154,13,224,11,"undefined"],[154,22,224,4],[155,0,225,3],[157,0,227,2],[157,8,227,6,"result"],[157,14,227,2],[158,0,228,2],[158,8,228,6,"current"],[158,15,228,2],[160,0,230,2],[160,8,230,6,"legacy"],[160,14,230,12],[160,19,230,17],[160,24,230,2],[160,26,230,24],[161,0,233,4],[161,33,233,38,"matchAgainstConfigs"],[161,52,233,57],[161,53,234,6,"remaining"],[161,62,233,57],[161,64,235,6,"configs"],[161,71,235,13],[161,72,235,14,"map"],[161,75,235,6],[161,76,235,18],[161,86,235,19,"c"],[161,87,235,18],[162,0,235,18],[162,42,236,11,"c"],[162,43,235,18],[163,0,238,8,"regex"],[163,10,238,8,"regex"],[163,15,238,13],[163,17,238,15,"c"],[163,18,238,16],[163,19,238,17,"regex"],[163,24,238,15],[163,27,238,25],[163,31,238,29,"RegExp"],[163,37,238,25],[163,38,238,36,"c"],[163,39,238,37],[163,40,238,38,"regex"],[163,45,238,36],[163,46,238,44,"source"],[163,52,238,36],[163,55,238,53],[163,58,238,25],[163,59,238,15],[163,62,238,60,"undefined"],[164,0,235,18],[165,0,235,18],[165,7,235,6],[165,8,233,57],[165,9,233,4],[166,0,233,4],[166,10,233,12,"routes"],[166,17,233,4],[166,41,233,12,"routes"],[166,47,233,4],[167,0,233,4],[167,10,233,20,"remainingPath"],[167,23,233,4],[167,47,233,20,"remainingPath"],[167,60,233,4],[169,0,242,4],[169,10,242,8,"routes"],[169,17,242,14],[169,22,242,19,"undefined"],[169,31,242,4],[169,33,242,30],[170,0,244,6,"current"],[170,8,244,6,"current"],[170,15,244,13],[170,18,244,16,"createNestedStateObject"],[170,41,244,39],[170,42,244,40,"routes"],[170,49,244,39],[170,51,244,48,"initialRoutes"],[170,64,244,39],[170,65,244,6],[171,0,245,6,"remaining"],[171,8,245,6,"remaining"],[171,17,245,15],[171,20,245,18,"remainingPath"],[171,33,245,6],[172,0,246,6,"result"],[172,8,246,6,"result"],[172,14,246,12],[172,17,246,15,"current"],[172,24,246,6],[173,0,247,5],[174,0,248,3],[174,5,230,2],[174,11,248,9],[175,0,251,4],[175,13,251,11,"remaining"],[175,22,251,4],[175,24,251,22],[176,0,252,6],[176,36,252,38,"matchAgainstConfigs"],[176,55,252,57],[176,56,252,58,"remaining"],[176,65,252,57],[176,67,252,69,"configs"],[176,74,252,57],[176,75,252,6],[177,0,252,6],[177,12,252,12,"routes"],[177,20,252,6],[177,45,252,12,"routes"],[177,51,252,6],[178,0,252,6],[178,12,252,20,"remainingPath"],[178,26,252,6],[178,51,252,20,"remainingPath"],[178,64,252,6],[180,0,254,6,"remaining"],[180,8,254,6,"remaining"],[180,17,254,15],[180,20,254,18,"remainingPath"],[180,34,254,6],[182,0,257,6],[182,12,257,10,"routes"],[182,20,257,16],[182,25,257,21,"undefined"],[182,34,257,6],[182,36,257,32],[183,0,258,8],[183,14,258,14,"segments"],[183,22,258,22],[183,25,258,25,"remaining"],[183,34,258,34],[183,35,258,35,"split"],[183,40,258,25],[183,41,258,41],[183,44,258,25],[183,45,258,8],[184,0,260,8,"routes"],[184,10,260,8,"routes"],[184,18,260,14],[184,21,260,17],[184,22,260,18],[185,0,260,20,"name"],[185,12,260,20,"name"],[185,16,260,24],[185,18,260,26,"decodeURIComponent"],[185,36,260,44],[185,37,260,45,"segments"],[185,45,260,53],[185,46,260,54],[185,47,260,53],[185,48,260,44],[186,0,260,18],[186,11,260,17],[186,12,260,8],[187,0,261,8,"segments"],[187,10,261,8,"segments"],[187,18,261,16],[187,19,261,17,"shift"],[187,24,261,8],[188,0,262,8,"remaining"],[188,10,262,8,"remaining"],[188,19,262,17],[188,22,262,20,"segments"],[188,30,262,28],[188,31,262,29,"join"],[188,35,262,20],[188,36,262,34],[188,39,262,20],[188,40,262,8],[189,0,263,7],[191,0,265,6],[191,12,265,12,"state"],[191,17,265,17],[191,20,265,20,"createNestedStateObject"],[191,43,265,43],[191,44,265,44,"routes"],[191,52,265,43],[191,54,265,52,"initialRoutes"],[191,67,265,43],[191,68,265,6],[193,0,267,6],[193,12,267,10,"current"],[193,19,267,6],[193,21,267,19],[194,0,267,19],[196,0,269,8],[196,29,269,15,"current"],[196,36,269,8],[196,49,269,15],[196,58,269,24,"routes"],[196,64,269,15],[196,65,269,31,"current"],[196,72,269,38],[196,73,269,39,"index"],[196,78,269,31],[196,82,269,48],[196,83,269,15],[196,85,269,51,"state"],[196,90,269,8],[196,92,269,58],[197,0,269,58],[199,0,270,10,"current"],[199,12,270,10,"current"],[199,19,270,17],[199,22,270,20,"current"],[199,29,270,27],[199,30,270,28,"routes"],[199,36,270,20],[199,37,270,35,"current"],[199,44,270,42],[199,45,270,43,"index"],[199,50,270,35],[199,54,270,52],[199,55,270,20],[199,57,270,55,"state"],[199,62,270,10],[200,0,271,9],[202,0,273,9,"current"],[202,10,273,9,"current"],[202,17,273,8],[202,18,273,51,"routes"],[202,24,273,8],[202,25,274,10],[202,39,274,10,"current"],[202,46,274,17],[202,55,274,10],[202,77,274,19,"index"],[202,82,274,10],[202,87,274,28],[202,88,273,8],[202,90,275,10,"state"],[202,95,273,8],[202,98,275,18,"state"],[202,103,273,8],[203,0,276,7],[203,9,267,6],[203,15,276,13],[204,0,277,8,"result"],[204,10,277,8,"result"],[204,16,277,14],[204,19,277,17,"state"],[204,24,277,8],[205,0,278,7],[207,0,280,6,"current"],[207,8,280,6,"current"],[207,15,280,13],[207,18,280,16,"state"],[207,23,280,6],[208,0,281,5],[209,0,282,3],[211,0,284,2],[211,8,284,6,"current"],[211,15,284,13],[211,19,284,17],[211,23,284,6],[211,27,284,25,"result"],[211,33,284,31],[211,37,284,35],[211,41,284,2],[211,43,284,41],[212,0,285,4],[212,13,285,11,"undefined"],[212,22,285,4],[213,0,286,3],[215,0,288,2],[215,8,288,8,"route"],[215,13,288,13],[215,16,288,16,"findFocusedRoute"],[215,32,288,32],[215,33,288,33,"current"],[215,40,288,32],[215,41,288,2],[216,0,289,2],[216,8,289,8,"params"],[216,14,289,14],[216,17,289,17,"parseQueryParams"],[216,33,289,33],[216,34,290,4,"path"],[216,38,289,33],[216,40,291,4,"findParseConfigForRoute"],[216,63,291,27],[216,64,291,28,"route"],[216,69,291,33],[216,70,291,34,"name"],[216,74,291,27],[216,76,291,40,"configs"],[216,83,291,27],[216,84,289,33],[216,85,289,2],[218,0,294,2],[218,8,294,6,"params"],[218,14,294,2],[218,16,294,14],[219,0,296,4,"route"],[219,6,296,4,"route"],[219,11,296,9],[219,12,296,10,"params"],[219,18,296,4],[219,48,296,24,"route"],[219,53,296,29],[219,54,296,30,"params"],[219,60,296,4],[219,62,296,41,"params"],[219,68,296,4],[220,0,297,3],[222,0,299,2],[222,11,299,9,"result"],[222,17,299,2],[223,0,300,1],[225,0,302,0],[225,6,302,6,"joinPaths"],[225,15,302,15],[225,18,302,18],[225,27,302,6,"joinPaths"],[225,36,302,18],[226,0,302,18],[228,0,302,18],[228,38,302,22,"paths"],[228,43,302,18],[229,0,302,22,"paths"],[229,6,302,22,"paths"],[229,11,302,18],[230,0,302,18],[232,0,302,18],[232,11,303,2],[232,20,303,3],[232,22,303,2],[232,24,304,5,"concat"],[232,30,303,2],[232,77,304,15,"paths"],[232,82,304,20],[232,83,304,21,"map"],[232,86,304,15],[232,87,304,25],[232,97,304,26,"p"],[232,98,304,25],[233,0,304,25],[233,13,304,32,"p"],[233,14,304,33],[233,15,304,34,"split"],[233,20,304,32],[233,21,304,40],[233,24,304,32],[233,25,304,25],[234,0,304,25],[234,5,304,15],[234,6,303,2],[234,9,305,5,"filter"],[234,15,303,2],[234,16,305,12,"Boolean"],[234,23,303,2],[234,25,306,5,"join"],[234,29,303,2],[234,30,306,10],[234,33,303,2],[234,34,302,18],[235,0,302,18],[235,3,302,0],[237,0,308,0],[237,6,308,6,"matchAgainstConfigs"],[237,25,308,25],[237,28,308,28],[237,37,308,6,"matchAgainstConfigs"],[237,56,308,28],[237,57,308,29,"remaining"],[237,66,308,28],[237,68,308,48,"configs"],[237,75,308,28],[237,77,308,75],[238,0,309,2],[238,8,309,6,"routes"],[238,14,309,2],[239,0,310,2],[239,8,310,6,"remainingPath"],[239,21,310,19],[239,24,310,22,"remaining"],[239,33,310,2],[241,0,308,75],[241,31,313,13,"config"],[241,37,308,75],[242,0,314,4],[242,10,314,8],[242,11,314,9,"config"],[242,17,314,15],[242,18,314,16,"regex"],[242,23,314,4],[242,25,314,23],[243,0,315,6],[244,0,316,5],[246,0,318,4],[246,10,318,10,"match"],[246,15,318,15],[246,18,318,18,"remainingPath"],[246,31,318,31],[246,32,318,32,"match"],[246,37,318,18],[246,38,318,38,"config"],[246,44,318,44],[246,45,318,45,"regex"],[246,50,318,18],[246,51,318,4],[248,0,321,4],[248,10,321,8,"match"],[248,15,321,4],[248,17,321,15],[249,0,321,15],[251,0,322,6],[251,12,322,12,"matchedParams"],[251,25,322,25],[251,47,322,28,"config"],[251,53,322,34],[251,54,322,35,"pattern"],[251,61,322,25],[251,82,322,28],[251,98,323,10,"split"],[251,103,322,28],[251,104,323,16],[251,107,322,28],[251,109,324,9,"filter"],[251,115,322,28],[251,116,324,16],[251,126,324,17,"p"],[251,127,324,16],[252,0,324,16],[252,17,324,23,"p"],[252,18,324,24],[252,19,324,25,"startsWith"],[252,29,324,23],[252,30,324,36],[252,33,324,23],[252,34,324,16],[253,0,324,16],[253,9,322,28],[253,11,325,9,"reduce"],[253,17,322,28],[253,18,326,10],[253,28,326,11,"acc"],[253,31,326,10],[253,33,326,16,"p"],[253,34,326,10],[253,36,326,19,"i"],[253,37,326,10],[254,0,326,10],[254,17,327,12],[254,40,327,26,"acc"],[254,43,327,12],[254,79,329,15,"p"],[254,80,327,12],[254,82,329,19,"match"],[254,87,329,24],[254,88,329,26],[254,89,329,27,"i"],[254,90,329,28],[254,93,329,31],[254,94,329,26],[254,98,329,36],[254,99,329,24],[254,100,329,19],[254,101,329,39,"replace"],[254,108,329,19],[254,109,329,47],[254,113,329,19],[254,115,329,53],[254,117,329,19],[254,118,327,12],[254,120,326,10],[255,0,326,10],[255,9,322,28],[255,11,331,10],[255,13,322,28],[255,14,322,6],[256,0,334,6,"routes"],[256,8,334,6,"routes"],[256,14,334,12],[256,17,334,15,"config"],[256,23,334,21],[256,24,334,22,"routeNames"],[256,34,334,15],[256,35,334,33,"map"],[256,38,334,15],[256,39,334,37],[256,49,334,38,"name"],[256,53,334,37],[256,55,334,47],[257,0,334,47],[259,0,335,8],[259,14,335,14,"config"],[259,20,335,20],[259,23,335,23,"configs"],[259,30,335,30],[259,31,335,31,"find"],[259,35,335,23],[259,36,335,36],[259,46,335,37,"c"],[259,47,335,36],[260,0,335,36],[260,19,335,43,"c"],[260,20,335,44],[260,21,335,45,"screen"],[260,27,335,43],[260,32,335,56,"name"],[260,36,335,36],[261,0,335,36],[261,11,335,23],[261,12,335,8],[262,0,336,8],[262,14,336,14,"params"],[262,20,336,20],[262,23,336,23,"config"],[262,29,336,20],[262,65,336,23,"config"],[262,71,336,29],[262,72,336,31,"path"],[262,76,336,20],[262,97,336,23],[262,110,337,12,"split"],[262,115,336,23],[262,116,337,18],[262,119,336,23],[262,121,338,11,"filter"],[262,127,336,23],[262,128,338,18],[262,138,338,19,"p"],[262,139,338,18],[263,0,338,18],[263,19,338,25,"p"],[263,20,338,26],[263,21,338,27,"startsWith"],[263,31,338,25],[263,32,338,38],[263,35,338,25],[263,36,338,18],[264,0,338,18],[264,11,336,23],[264,13,339,11,"reduce"],[264,19,336,23],[264,20,339,39],[264,30,339,40,"acc"],[264,33,339,39],[264,35,339,45,"p"],[264,36,339,39],[264,38,339,51],[265,0,340,12],[265,16,340,18,"value"],[265,21,340,23],[265,24,340,26,"matchedParams"],[265,37,340,39],[265,38,340,40,"p"],[265,39,340,39],[265,40,340,12],[267,0,342,12],[267,16,342,16,"value"],[267,21,342,12],[267,23,342,23],[268,0,342,23],[270,0,343,14],[270,18,343,20,"key"],[270,21,343,23],[270,24,343,26,"p"],[270,25,343,27],[270,26,343,28,"replace"],[270,33,343,26],[270,34,343,36],[270,38,343,26],[270,40,343,42],[270,42,343,26],[270,44,343,46,"replace"],[270,51,343,26],[270,52,343,54],[270,57,343,26],[270,59,343,61],[270,61,343,26],[270,62,343,14],[271,0,344,14,"acc"],[271,14,344,14,"acc"],[271,17,344,17],[271,18,344,18,"key"],[271,21,344,17],[271,22,344,14],[271,25,344,25],[271,42,344,25,"config"],[271,48,344,31],[271,49,344,32,"parse"],[271,54,344,25],[271,81,344,40,"key"],[271,84,344,25],[271,88,344,47,"config"],[271,94,344,53],[271,95,344,54,"parse"],[271,100,344,47],[271,101,344,60,"key"],[271,104,344,47],[271,106,344,65,"value"],[271,111,344,47],[271,112,344,25],[271,115,344,74,"value"],[271,120,344,14],[272,0,345,13],[274,0,347,12],[274,19,347,19,"acc"],[274,22,347,12],[275,0,348,11],[275,11,336,23],[275,13,348,13],[275,15,336,23],[275,16,336,8],[277,0,350,8],[277,14,350,12,"params"],[277,20,350,18],[277,24,350,22,"Object"],[277,30,350,28],[277,31,350,29,"keys"],[277,35,350,22],[277,36,350,34,"params"],[277,42,350,22],[277,44,350,42,"length"],[277,50,350,8],[277,52,350,50],[278,0,351,10],[278,19,351,17],[279,0,351,19,"name"],[279,14,351,19,"name"],[279,18,351,23],[279,20,351,19,"name"],[279,24,351,17],[280,0,351,25,"params"],[280,14,351,25,"params"],[280,20,351,31],[280,22,351,25,"params"],[281,0,351,17],[281,13,351,10],[282,0,352,9],[284,0,354,8],[284,17,354,15],[285,0,354,17,"name"],[285,12,354,17,"name"],[285,16,354,21],[285,18,354,17,"name"],[286,0,354,15],[286,11,354,8],[287,0,355,7],[287,9,334,15],[287,10,334,6],[288,0,357,6,"remainingPath"],[288,8,357,6,"remainingPath"],[288,21,357,19],[288,24,357,22,"remainingPath"],[288,37,357,35],[288,38,357,36,"replace"],[288,45,357,22],[288,46,357,44,"match"],[288,51,357,49],[288,52,357,50],[288,53,357,49],[288,54,357,22],[288,56,357,54],[288,58,357,22],[288,59,357,6],[289,0,359,6],[290,0,360,5],[291,0,308,75],[293,0,313,2],[293,57,313,23,"configs"],[293,64,313,2],[293,104,313,32],[294,0,313,32],[294,10,313,13,"config"],[294,16,313,32],[296,0,313,32],[296,23,313,13,"config"],[296,29,313,32],[298,0,313,32],[298,31,315,6],[299,0,313,32],[299,28,359,6],[300,0,361,3],[302,0,363,2],[302,11,363,9],[303,0,363,11,"routes"],[303,6,363,11,"routes"],[303,12,363,17],[303,14,363,11,"routes"],[303,20,363,9],[304,0,363,19,"remainingPath"],[304,6,363,19,"remainingPath"],[304,19,363,32],[304,21,363,19,"remainingPath"],[305,0,363,9],[305,5,363,2],[306,0,364,1],[306,3,308,0],[308,0,366,0],[308,6,366,6,"createNormalizedConfigs"],[308,29,366,29],[308,32,366,32],[308,41,366,6,"createNormalizedConfigs"],[308,64,366,32],[308,65,367,2,"legacy"],[308,71,366,32],[308,73,368,2,"screen"],[308,79,366,32],[308,81,369,2,"routeConfig"],[308,92,366,32],[308,94,374,20],[309,0,374,20],[309,8,370,2,"routeNames"],[309,18,374,20],[309,89,370,25],[309,91,374,20],[310,0,374,20],[310,8,371,2,"initials"],[310,16,374,20],[311,0,374,20],[311,8,372,2,"parentScreens"],[311,21,374,20],[312,0,374,20],[312,8,373,2,"parentPattern"],[312,21,374,20],[313,0,375,2],[313,8,375,8,"configs"],[313,15,375,30],[313,18,375,33],[313,20,375,2],[314,0,377,2,"routeNames"],[314,4,377,2,"routeNames"],[314,14,377,12],[314,15,377,13,"push"],[314,19,377,2],[314,20,377,18,"screen"],[314,26,377,2],[315,0,379,2,"parentScreens"],[315,4,379,2,"parentScreens"],[315,17,379,15],[315,18,379,16,"push"],[315,22,379,2],[315,23,379,21,"screen"],[315,29,379,2],[316,0,381,2],[316,8,381,8,"config"],[316,14,381,14],[316,17,381,17,"routeConfig"],[316,28,381,28],[316,29,381,29,"screen"],[316,35,381,28],[316,36,381,2],[318,0,383,2],[318,8,383,6],[318,15,383,13,"config"],[318,21,383,6],[318,26,383,24],[318,34,383,2],[318,36,383,34],[319,0,385,4],[319,10,385,10,"pattern"],[319,17,385,17],[319,20,385,20,"parentPattern"],[319,33,385,33],[319,36,385,36,"joinPaths"],[319,45,385,45],[319,46,385,46,"parentPattern"],[319,59,385,45],[319,61,385,61,"config"],[319,67,385,45],[319,68,385,33],[319,71,385,71,"config"],[319,77,385,4],[320,0,387,4,"configs"],[320,6,387,4,"configs"],[320,13,387,11],[320,14,387,12,"push"],[320,18,387,4],[320,19,387,17,"createConfigItem"],[320,35,387,33],[320,36,387,34,"legacy"],[320,42,387,33],[320,44,387,42,"screen"],[320,50,387,33],[320,52,387,50,"routeNames"],[320,62,387,33],[320,64,387,62,"pattern"],[320,71,387,33],[320,73,387,71,"config"],[320,79,387,33],[320,80,387,4],[321,0,388,3],[321,5,383,2],[321,11,388,9],[321,15,388,13],[321,22,388,20,"config"],[321,28,388,13],[321,33,388,31],[321,41,388,9],[321,43,388,41],[322,0,389,4],[322,10,389,8,"pattern"],[322,18,389,4],[324,0,394,4],[324,10,394,8],[324,17,394,15,"config"],[324,23,394,21],[324,24,394,22,"path"],[324,28,394,8],[324,33,394,31],[324,41,394,4],[324,43,394,41],[325,0,395,6],[325,12,395,10,"legacy"],[325,18,395,6],[325,20,395,18],[326,0,396,8,"pattern"],[326,10,396,8,"pattern"],[326,18,396,15],[326,21,397,10,"config"],[326,27,397,16],[326,28,397,17,"exact"],[326,33,397,10],[326,38,397,27],[326,42,397,10],[326,46,397,35,"parentPattern"],[326,59,397,10],[326,62,398,14,"joinPaths"],[326,71,398,23],[326,72,398,24,"parentPattern"],[326,85,398,23],[326,87,398,39,"config"],[326,93,398,45],[326,94,398,46,"path"],[326,98,398,23],[326,99,397,10],[326,102,399,14,"config"],[326,108,399,20],[326,109,399,21,"path"],[326,113,396,8],[327,0,400,7],[327,9,395,6],[327,15,400,13],[328,0,401,8],[328,14,401,12,"config"],[328,20,401,18],[328,21,401,19,"exact"],[328,26,401,12],[328,30,401,28,"config"],[328,36,401,34],[328,37,401,35,"path"],[328,41,401,28],[328,46,401,44,"undefined"],[328,55,401,8],[328,57,401,55],[329,0,402,10],[329,18,402,16],[329,22,402,20,"Error"],[329,27,402,16],[329,28,403,12],[329,178,402,16],[329,179,402,10],[330,0,405,9],[332,0,407,8,"pattern"],[332,10,407,8,"pattern"],[332,18,407,15],[332,21,408,10,"config"],[332,27,408,16],[332,28,408,17,"exact"],[332,33,408,10],[332,38,408,27],[332,42,408,10],[332,45,409,14,"joinPaths"],[332,54,409,23],[332,55,409,24,"parentPattern"],[332,68,409,37],[332,72,409,41],[332,74,409,23],[332,76,409,45,"config"],[332,82,409,51],[332,83,409,52,"path"],[332,87,409,45],[332,91,409,60],[332,93,409,23],[332,94,408,10],[332,97,410,14,"config"],[332,103,410,20],[332,104,410,21,"path"],[332,108,410,14],[332,112,410,29],[332,114,407,8],[333,0,411,7],[335,0,413,6,"configs"],[335,8,413,6,"configs"],[335,15,413,13],[335,16,413,14,"push"],[335,20,413,6],[335,21,414,8,"createConfigItem"],[335,37,414,24],[335,38,415,10,"legacy"],[335,44,414,24],[335,46,416,10,"screen"],[335,52,414,24],[335,54,417,10,"routeNames"],[335,64,414,24],[335,66,418,10,"pattern"],[335,74,414,24],[335,76,419,10,"config"],[335,82,419,16],[335,83,419,17,"path"],[335,87,414,24],[335,89,420,10,"config"],[335,95,420,16],[335,96,420,17,"parse"],[335,101,414,24],[335,102,413,6],[336,0,423,5],[338,0,425,4],[338,10,425,8,"config"],[338,16,425,14],[338,17,425,15,"screens"],[338,24,425,4],[338,26,425,24],[339,0,427,6],[339,12,427,10,"config"],[339,18,427,16],[339,19,427,17,"initialRouteName"],[339,35,427,6],[339,37,427,35],[340,0,428,8,"initials"],[340,10,428,8,"initials"],[340,18,428,16],[340,19,428,17,"push"],[340,23,428,8],[340,24,428,22],[341,0,429,10,"initialRouteName"],[341,12,429,10,"initialRouteName"],[341,28,429,26],[341,30,429,28,"config"],[341,36,429,34],[341,37,429,35,"initialRouteName"],[341,53,428,22],[342,0,430,10,"parentScreens"],[342,12,430,10,"parentScreens"],[342,25,430,23],[342,27,430,10,"parentScreens"],[343,0,428,22],[343,11,428,8],[344,0,432,7],[346,0,434,6,"Object"],[346,8,434,6,"Object"],[346,14,434,12],[346,15,434,13,"keys"],[346,19,434,6],[346,20,434,18,"config"],[346,26,434,24],[346,27,434,25,"screens"],[346,34,434,6],[346,36,434,34,"forEach"],[346,43,434,6],[346,44,434,42],[346,54,434,43,"nestedConfig"],[346,66,434,42],[346,68,434,60],[347,0,434,60],[349,0,435,8],[349,14,435,14,"result"],[349,20,435,20],[349,23,435,23,"createNormalizedConfigs"],[349,46,435,46],[349,47,436,10,"legacy"],[349,53,435,46],[349,55,437,10,"nestedConfig"],[349,67,435,46],[349,69,438,10,"config"],[349,75,438,16],[349,76,438,17,"screens"],[349,83,435,46],[349,85,439,10,"routeNames"],[349,95,435,46],[349,97,440,10,"initials"],[349,105,435,46],[349,140,441,14,"parentScreens"],[349,153,435,46],[349,169,442,10,"pattern"],[349,177,435,46],[349,201,442,21,"parentPattern"],[349,214,435,46],[349,215,435,8],[350,0,445,8,"configs"],[350,10,445,8,"configs"],[350,17,445,15],[350,18,445,16,"push"],[350,22,445,8],[350,29,445,8,"configs"],[350,36,445,15],[350,71,445,24,"result"],[350,77,445,15],[350,79,445,8],[351,0,446,7],[351,9,434,6],[352,0,447,5],[353,0,448,3],[355,0,450,2,"routeNames"],[355,4,450,2,"routeNames"],[355,14,450,12],[355,15,450,13,"pop"],[355,18,450,2],[356,0,452,2],[356,11,452,9,"configs"],[356,18,452,2],[357,0,453,1],[357,3,366,0],[359,0,455,0],[359,6,455,6,"createConfigItem"],[359,22,455,22],[359,25,455,25],[359,34,455,6,"createConfigItem"],[359,50,455,25],[359,51,456,2,"legacy"],[359,57,455,25],[359,59,457,2,"screen"],[359,65,455,25],[359,67,458,2,"routeNames"],[359,77,455,25],[359,79,459,2,"pattern"],[359,86,455,25],[359,88,460,2,"path"],[359,92,455,25],[359,94,461,2,"parse"],[359,99,455,25],[359,101,462,18],[360,0,464,2,"pattern"],[360,4,464,2,"pattern"],[360,11,464,9],[360,14,464,12,"pattern"],[360,21,464,19],[360,22,464,20,"split"],[360,27,464,12],[360,28,464,26],[360,31,464,12],[360,33,464,31,"filter"],[360,39,464,12],[360,40,464,38,"Boolean"],[360,47,464,12],[360,49,464,47,"join"],[360,53,464,12],[360,54,464,52],[360,57,464,12],[360,58,464,2],[361,0,466,2],[361,8,466,8,"regex"],[361,13,466,13],[361,16,466,16,"pattern"],[361,23,466,23],[361,26,467,6],[361,30,467,10,"RegExp"],[361,36,467,6],[361,44,468,13,"pattern"],[361,51,468,20],[361,52,469,11,"split"],[361,57,468,13],[361,58,469,17],[361,61,468,13],[361,63,470,11,"map"],[361,66,468,13],[361,67,470,15],[361,77,470,16,"it"],[361,79,470,15],[361,81,470,23],[362,0,471,12],[362,10,471,16,"legacy"],[362,16,471,22],[362,20,471,26,"it"],[362,22,471,28],[362,27,471,33],[362,30,471,12],[362,32,471,38],[363,0,472,14],[363,14,472,20],[363,18,472,24,"Error"],[363,23,472,20],[363,24,473,16],[363,172,472,20],[363,173,472,14],[364,0,475,13],[366,0,477,12],[366,10,477,16,"it"],[366,12,477,18],[366,13,477,19,"startsWith"],[366,23,477,16],[366,24,477,30],[366,27,477,16],[366,28,477,12],[366,30,477,36],[367,0,478,14],[367,32,478,35,"it"],[367,34,478,37],[367,35,478,38,"endsWith"],[367,43,478,35],[367,44,478,47],[367,47,478,35],[367,51,478,54],[367,54,478,35],[367,57,478,60],[367,59,478,14],[368,0,479,13],[370,0,481,12],[370,14,481,22,"it"],[370,16,481,24],[370,21,481,29],[370,24,481,22],[370,27,481,35],[370,31,481,22],[370,34,481,42],[370,67,481,49,"it"],[370,69,481,42],[370,70,481,12],[371,0,482,11],[371,5,468,13],[371,7,483,11,"join"],[371,11,468,13],[371,12,483,16],[371,14,468,13],[371,15,467,6],[371,22,466,23],[371,25,485,6,"undefined"],[371,34,466,2],[372,0,487,2],[372,11,487,9],[373,0,488,4,"screen"],[373,6,488,4,"screen"],[373,12,488,10],[373,14,488,4,"screen"],[373,20,487,9],[374,0,489,4,"regex"],[374,6,489,4,"regex"],[374,11,489,9],[374,13,489,4,"regex"],[374,18,487,9],[375,0,490,4,"pattern"],[375,6,490,4,"pattern"],[375,13,490,11],[375,15,490,4,"pattern"],[375,22,487,9],[376,0,491,4,"path"],[376,6,491,4,"path"],[376,10,491,8],[376,12,491,4,"path"],[376,16,487,9],[377,0,493,4,"routeNames"],[377,6,493,4,"routeNames"],[377,16,493,14],[377,51,493,20,"routeNames"],[377,61,493,14],[377,62,487,9],[378,0,494,4,"parse"],[378,6,494,4,"parse"],[378,11,494,9],[378,13,494,4,"parse"],[379,0,487,9],[379,5,487,2],[380,0,496,1],[380,3,455,0],[382,0,498,0],[382,6,498,6,"findParseConfigForRoute"],[382,29,498,29],[382,32,498,32],[382,41,498,6,"findParseConfigForRoute"],[382,64,498,32],[382,65,499,2,"routeName"],[382,74,498,32],[382,76,500,2,"flatConfig"],[382,86,498,32],[382,88,501,30],[383,0,502,2],[383,58,502,23,"flatConfig"],[383,68,502,2],[383,111,502,35],[384,0,502,35],[384,10,502,13,"config"],[384,16,502,35],[386,0,503,4],[386,10,503,8,"routeName"],[386,19,503,17],[386,24,503,22,"config"],[386,30,503,28],[386,31,503,29,"routeNames"],[386,41,503,22],[386,42,503,40,"config"],[386,48,503,46],[386,49,503,47,"routeNames"],[386,59,503,40],[386,60,503,58,"length"],[386,66,503,40],[386,69,503,67],[386,70,503,22],[386,71,503,4],[386,73,503,71],[387,0,504,6],[387,15,504,13,"config"],[387,21,504,19],[387,22,504,20,"parse"],[387,27,504,6],[388,0,505,5],[389,0,506,3],[391,0,508,2],[391,11,508,9,"undefined"],[391,20,508,2],[392,0,509,1],[392,3,498,0],[394,0,512,0],[394,6,512,6,"findInitialRoute"],[394,22,512,22],[394,25,512,25],[394,34,512,6,"findInitialRoute"],[394,50,512,25],[394,51,513,2,"routeName"],[394,60,512,25],[394,62,514,2,"parentScreens"],[394,75,512,25],[394,77,515,2,"initialRoutes"],[394,90,512,25],[394,92,516,25],[395,0,517,2],[395,58,517,23,"initialRoutes"],[395,71,517,2],[395,114,517,38],[396,0,517,38],[396,10,517,13,"config"],[396,16,517,38],[398,0,518,4],[398,10,518,8,"parentScreens"],[398,23,518,21],[398,24,518,22,"length"],[398,30,518,8],[398,35,518,33,"config"],[398,41,518,39],[398,42,518,40,"parentScreens"],[398,55,518,33],[398,56,518,54,"length"],[398,62,518,4],[398,64,518,62],[399,0,519,6],[399,12,519,10,"sameParents"],[399,23,519,21],[399,26,519,24],[399,30,519,6],[401,0,520,6],[401,13,520,11],[401,17,520,15,"i"],[401,18,520,16],[401,21,520,19],[401,22,520,6],[401,24,520,22,"i"],[401,25,520,23],[401,28,520,26,"parentScreens"],[401,41,520,39],[401,42,520,40,"length"],[401,48,520,6],[401,50,520,48,"i"],[401,51,520,49],[401,53,520,6],[401,55,520,53],[402,0,521,8],[402,14,521,12,"parentScreens"],[402,27,521,25],[402,28,521,26,"i"],[402,29,521,25],[402,30,521,12],[402,31,521,29,"localeCompare"],[402,44,521,12],[402,45,521,43,"config"],[402,51,521,49],[402,52,521,50,"parentScreens"],[402,65,521,43],[402,66,521,64,"i"],[402,67,521,43],[402,68,521,12],[402,74,521,72],[402,75,521,8],[402,77,521,75],[403,0,522,10,"sameParents"],[403,12,522,10,"sameParents"],[403,23,522,21],[403,26,522,24],[403,31,522,10],[404,0,523,10],[405,0,524,9],[406,0,525,7],[408,0,526,6],[408,12,526,10,"sameParents"],[408,23,526,6],[408,25,526,23],[409,0,527,8],[409,17,527,15,"routeName"],[409,26,527,24],[409,31,527,29,"config"],[409,37,527,35],[409,38,527,36,"initialRouteName"],[409,54,527,15],[409,57,528,12,"config"],[409,63,528,18],[409,64,528,19,"initialRouteName"],[409,80,527,15],[409,83,529,12,"undefined"],[409,92,527,8],[410,0,530,7],[411,0,531,5],[412,0,532,3],[414,0,533,2],[414,11,533,9,"undefined"],[414,20,533,2],[415,0,534,1],[415,3,512,0],[417,0,538,0],[417,6,538,6,"createStateObject"],[417,23,538,23],[417,26,538,26],[417,35,538,6,"createStateObject"],[417,52,538,26],[417,53,539,2,"initialRoute"],[417,65,538,26],[417,67,540,2,"route"],[417,72,538,26],[417,74,541,2,"isEmpty"],[417,81,538,26],[417,83,542,19],[418,0,543,2],[418,8,543,6,"isEmpty"],[418,15,543,2],[418,17,543,15],[419,0,544,4],[419,10,544,8,"initialRoute"],[419,22,544,4],[419,24,544,22],[420,0,545,6],[420,15,545,13],[421,0,546,8,"index"],[421,10,546,8,"index"],[421,15,546,13],[421,17,546,15],[421,18,545,13],[422,0,547,8,"routes"],[422,10,547,8,"routes"],[422,16,547,14],[422,18,547,16],[422,19,547,17],[423,0,547,19,"name"],[423,12,547,19,"name"],[423,16,547,23],[423,18,547,25,"initialRoute"],[424,0,547,17],[424,11,547,16],[424,13,547,41,"route"],[424,18,547,16],[425,0,545,13],[425,9,545,6],[426,0,549,5],[426,7,544,4],[426,13,549,11],[427,0,550,6],[427,15,550,13],[428,0,551,8,"routes"],[428,10,551,8,"routes"],[428,16,551,14],[428,18,551,16],[428,19,551,17,"route"],[428,24,551,16],[429,0,550,13],[429,9,550,6],[430,0,553,5],[431,0,554,3],[431,5,543,2],[431,11,554,9],[432,0,555,4],[432,10,555,8,"initialRoute"],[432,22,555,4],[432,24,555,22],[433,0,556,6],[433,15,556,13],[434,0,557,8,"index"],[434,10,557,8,"index"],[434,15,557,13],[434,17,557,15],[434,18,556,13],[435,0,558,8,"routes"],[435,10,558,8,"routes"],[435,16,558,14],[435,18,558,16],[435,19,558,17],[436,0,558,19,"name"],[436,12,558,19,"name"],[436,16,558,23],[436,18,558,25,"initialRoute"],[437,0,558,17],[437,11,558,16],[437,40,558,46,"route"],[437,45,558,16],[438,0,558,53,"state"],[438,12,558,53,"state"],[438,17,558,58],[438,19,558,60],[439,0,558,62,"routes"],[439,14,558,62,"routes"],[439,20,558,68],[439,22,558,70],[440,0,558,60],[441,0,558,16],[442,0,556,13],[442,9,556,6],[443,0,560,5],[443,7,555,4],[443,13,560,11],[444,0,561,6],[444,15,561,13],[445,0,562,8,"routes"],[445,10,562,8,"routes"],[445,16,562,14],[445,18,562,16],[445,46,562,22,"route"],[445,51,562,16],[446,0,562,29,"state"],[446,12,562,29,"state"],[446,17,562,34],[446,19,562,36],[447,0,562,38,"routes"],[447,14,562,38,"routes"],[447,20,562,44],[447,22,562,46],[448,0,562,36],[449,0,562,16],[450,0,561,13],[450,9,561,6],[451,0,564,5],[452,0,565,3],[453,0,566,1],[453,3,538,0],[455,0,568,0],[455,6,568,6,"createNestedStateObject"],[455,29,568,29],[455,32,568,32],[455,41,568,6,"createNestedStateObject"],[455,64,568,32],[455,65,569,2,"routes"],[455,71,568,32],[455,73,570,2,"initialRoutes"],[455,86,568,32],[455,88,571,5],[456,0,572,2],[456,8,572,6,"state"],[456,13,572,2],[457,0,573,2],[457,8,573,6,"route"],[457,13,573,11],[457,16,573,14,"routes"],[457,22,573,20],[457,23,573,21,"shift"],[457,28,573,14],[457,30,573,2],[458,0,574,2],[458,8,574,8,"parentScreens"],[458,21,574,31],[458,24,574,34],[458,26,574,2],[459,0,576,2],[459,8,576,6,"initialRoute"],[459,20,576,18],[459,23,576,21,"findInitialRoute"],[459,39,576,37],[459,40,576,38,"route"],[459,45,576,43],[459,46,576,44,"name"],[459,50,576,37],[459,52,576,50,"parentScreens"],[459,65,576,37],[459,67,576,65,"initialRoutes"],[459,80,576,37],[459,81,576,2],[460,0,578,2,"parentScreens"],[460,4,578,2,"parentScreens"],[460,17,578,15],[460,18,578,16,"push"],[460,22,578,2],[460,23,578,21,"route"],[460,28,578,26],[460,29,578,27,"name"],[460,33,578,2],[461,0,580,2,"state"],[461,4,580,2,"state"],[461,9,580,7],[461,12,580,10,"createStateObject"],[461,29,580,27],[461,30,580,28,"initialRoute"],[461,42,580,27],[461,44,580,42,"route"],[461,49,580,27],[461,51,580,49,"routes"],[461,57,580,55],[461,58,580,56,"length"],[461,64,580,49],[461,69,580,67],[461,70,580,27],[461,71,580,2],[463,0,582,2],[463,8,582,6,"routes"],[463,14,582,12],[463,15,582,13,"length"],[463,21,582,6],[463,24,582,22],[463,25,582,2],[463,27,582,25],[464,0,583,4],[464,10,583,8,"nestedState"],[464,21,583,19],[464,24,583,22,"state"],[464,29,583,4],[466,0,585,4],[466,13,585,12,"route"],[466,18,585,17],[466,21,585,20,"routes"],[466,27,585,26],[466,28,585,27,"shift"],[466,33,585,20],[466,35,585,4],[466,37,585,52],[467,0,586,6,"initialRoute"],[467,8,586,6,"initialRoute"],[467,20,586,18],[467,23,586,21,"findInitialRoute"],[467,39,586,37],[467,40,586,38,"route"],[467,45,586,43],[467,46,586,44,"name"],[467,50,586,37],[467,52,586,50,"parentScreens"],[467,65,586,37],[467,67,586,65,"initialRoutes"],[467,80,586,37],[467,81,586,6],[468,0,588,6],[468,12,588,12,"nestedStateIndex"],[468,28,588,28],[468,31,589,8,"nestedState"],[468,42,589,19],[468,43,589,20,"index"],[468,48,589,8],[468,52,589,29,"nestedState"],[468,63,589,40],[468,64,589,41,"routes"],[468,70,589,29],[468,71,589,48,"length"],[468,77,589,29],[468,80,589,57],[468,81,588,6],[469,0,591,6,"nestedState"],[469,8,591,6,"nestedState"],[469,19,591,17],[469,20,591,18,"routes"],[469,26,591,6],[469,27,591,25,"nestedStateIndex"],[469,43,591,6],[469,45,591,43,"state"],[469,50,591,6],[469,53,591,51,"createStateObject"],[469,70,591,68],[469,71,592,8,"initialRoute"],[469,83,591,68],[469,85,593,8,"route"],[469,90,591,68],[469,92,594,8,"routes"],[469,98,594,14],[469,99,594,15,"length"],[469,105,594,8],[469,110,594,26],[469,111,591,68],[469,112,591,6],[471,0,597,6],[471,12,597,10,"routes"],[471,18,597,16],[471,19,597,17,"length"],[471,25,597,10],[471,28,597,26],[471,29,597,6],[471,31,597,29],[472,0,598,8,"nestedState"],[472,10,598,8,"nestedState"],[472,21,598,19],[472,24,598,22,"nestedState"],[472,35,598,33],[472,36,598,34,"routes"],[472,42,598,22],[472,43,598,41,"nestedStateIndex"],[472,59,598,22],[472,61,599,11,"state"],[472,66,598,8],[473,0,600,7],[475,0,602,6,"parentScreens"],[475,8,602,6,"parentScreens"],[475,21,602,19],[475,22,602,20,"push"],[475,26,602,6],[475,27,602,25,"route"],[475,32,602,30],[475,33,602,31,"name"],[475,37,602,6],[476,0,603,5],[477,0,604,3],[479,0,606,2],[479,11,606,9,"state"],[479,16,606,2],[480,0,607,1],[480,3,568,0],[482,0,609,0],[482,6,609,6,"findFocusedRoute"],[482,22,609,22],[482,25,609,25],[482,34,609,6,"findFocusedRoute"],[482,50,609,25],[482,51,609,26,"state"],[482,56,609,25],[482,58,609,50],[483,0,609,50],[485,0,610,2],[485,8,610,6,"current"],[485,15,610,39],[485,18,610,42,"state"],[485,23,610,2],[487,0,612,2],[487,24,612,9,"current"],[487,31,612,2],[487,44,612,9],[487,54,612,18,"routes"],[487,60,612,9],[487,61,612,25,"current"],[487,68,612,32],[487,69,612,33,"index"],[487,74,612,25],[487,78,612,42],[487,79,612,9],[487,81,612,45,"state"],[487,86,612,2],[487,88,612,52],[488,0,612,52],[490,0,614,4,"current"],[490,6,614,4,"current"],[490,13,614,11],[490,16,614,14,"current"],[490,23,614,21],[490,24,614,22,"routes"],[490,30,614,14],[490,31,614,29,"current"],[490,38,614,36],[490,39,614,37,"index"],[490,44,614,29],[490,48,614,46],[490,49,614,14],[490,51,614,49,"state"],[490,56,614,4],[491,0,615,3],[493,0,617,2],[493,8,617,8,"route"],[493,13,617,13],[493,16,617,17,"current"],[493,23,617,16],[493,24,617,59,"routes"],[493,30,617,16],[493,31,618,4],[493,45,618,4,"current"],[493,52,618,11],[493,61,618,4],[493,83,618,13,"index"],[493,88,618,4],[493,93,618,22],[493,94,617,16],[493,95,617,2],[494,0,621,2],[494,11,621,9,"route"],[494,16,621,2],[495,0,622,1],[495,3,609,0],[497,0,624,0],[497,6,624,6,"parseQueryParams"],[497,22,624,22],[497,25,624,25],[497,34,624,6,"parseQueryParams"],[497,50,624,25],[497,51,625,2,"path"],[497,55,624,25],[497,57,626,2,"parseConfig"],[497,68,624,25],[497,70,627,5],[498,0,628,2],[498,8,628,8,"query"],[498,13,628,13],[498,16,628,16,"path"],[498,20,628,20],[498,21,628,21,"split"],[498,26,628,16],[498,27,628,27],[498,30,628,16],[498,32,628,32],[498,33,628,16],[498,34,628,2],[499,0,629,2],[499,8,629,8,"params"],[499,14,629,14],[499,17,629,17,"queryString"],[499,28,629,28],[499,29,629,29,"parse"],[499,34,629,17],[499,35,629,35,"query"],[499,40,629,17],[499,41,629,2],[501,0,631,2],[501,8,631,6,"parseConfig"],[501,19,631,2],[501,21,631,19],[502,0,632,4,"Object"],[502,6,632,4,"Object"],[502,12,632,10],[502,13,632,11,"keys"],[502,17,632,4],[502,18,632,16,"params"],[502,24,632,4],[502,26,632,24,"forEach"],[502,33,632,4],[502,34,632,32],[502,44,632,33,"name"],[502,48,632,32],[502,50,632,42],[503,0,633,6],[503,12,633,10,"parseConfig"],[503,23,633,21],[503,24,633,22,"name"],[503,28,633,21],[503,29,633,10],[503,33,633,31],[503,40,633,38,"params"],[503,46,633,44],[503,47,633,45,"name"],[503,51,633,44],[503,52,633,31],[503,57,633,55],[503,65,633,6],[503,67,633,65],[504,0,634,8,"params"],[504,10,634,8,"params"],[504,16,634,14],[504,17,634,15,"name"],[504,21,634,14],[504,22,634,8],[504,25,634,23,"parseConfig"],[504,36,634,34],[504,37,634,35,"name"],[504,41,634,34],[504,42,634,23],[504,43,634,41,"params"],[504,49,634,47],[504,50,634,48,"name"],[504,54,634,47],[504,55,634,23],[504,56,634,8],[505,0,635,7],[506,0,636,5],[506,7,632,4],[507,0,637,3],[509,0,639,2],[509,11,639,9,"Object"],[509,17,639,15],[509,18,639,16,"keys"],[509,22,639,9],[509,23,639,21,"params"],[509,29,639,9],[509,31,639,29,"length"],[509,37,639,9],[509,40,639,38,"params"],[509,46,639,9],[509,49,639,47,"undefined"],[509,58,639,2],[510,0,640,1],[510,3,624,0]],"functionMap":{"names":["<global>","getStateFromPath","remaining.split.filter.map$argument_0","Object.keys.map$argument_0","concat.sort$argument_0","configs.reduce$argument_0","b.every$argument_0","a.every$argument_0","configs.find$argument_0","config.routeNames.every$argument_0","match.routeNames.map$argument_0","configs.map$argument_0","joinPaths","paths.map$argument_0","matchAgainstConfigs","<anonymous>","config.routeNames.map$argument_0","createNormalizedConfigs","Object.keys.forEach$argument_0","createConfigItem","pattern.split.map$argument_0","findParseConfigForRoute","findInitialRoute","createStateObject","createNestedStateObject","findFocusedRoute","parseQueryParams"],"mappings":"AAA;eC6D;WC8B;ODQ;kCEY;SFQ;UGG;KH6C;8CIG;oBCS,sBD;oBEC,sBF;GJgB;MOM;UCI,wBD,wBC,OD;SPC;6BSK;STM;kBUgB;QVI;CD6D;kBYE;yBCE,mBD;cZE;4BcE;gBCgB,wBD;UCE;cDI;qCEI;oCRC,wBQ;kBDG,wBC;uCDC;WCS;OFO;CdS;gCiBE;0CCoE;ODY;CjBO;yBmBE;eCe;WDY;CnBc;gCqBE;CrBW;yBsBG;CtBsB;0BuBI;CvB4B;gCwBE;CxBuC;yByBE;CzBa;yB0BE;gCRQ;KQI;C1BI"}},"type":"js/module"}]}