{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":201,"column":0}},{"start":{"line":1,"column":0},"end":{"line":201,"column":0}},{"start":{"line":1,"column":0},"end":{"line":201,"column":0}},{"start":{"line":1,"column":0},"end":{"line":201,"column":0}},{"start":{"line":1,"column":0},"end":{"line":201,"column":0}},{"start":{"line":1,"column":0},"end":{"line":201,"column":0}},{"start":{"line":1,"column":0},"end":{"line":201,"column":0}},{"start":{"line":1,"column":0},"end":{"line":201,"column":0}},{"start":{"line":1,"column":0},"end":{"line":201,"column":0}},{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},{"start":{"line":11,"column":0},"end":{"line":11,"column":75}},{"start":{"line":12,"column":0},"end":{"line":12,"column":63}},{"start":{"line":13,"column":0},"end":{"line":13,"column":54}}]}},{"name":"@babel/runtime/regenerator","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":201,"column":0}}]}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":201,"column":0}}]}},{"name":"@babel/runtime/helpers/extends","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":201,"column":0}}]}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":201,"column":0}}]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":201,"column":0}}]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":201,"column":0}}]}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":201,"column":0}}]}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":201,"column":0}}]}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":201,"column":0}}]}},{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":1,"column":45}}]}},{"name":"prop-types","data":{"asyncType":null,"locs":[{"start":{"line":2,"column":0},"end":{"line":2,"column":35}}]}},{"name":"./ensure-native-module-available","data":{"asyncType":null,"locs":[{"start":{"line":11,"column":0},"end":{"line":11,"column":75}}]}},{"name":"./create-icon-source-cache","data":{"asyncType":null,"locs":[{"start":{"line":12,"column":0},"end":{"line":12,"column":63}}]}},{"name":"./icon-button","data":{"asyncType":null,"locs":[{"start":{"line":13,"column":0},"end":{"line":13,"column":54}}]}},{"name":"./react-native","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":2},"end":{"line":16,"column":15},"identifierName":"NativeModules"},{"start":{"line":16,"column":40},"end":{"line":16,"column":53},"identifierName":"NativeModules"},{"start":{"line":32,"column":24},"end":{"line":32,"column":32},"identifierName":"Platform"},{"start":{"line":91,"column":9},"end":{"line":91,"column":13}},{"start":{"line":117,"column":27},"end":{"line":117,"column":39},"identifierName":"processColor"},{"start":{"line":130,"column":45},"end":{"line":130,"column":55},"identifierName":"PixelRatio"},{"start":{"line":147,"column":27},"end":{"line":147,"column":39},"identifierName":"processColor"},{"start":{"line":160,"column":45},"end":{"line":160,"column":55},"identifierName":"PixelRatio"},{"start":{"line":170,"column":8},"end":{"line":170,"column":16},"identifierName":"Platform"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NativeIconAPI = exports.DEFAULT_ICON_SIZE = exports.DEFAULT_ICON_COLOR = void 0;\n  exports.default = createIconSet;\n\n  var _regenerator = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _toConsumableArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _extends2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/extends\"));\n\n  var _objectWithoutProperties2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"react\"));\n\n  var _propTypes = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[11], \"prop-types\"));\n\n  var _ensureNativeModuleAvailable = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[12], \"./ensure-native-module-available\"));\n\n  var _createIconSourceCache = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[13], \"./create-icon-source-cache\"));\n\n  var _iconButton = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[14], \"./icon-button\"));\n\n  var _jsxFileName = \"/home/moglix/uber_eats_hooks/node_modules/react-native-vector-icons/lib/create-icon-set.js\";\n  var _excluded = [\"name\", \"size\", \"color\", \"style\", \"children\"];\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n  var NativeIconAPI = _$$_REQUIRE(_dependencyMap[15], \"./react-native\").NativeModules.RNVectorIconsManager || _$$_REQUIRE(_dependencyMap[15], \"./react-native\").NativeModules.RNVectorIconsModule;\n\n  exports.NativeIconAPI = NativeIconAPI;\n  var DEFAULT_ICON_SIZE = 12;\n  exports.DEFAULT_ICON_SIZE = DEFAULT_ICON_SIZE;\n  var DEFAULT_ICON_COLOR = 'black';\n  exports.DEFAULT_ICON_COLOR = DEFAULT_ICON_COLOR;\n\n  function createIconSet(glyphMap, fontFamily, fontFile, fontStyle) {\n    var fontBasename = fontFile ? fontFile.replace(/\\.(otf|ttf)$/, '') : fontFamily;\n\n    var fontReference = _$$_REQUIRE(_dependencyMap[15], \"./react-native\").Platform.select({\n      windows: \"/Assets/\" + fontFile + \"#\" + fontFamily,\n      android: fontBasename,\n      web: fontBasename,\n      default: fontFamily\n    });\n\n    var IconNamePropType = _propTypes.default.oneOf(Object.keys(glyphMap));\n\n    var Icon = function (_PureComponent) {\n      (0, _inherits2.default)(Icon, _PureComponent);\n\n      var _super = _createSuper(Icon);\n\n      function Icon() {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Icon);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _super.call.apply(_super, [this].concat(args));\n        _this.root = null;\n\n        _this.handleRef = function (ref) {\n          _this.root = ref;\n        };\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Icon, [{\n        key: \"setNativeProps\",\n        value: function setNativeProps(nativeProps) {\n          if (this.root) {\n            this.root.setNativeProps(nativeProps);\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n              name = _this$props.name,\n              size = _this$props.size,\n              color = _this$props.color,\n              style = _this$props.style,\n              children = _this$props.children,\n              props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);\n          var glyph = name ? glyphMap[name] || '?' : '';\n\n          if (typeof glyph === 'number') {\n            glyph = String.fromCodePoint(glyph);\n          }\n\n          var styleDefaults = {\n            fontSize: size,\n            color: color\n          };\n          var styleOverrides = {\n            fontFamily: fontReference,\n            fontWeight: 'normal',\n            fontStyle: 'normal'\n          };\n          props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];\n          props.ref = this.handleRef;\n          return _react.default.createElement(_$$_REQUIRE(_dependencyMap[15], \"./react-native\").Text, (0, _extends2.default)({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }\n          }), glyph, children);\n        }\n      }]);\n      return Icon;\n    }(_react.PureComponent);\n\n    Icon.propTypes = {\n      allowFontScaling: _propTypes.default.bool,\n      name: IconNamePropType,\n      size: _propTypes.default.number,\n      color: _propTypes.default.any,\n      children: _propTypes.default.node,\n      style: _propTypes.default.any\n    };\n    Icon.defaultProps = {\n      size: DEFAULT_ICON_SIZE,\n      allowFontScaling: false\n    };\n    var imageSourceCache = (0, _createIconSourceCache.default)();\n\n    function resolveGlyph(name) {\n      var glyph = glyphMap[name] || '?';\n\n      if (typeof glyph === 'number') {\n        return String.fromCodePoint(glyph);\n      }\n\n      return glyph;\n    }\n\n    function getImageSourceSync(name) {\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ICON_SIZE;\n      var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ICON_COLOR;\n      (0, _ensureNativeModuleAvailable.default)();\n      var glyph = resolveGlyph(name);\n      var processedColor = (0, _$$_REQUIRE(_dependencyMap[15], \"./react-native\").processColor)(color);\n      var cacheKey = glyph + \":\" + size + \":\" + processedColor;\n\n      if (imageSourceCache.has(cacheKey)) {\n        return imageSourceCache.get(cacheKey);\n      }\n\n      try {\n        var imagePath = NativeIconAPI.getImageForFontSync(fontReference, glyph, size, processedColor);\n        var value = {\n          uri: imagePath,\n          scale: _$$_REQUIRE(_dependencyMap[15], \"./react-native\").PixelRatio.get()\n        };\n        imageSourceCache.setValue(cacheKey, value);\n        return value;\n      } catch (error) {\n        imageSourceCache.setError(cacheKey, error);\n        throw error;\n      }\n    }\n\n    function getImageSource(name) {\n      var size,\n          color,\n          glyph,\n          processedColor,\n          cacheKey,\n          imagePath,\n          value,\n          _args = arguments;\n      return _regenerator.default.async(function getImageSource$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              size = _args.length > 1 && _args[1] !== undefined ? _args[1] : DEFAULT_ICON_SIZE;\n              color = _args.length > 2 && _args[2] !== undefined ? _args[2] : DEFAULT_ICON_COLOR;\n              (0, _ensureNativeModuleAvailable.default)();\n              glyph = resolveGlyph(name);\n              processedColor = (0, _$$_REQUIRE(_dependencyMap[15], \"./react-native\").processColor)(color);\n              cacheKey = glyph + \":\" + size + \":\" + processedColor;\n\n              if (!imageSourceCache.has(cacheKey)) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", imageSourceCache.get(cacheKey));\n\n            case 8:\n              _context.prev = 8;\n              _context.next = 11;\n              return _regenerator.default.awrap(NativeIconAPI.getImageForFont(fontReference, glyph, size, processedColor));\n\n            case 11:\n              imagePath = _context.sent;\n              value = {\n                uri: imagePath,\n                scale: _$$_REQUIRE(_dependencyMap[15], \"./react-native\").PixelRatio.get()\n              };\n              imageSourceCache.setValue(cacheKey, value);\n              return _context.abrupt(\"return\", value);\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](8);\n              imageSourceCache.setError(cacheKey, _context.t0);\n              throw _context.t0;\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[8, 17]], Promise);\n    }\n\n    function loadFont() {\n      var file,\n          _args2 = arguments;\n      return _regenerator.default.async(function loadFont$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              file = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : fontFile;\n\n              if (!(_$$_REQUIRE(_dependencyMap[15], \"./react-native\").Platform.OS === 'ios')) {\n                _context2.next = 7;\n                break;\n              }\n\n              (0, _ensureNativeModuleAvailable.default)();\n\n              if (file) {\n                _context2.next = 5;\n                break;\n              }\n\n              throw new Error('Unable to load font, because no file was specified. ');\n\n            case 5:\n              _context2.next = 7;\n              return _regenerator.default.awrap(NativeIconAPI.loadFontWithFileName.apply(NativeIconAPI, (0, _toConsumableArray2.default)(file.split('.'))));\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    function hasIcon(name) {\n      return Object.prototype.hasOwnProperty.call(glyphMap, name);\n    }\n\n    function getRawGlyphMap() {\n      return glyphMap;\n    }\n\n    function getFontFamily() {\n      return fontReference;\n    }\n\n    Icon.Button = (0, _iconButton.default)(Icon);\n    Icon.getImageSource = getImageSource;\n    Icon.getImageSourceSync = getImageSourceSync;\n    Icon.loadFont = loadFont;\n    Icon.hasIcon = hasIcon;\n    Icon.getRawGlyphMap = getRawGlyphMap;\n    Icon.getFontFamily = getFontFamily;\n    return Icon;\n  }\n});","lineCount":299,"map":[[26,0,1,0],[28,0,2,0],[30,0,11,0],[32,0,12,0],[34,0,13,0],[47,0,15,7],[47,6,15,13,"NativeIconAPI"],[47,19,15,26],[47,22,16,2,"NativeModules"],[47,86,16,16,"RNVectorIconsManager"],[47,106,16,2],[47,110,16,40,"NativeModules"],[47,174,16,54,"RNVectorIconsModule"],[47,193,15,7],[50,0,18,7],[50,6,18,13,"DEFAULT_ICON_SIZE"],[50,23,18,30],[50,26,18,33],[50,28,18,7],[52,0,19,7],[52,6,19,13,"DEFAULT_ICON_COLOR"],[52,24,19,31],[52,27,19,34],[52,34,19,7],[55,0,21,15],[55,11,21,24,"createIconSet"],[55,24,21,15],[55,25,22,2,"glyphMap"],[55,33,21,15],[55,35,23,2,"fontFamily"],[55,45,21,15],[55,47,24,2,"fontFile"],[55,55,21,15],[55,57,25,2,"fontStyle"],[55,66,21,15],[55,68,26,2],[56,0,28,2],[56,8,28,8,"fontBasename"],[56,20,28,20],[56,23,28,23,"fontFile"],[56,31,28,31],[56,34,29,6,"fontFile"],[56,42,29,14],[56,43,29,15,"replace"],[56,50,29,6],[56,51,29,23],[56,65,29,6],[56,67,29,39],[56,69,29,6],[56,70,28,31],[56,73,30,6,"fontFamily"],[56,83,28,2],[58,0,32,2],[58,8,32,8,"fontReference"],[58,21,32,21],[58,24,32,24,"Platform"],[58,83,32,33,"select"],[58,89,32,24],[58,90,32,40],[59,0,33,4,"windows"],[59,6,33,4,"windows"],[59,13,33,11],[59,28,33,24,"fontFile"],[59,36,33,11],[59,45,33,36,"fontFamily"],[59,55,32,40],[60,0,34,4,"android"],[60,6,34,4,"android"],[60,13,34,11],[60,15,34,13,"fontBasename"],[60,27,32,40],[61,0,35,4,"web"],[61,6,35,4,"web"],[61,9,35,7],[61,11,35,9,"fontBasename"],[61,23,32,40],[62,0,36,4,"default"],[62,6,36,4,"default"],[62,13,36,11],[62,15,36,13,"fontFamily"],[63,0,32,40],[63,5,32,24],[63,6,32,2],[65,0,39,2],[65,8,39,8,"IconNamePropType"],[65,24,39,24],[65,27,39,27,"PropTypes"],[65,46,39,37,"oneOf"],[65,51,39,27],[65,52,39,43,"Object"],[65,58,39,49],[65,59,39,50,"keys"],[65,63,39,43],[65,64,39,55,"glyphMap"],[65,72,39,43],[65,73,39,27],[65,74,39,2],[67,0,26,2],[67,8,41,8,"Icon"],[67,12,26,2],[68,0,26,2],[70,0,26,2],[72,0,26,2],[73,0,26,2],[75,0,26,2],[77,0,26,2],[78,0,26,2],[79,0,26,2],[81,0,26,2],[82,0,26,2],[82,14,42,4,"root"],[82,18,26,2],[82,21,42,11],[82,25,26,2],[84,0,26,2],[84,14,64,4,"handleRef"],[84,23,26,2],[84,26,64,16],[84,36,64,16,"ref"],[84,39,64,19],[84,41,64,23],[85,0,65,6],[85,16,65,11,"root"],[85,20,65,6],[85,23,65,18,"ref"],[85,26,65,6],[86,0,66,5],[86,9,26,2],[88,0,26,2],[89,0,26,2],[91,0,26,2],[92,0,26,2],[93,0,26,2],[93,15,58,4],[93,39,58,19,"nativeProps"],[93,50,58,4],[93,52,58,32],[94,0,59,6],[94,14,59,10],[94,19,59,15,"root"],[94,23,59,6],[94,25,59,21],[95,0,60,8],[95,17,60,13,"root"],[95,21,60,8],[95,22,60,18,"setNativeProps"],[95,36,60,8],[95,37,60,33,"nativeProps"],[95,48,60,8],[96,0,61,7],[97,0,62,5],[98,0,26,2],[99,0,26,2],[100,0,26,2],[100,15,68,4],[100,33,68,13],[101,0,69,6],[101,28,69,63],[101,33,69,68,"props"],[101,38,69,6],[102,0,69,6],[102,14,69,14,"name"],[102,18,69,6],[102,33,69,14,"name"],[102,37,69,6],[103,0,69,6],[103,14,69,20,"size"],[103,18,69,6],[103,33,69,20,"size"],[103,37,69,6],[104,0,69,6],[104,14,69,26,"color"],[104,19,69,6],[104,34,69,26,"color"],[104,39,69,6],[105,0,69,6],[105,14,69,33,"style"],[105,19,69,6],[105,34,69,33,"style"],[105,39,69,6],[106,0,69,6],[106,14,69,40,"children"],[106,22,69,6],[106,37,69,40,"children"],[106,45,69,6],[107,0,69,6],[107,14,69,53,"props"],[107,19,69,6],[108,0,71,6],[108,14,71,10,"glyph"],[108,19,71,15],[108,22,71,18,"name"],[108,26,71,22],[108,29,71,25,"glyphMap"],[108,37,71,33],[108,38,71,34,"name"],[108,42,71,33],[108,43,71,25],[108,47,71,43],[108,50,71,22],[108,53,71,49],[108,55,71,6],[110,0,72,6],[110,14,72,10],[110,21,72,17,"glyph"],[110,26,72,10],[110,31,72,27],[110,39,72,6],[110,41,72,37],[111,0,73,8,"glyph"],[111,12,73,8,"glyph"],[111,17,73,13],[111,20,73,16,"String"],[111,26,73,22],[111,27,73,23,"fromCodePoint"],[111,40,73,16],[111,41,73,37,"glyph"],[111,46,73,16],[111,47,73,8],[112,0,74,7],[114,0,76,6],[114,14,76,12,"styleDefaults"],[114,27,76,25],[114,30,76,28],[115,0,77,8,"fontSize"],[115,12,77,8,"fontSize"],[115,20,77,16],[115,22,77,18,"size"],[115,26,76,28],[116,0,78,8,"color"],[116,12,78,8,"color"],[116,17,78,13],[116,19,78,8,"color"],[117,0,76,28],[117,11,76,6],[118,0,81,6],[118,14,81,12,"styleOverrides"],[118,28,81,26],[118,31,81,29],[119,0,82,8,"fontFamily"],[119,12,82,8,"fontFamily"],[119,22,82,18],[119,24,82,20,"fontReference"],[119,37,81,29],[120,0,83,8,"fontWeight"],[120,12,83,8,"fontWeight"],[120,22,83,18],[120,24,83,20],[120,32,81,29],[121,0,84,8,"fontStyle"],[121,12,84,8,"fontStyle"],[121,21,84,17],[121,23,84,19],[122,0,81,29],[122,11,81,6],[123,0,87,6,"props"],[123,10,87,6,"props"],[123,15,87,11],[123,16,87,12,"style"],[123,21,87,6],[123,24,87,20],[123,25,87,21,"styleDefaults"],[123,38,87,20],[123,40,87,36,"style"],[123,45,87,20],[123,47,87,43,"styleOverrides"],[123,61,87,20],[123,63,87,59,"fontStyle"],[123,72,87,68],[123,76,87,72],[123,78,87,20],[123,79,87,6],[124,0,88,6,"props"],[124,10,88,6,"props"],[124,15,88,11],[124,16,88,12,"ref"],[124,19,88,6],[124,22,88,18],[124,27,88,23,"handleRef"],[124,36,88,6],[125,0,90,6],[125,17,91,8],[125,46,91,9],[125,100,91,8],[125,129,91,18,"props"],[125,134,91,8],[126,0,91,8],[127,0,91,8],[128,0,91,8],[129,0,91,8],[130,0,91,8],[131,0,91,8],[132,0,91,8],[132,14,92,11,"glyph"],[132,19,91,8],[132,21,93,11,"children"],[132,29,91,8],[132,30,90,6],[133,0,96,5],[134,0,26,2],[135,0,26,2],[136,0,26,2],[136,6,41,21,"PureComponent"],[136,26,26,2],[138,0,41,8,"Icon"],[138,4,41,8,"Icon"],[138,8,26,2],[138,9,44,11,"propTypes"],[138,18,26,2],[138,21,44,23],[139,0,45,6,"allowFontScaling"],[139,6,45,6,"allowFontScaling"],[139,22,45,22],[139,24,45,24,"PropTypes"],[139,43,45,34,"bool"],[139,47,44,23],[140,0,46,6,"name"],[140,6,46,6,"name"],[140,10,46,10],[140,12,46,12,"IconNamePropType"],[140,28,44,23],[141,0,47,6,"size"],[141,6,47,6,"size"],[141,10,47,10],[141,12,47,12,"PropTypes"],[141,31,47,22,"number"],[141,37,44,23],[142,0,48,6,"color"],[142,6,48,6,"color"],[142,11,48,11],[142,13,48,13,"PropTypes"],[142,32,48,23,"any"],[142,35,44,23],[143,0,49,6,"children"],[143,6,49,6,"children"],[143,14,49,14],[143,16,49,16,"PropTypes"],[143,35,49,26,"node"],[143,39,44,23],[144,0,50,6,"style"],[144,6,50,6,"style"],[144,11,50,11],[144,13,50,13,"PropTypes"],[144,32,50,23,"any"],[145,0,44,23],[145,5,26,2],[146,0,41,8,"Icon"],[146,4,41,8,"Icon"],[146,8,26,2],[146,9,53,11,"defaultProps"],[146,21,26,2],[146,24,53,26],[147,0,54,6,"size"],[147,6,54,6,"size"],[147,10,54,10],[147,12,54,12,"DEFAULT_ICON_SIZE"],[147,29,53,26],[148,0,55,6,"allowFontScaling"],[148,6,55,6,"allowFontScaling"],[148,22,55,22],[148,24,55,24],[149,0,53,26],[149,5,26,2],[150,0,99,2],[150,8,99,8,"imageSourceCache"],[150,24,99,24],[150,27,99,27],[150,64,99,2],[152,0,101,2],[152,13,101,11,"resolveGlyph"],[152,25,101,2],[152,26,101,24,"name"],[152,30,101,2],[152,32,101,30],[153,0,102,4],[153,10,102,10,"glyph"],[153,15,102,15],[153,18,102,18,"glyphMap"],[153,26,102,26],[153,27,102,27,"name"],[153,31,102,26],[153,32,102,18],[153,36,102,36],[153,39,102,4],[155,0,103,4],[155,10,103,8],[155,17,103,15,"glyph"],[155,22,103,8],[155,27,103,25],[155,35,103,4],[155,37,103,35],[156,0,104,6],[156,15,104,13,"String"],[156,21,104,19],[156,22,104,20,"fromCodePoint"],[156,35,104,13],[156,36,104,34,"glyph"],[156,41,104,13],[156,42,104,6],[157,0,105,5],[159,0,106,4],[159,13,106,11,"glyph"],[159,18,106,4],[160,0,107,3],[162,0,109,2],[162,13,109,11,"getImageSourceSync"],[162,31,109,2],[162,32,110,4,"name"],[162,36,109,2],[162,38,113,4],[163,0,113,4],[163,10,111,4,"size"],[163,14,113,4],[163,85,111,11,"DEFAULT_ICON_SIZE"],[163,102,113,4],[164,0,113,4],[164,10,112,4,"color"],[164,15,113,4],[164,86,112,12,"DEFAULT_ICON_COLOR"],[164,104,113,4],[165,0,114,4],[166,0,116,4],[166,10,116,10,"glyph"],[166,15,116,15],[166,18,116,18,"resolveGlyph"],[166,30,116,30],[166,31,116,31,"name"],[166,35,116,30],[166,36,116,4],[167,0,117,4],[167,10,117,10,"processedColor"],[167,24,117,24],[167,27,117,27],[167,95,117,40,"color"],[167,100,117,27],[167,101,117,4],[168,0,118,4],[168,10,118,10,"cacheKey"],[168,18,118,18],[168,21,118,24,"glyph"],[168,26,118,18],[168,35,118,33,"size"],[168,39,118,18],[168,48,118,41,"processedColor"],[168,62,118,4],[170,0,120,4],[170,10,120,8,"imageSourceCache"],[170,26,120,24],[170,27,120,25,"has"],[170,30,120,8],[170,31,120,29,"cacheKey"],[170,39,120,8],[170,40,120,4],[170,42,120,40],[171,0,121,6],[171,15,121,13,"imageSourceCache"],[171,31,121,29],[171,32,121,30,"get"],[171,35,121,13],[171,36,121,34,"cacheKey"],[171,44,121,13],[171,45,121,6],[172,0,122,5],[174,0,123,4],[174,10,123,8],[175,0,124,6],[175,12,124,12,"imagePath"],[175,21,124,21],[175,24,124,24,"NativeIconAPI"],[175,37,124,37],[175,38,124,38,"getImageForFontSync"],[175,57,124,24],[175,58,125,8,"fontReference"],[175,71,124,24],[175,73,126,8,"glyph"],[175,78,124,24],[175,80,127,8,"size"],[175,84,124,24],[175,86,128,8,"processedColor"],[175,100,124,24],[175,101,124,6],[176,0,130,6],[176,12,130,12,"value"],[176,17,130,17],[176,20,130,20],[177,0,130,22,"uri"],[177,10,130,22,"uri"],[177,13,130,25],[177,15,130,27,"imagePath"],[177,24,130,20],[178,0,130,38,"scale"],[178,10,130,38,"scale"],[178,15,130,43],[178,17,130,45,"PixelRatio"],[178,78,130,56,"get"],[178,81,130,45],[179,0,130,20],[179,9,130,6],[180,0,131,6,"imageSourceCache"],[180,8,131,6,"imageSourceCache"],[180,24,131,22],[180,25,131,23,"setValue"],[180,33,131,6],[180,34,131,32,"cacheKey"],[180,42,131,6],[180,44,131,42,"value"],[180,49,131,6],[181,0,132,6],[181,15,132,13,"value"],[181,20,132,6],[182,0,133,5],[182,7,123,4],[182,8,133,6],[182,15,133,13,"error"],[182,20,133,6],[182,22,133,20],[183,0,134,6,"imageSourceCache"],[183,8,134,6,"imageSourceCache"],[183,24,134,22],[183,25,134,23,"setError"],[183,33,134,6],[183,34,134,32,"cacheKey"],[183,42,134,6],[183,44,134,42,"error"],[183,49,134,6],[184,0,135,6],[184,14,135,12,"error"],[184,19,135,6],[185,0,136,5],[186,0,137,3],[188,0,139,2],[188,13,139,17,"getImageSource"],[188,27,139,2],[188,28,140,4,"name"],[188,32,139,2],[189,0,139,2],[190,0,139,2],[191,0,139,2],[192,0,139,2],[193,0,139,2],[194,0,139,2],[195,0,139,2],[196,0,139,2],[197,0,139,2],[198,0,139,2],[199,0,139,2],[200,0,139,2],[201,0,141,4,"size"],[201,14,141,4,"size"],[201,18,139,2],[201,77,141,11,"DEFAULT_ICON_SIZE"],[201,94,139,2],[202,0,142,4,"color"],[202,14,142,4,"color"],[202,19,139,2],[202,78,142,12,"DEFAULT_ICON_COLOR"],[202,96,139,2],[203,0,144,4],[204,0,146,10,"glyph"],[204,14,146,10,"glyph"],[204,19,139,2],[204,22,146,18,"resolveGlyph"],[204,34,146,30],[204,35,146,31,"name"],[204,39,146,30],[204,40,139,2],[205,0,147,10,"processedColor"],[205,14,147,10,"processedColor"],[205,28,139,2],[205,31,147,27],[205,99,147,40,"color"],[205,104,147,27],[205,105,139,2],[206,0,148,10,"cacheKey"],[206,14,148,10,"cacheKey"],[206,22,139,2],[206,25,148,24,"glyph"],[206,30,139,2],[206,39,148,33,"size"],[206,43,139,2],[206,52,148,41,"processedColor"],[206,66,139,2],[208,0,139,2],[208,19,150,8,"imageSourceCache"],[208,35,150,24],[208,36,150,25,"has"],[208,39,150,8],[208,40,150,29,"cacheKey"],[208,48,150,8],[208,49,139,2],[209,0,139,2],[210,0,139,2],[211,0,139,2],[213,0,139,2],[213,47,151,13,"imageSourceCache"],[213,63,151,29],[213,64,151,30,"get"],[213,67,151,13],[213,68,151,34,"cacheKey"],[213,76,151,13],[213,77,139,2],[215,0,139,2],[216,0,139,2],[217,0,139,2],[218,0,139,2],[218,48,154,30,"NativeIconAPI"],[218,61,154,43],[218,62,154,44,"getImageForFont"],[218,77,154,30],[218,78,155,8,"fontReference"],[218,91,154,30],[218,93,156,8,"glyph"],[218,98,154,30],[218,100,157,8,"size"],[218,104,154,30],[218,106,158,8,"processedColor"],[218,120,154,30],[218,121,139,2],[220,0,139,2],[221,0,154,12,"imagePath"],[221,14,154,12,"imagePath"],[221,23,139,2],[222,0,160,12,"value"],[222,14,160,12,"value"],[222,19,139,2],[222,22,160,20],[223,0,160,22,"uri"],[223,16,160,22,"uri"],[223,19,160,25],[223,21,160,27,"imagePath"],[223,30,160,20],[224,0,160,38,"scale"],[224,16,160,38,"scale"],[224,21,160,43],[224,23,160,45,"PixelRatio"],[224,84,160,56,"get"],[224,87,160,45],[225,0,160,20],[225,15,139,2],[226,0,161,6,"imageSourceCache"],[226,14,161,6,"imageSourceCache"],[226,30,161,22],[226,31,161,23,"setValue"],[226,39,161,6],[226,40,161,32,"cacheKey"],[226,48,161,6],[226,50,161,42,"value"],[226,55,161,6],[227,0,139,2],[227,47,162,13,"value"],[227,52,139,2],[229,0,139,2],[230,0,139,2],[231,0,139,2],[232,0,164,6,"imageSourceCache"],[232,14,164,6,"imageSourceCache"],[232,30,164,22],[232,31,164,23,"setError"],[232,39,164,6],[232,40,164,32,"cacheKey"],[232,48,164,6],[233,0,139,2],[235,0,139,2],[236,0,139,2],[237,0,139,2],[238,0,139,2],[239,0,139,2],[240,0,139,2],[241,0,139,2],[243,0,169,2],[243,13,169,17,"loadFont"],[243,21,169,2],[244,0,169,2],[245,0,169,2],[246,0,169,2],[247,0,169,2],[248,0,169,2],[249,0,169,2],[250,0,169,26,"file"],[250,14,169,26,"file"],[250,18,169,2],[250,80,169,33,"fontFile"],[250,88,169,2],[252,0,169,2],[252,20,170,8,"Platform"],[252,79,170,17,"OS"],[252,81,170,8],[252,86,170,24],[252,91,169,2],[253,0,169,2],[254,0,169,2],[255,0,169,2],[257,0,171,6],[259,0,169,2],[259,18,172,11,"file"],[259,22,169,2],[260,0,169,2],[261,0,169,2],[262,0,169,2],[264,0,169,2],[264,20,173,14],[264,24,173,18,"Error"],[264,29,173,14],[264,30,173,24],[264,84,173,14],[264,85,169,2],[266,0,169,2],[267,0,169,2],[268,0,169,2],[268,48,175,12,"NativeIconAPI"],[268,61,175,25],[268,62,175,26,"loadFontWithFileName"],[268,82,175,12],[268,89,175,12,"NativeIconAPI"],[268,102,175,25],[268,137,175,50,"file"],[268,141,175,54],[268,142,175,55,"split"],[268,147,175,50],[268,148,175,61],[268,151,175,50],[268,152,175,25],[268,154,169,2],[270,0,169,2],[271,0,169,2],[272,0,169,2],[273,0,169,2],[274,0,169,2],[275,0,169,2],[276,0,169,2],[278,0,179,2],[278,13,179,11,"hasIcon"],[278,20,179,2],[278,21,179,19,"name"],[278,25,179,2],[278,27,179,25],[279,0,180,4],[279,13,180,11,"Object"],[279,19,180,17],[279,20,180,18,"prototype"],[279,29,180,11],[279,30,180,28,"hasOwnProperty"],[279,44,180,11],[279,45,180,43,"call"],[279,49,180,11],[279,50,180,48,"glyphMap"],[279,58,180,11],[279,60,180,58,"name"],[279,64,180,11],[279,65,180,4],[280,0,181,3],[282,0,183,2],[282,13,183,11,"getRawGlyphMap"],[282,27,183,2],[282,30,183,28],[283,0,184,4],[283,13,184,11,"glyphMap"],[283,21,184,4],[284,0,185,3],[286,0,187,2],[286,13,187,11,"getFontFamily"],[286,26,187,2],[286,29,187,27],[287,0,188,4],[287,13,188,11,"fontReference"],[287,26,188,4],[288,0,189,3],[290,0,191,2,"Icon"],[290,4,191,2,"Icon"],[290,8,191,6],[290,9,191,7,"Button"],[290,15,191,2],[290,18,191,16],[290,43,191,42,"Icon"],[290,47,191,16],[290,48,191,2],[291,0,192,2,"Icon"],[291,4,192,2,"Icon"],[291,8,192,6],[291,9,192,7,"getImageSource"],[291,23,192,2],[291,26,192,24,"getImageSource"],[291,40,192,2],[292,0,193,2,"Icon"],[292,4,193,2,"Icon"],[292,8,193,6],[292,9,193,7,"getImageSourceSync"],[292,27,193,2],[292,30,193,28,"getImageSourceSync"],[292,48,193,2],[293,0,194,2,"Icon"],[293,4,194,2,"Icon"],[293,8,194,6],[293,9,194,7,"loadFont"],[293,17,194,2],[293,20,194,18,"loadFont"],[293,28,194,2],[294,0,195,2,"Icon"],[294,4,195,2,"Icon"],[294,8,195,6],[294,9,195,7,"hasIcon"],[294,16,195,2],[294,19,195,17,"hasIcon"],[294,26,195,2],[295,0,196,2,"Icon"],[295,4,196,2,"Icon"],[295,8,196,6],[295,9,196,7,"getRawGlyphMap"],[295,23,196,2],[295,26,196,24,"getRawGlyphMap"],[295,40,196,2],[296,0,197,2,"Icon"],[296,4,197,2,"Icon"],[296,8,197,6],[296,9,197,7,"getFontFamily"],[296,22,197,2],[296,25,197,23,"getFontFamily"],[296,38,197,2],[297,0,199,2],[297,11,199,9,"Icon"],[297,15,199,2],[298,0,200,1]],"functionMap":{"names":["<global>","createIconSet","Icon","Icon#setNativeProps","Icon#handleRef","Icon#render","resolveGlyph","getImageSourceSync","getImageSource","loadFont","hasIcon","getRawGlyphMap","getFontFamily"],"mappings":"AAA;eCoB;ECoB;ICiB;KDI;gBEE;KFE;IGE;KH4B;GDC;EKI;GLM;EME;GN4B;EOE;GP4B;EQE;GRQ;ESE;GTE;EUE;GVE;EWE;GXE;CDW"}},"type":"js/module"}]}