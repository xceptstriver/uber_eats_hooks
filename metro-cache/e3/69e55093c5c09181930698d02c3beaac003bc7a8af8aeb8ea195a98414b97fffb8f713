{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":174,"column":0}},{"start":{"line":1,"column":0},"end":{"line":174,"column":0}},{"start":{"line":16,"column":0},"end":{"line":16,"column":57}},{"start":{"line":17,"column":0},"end":{"line":17,"column":65}}]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":174,"column":0}}]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":174,"column":0}}]}},{"name":"./_EmitterSubscription","data":{"asyncType":null,"locs":[{"start":{"line":16,"column":0},"end":{"line":16,"column":57}}]}},{"name":"./_EventSubscriptionVendor","data":{"asyncType":null,"locs":[{"start":{"line":17,"column":0},"end":{"line":17,"column":65}}]}},{"name":"invariant","data":{"asyncType":null,"locs":[{"start":{"line":88,"column":4},"end":{"line":91,"column":5}}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _EmitterSubscription = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[3], \"./_EmitterSubscription\"));\n\n  var _EventSubscriptionVendor = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[4], \"./_EventSubscriptionVendor\"));\n\n  var sparseFilterPredicate = function sparseFilterPredicate() {\n    return true;\n  };\n\n  var EventEmitter = function () {\n    function EventEmitter(subscriber) {\n      (0, _classCallCheck2.default)(this, EventEmitter);\n      this._subscriber = subscriber || new _EventSubscriptionVendor.default();\n    }\n\n    (0, _createClass2.default)(EventEmitter, [{\n      key: \"addListener\",\n      value: function addListener(eventType, listener, context) {\n        return this._subscriber.addSubscription(eventType, new _EmitterSubscription.default(this, this._subscriber, listener, context));\n      }\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners(eventType) {\n        this._subscriber.removeAllSubscriptions(eventType);\n      }\n    }, {\n      key: \"removeSubscription\",\n      value: function removeSubscription(subscription) {\n        _$$_REQUIRE(_dependencyMap[5], \"invariant\")(subscription.emitter === this, 'Subscription does not belong to this emitter.');\n\n        this._subscriber.removeSubscription(subscription);\n      }\n    }, {\n      key: \"listenerCount\",\n      value: function listenerCount(eventType) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        return subscriptions ? subscriptions.filter(sparseFilterPredicate).length : 0;\n      }\n    }, {\n      key: \"emit\",\n      value: function emit(eventType) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        if (subscriptions) {\n          for (var i = 0, l = subscriptions.length; i < l; i++) {\n            var subscription = subscriptions[i];\n\n            if (subscription && subscription.listener) {\n              subscription.listener.apply(subscription.context, Array.prototype.slice.call(arguments, 1));\n            }\n          }\n        }\n      }\n    }, {\n      key: \"removeListener\",\n      value: function removeListener(eventType, listener) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        if (subscriptions) {\n          for (var i = 0, l = subscriptions.length; i < l; i++) {\n            var subscription = subscriptions[i];\n\n            if (subscription && subscription.listener === listener) {\n              subscription.remove();\n            }\n          }\n        }\n      }\n    }]);\n    return EventEmitter;\n  }();\n\n  module.exports = EventEmitter;\n});","lineCount":81,"map":[[2,0,12,0],[8,0,16,0],[10,0,17,0],[12,0,19,0],[12,6,19,6,"sparseFilterPredicate"],[12,27,19,27],[12,30,19,30],[12,39,19,6,"sparseFilterPredicate"],[12,60,19,30],[13,0,19,30],[13,11,19,36],[13,15,19,30],[14,0,19,30],[14,3,19,0],[16,6,34,6,"EventEmitter"],[16,18],[17,0,43,2],[17,26,43,14,"subscriber"],[17,36,43,2],[17,38,43,52],[18,0,43,52],[19,0,44,4],[19,11,44,9,"_subscriber"],[19,22,44,4],[19,25,44,23,"subscriber"],[19,35,44,33],[19,39,44,37],[19,43,44,41,"EventSubscriptionVendor"],[19,75,44,37],[19,77,44,4],[20,0,45,3],[24,13,61,2],[24,34,62,4,"eventType"],[24,43,61,2],[24,45,63,4,"listener"],[24,53,61,2],[24,55,64,4,"context"],[24,62,61,2],[24,64,65,25],[25,0,66,4],[25,15,66,12],[25,20,66,17,"_subscriber"],[25,31,66,12],[25,32,66,29,"addSubscription"],[25,47,66,12],[25,48,67,6,"eventType"],[25,57,66,12],[25,59,68,6],[25,63,68,10,"EmitterSubscription"],[25,91,68,6],[25,92,68,30],[25,96,68,6],[25,98,68,36],[25,103,68,41,"_subscriber"],[25,114,68,6],[25,116,68,54,"listener"],[25,124,68,6],[25,126,68,64,"context"],[25,133,68,6],[25,134,66,12],[25,135,66,4],[26,0,70,3],[29,13,79,2],[29,41,79,21,"eventType"],[29,50,79,2],[29,52,79,41],[30,0,80,4],[30,13,80,9,"_subscriber"],[30,24,80,4],[30,25,80,21,"removeAllSubscriptions"],[30,47,80,4],[30,48,80,44,"eventType"],[30,57,80,4],[31,0,81,3],[34,13,87,2],[34,41,87,21,"subscription"],[34,53,87,2],[34,55,87,56],[35,0,88,4],[35,52,89,6,"subscription"],[35,64,89,18],[35,65,89,19,"emitter"],[35,72,89,6],[35,77,89,31],[35,81,88,4],[35,83,90,6],[35,130,88,4],[37,0,92,4],[37,13,92,9,"_subscriber"],[37,24,92,4],[37,25,92,21,"removeSubscription"],[37,43,92,4],[37,44,92,40,"subscription"],[37,56,92,4],[38,0,93,3],[41,13,102,2],[41,36,102,16,"eventType"],[41,45,102,2],[41,47,102,43],[42,0,103,4],[42,12,103,10,"subscriptions"],[42,25,103,23],[42,28,103,26],[42,33,103,31,"_subscriber"],[42,44,103,26],[42,45,103,43,"getSubscriptionsForType"],[42,68,103,26],[42,69,103,67,"eventType"],[42,78,103,26],[42,79,103,4],[44,0,104,4],[44,15,104,11,"subscriptions"],[44,28,104,24],[44,31,109,8,"subscriptions"],[44,44,109,21],[44,45,109,22,"filter"],[44,51,109,8],[44,52,109,29,"sparseFilterPredicate"],[44,73,109,8],[44,75,109,52,"length"],[44,81,104,24],[44,84,110,8],[44,85,104,4],[45,0,111,3],[48,13,127,2],[48,27,127,7,"eventType"],[48,36,127,2],[48,38,127,26],[49,0,128,4],[49,12,128,10,"subscriptions"],[49,25,128,23],[49,28,128,26],[49,33,128,31,"_subscriber"],[49,44,128,26],[49,45,128,43,"getSubscriptionsForType"],[49,68,128,26],[49,69,128,67,"eventType"],[49,78,128,26],[49,79,128,4],[51,0,129,4],[51,12,129,8,"subscriptions"],[51,25,129,4],[51,27,129,23],[52,0,130,6],[52,15,130,11],[52,19,130,15,"i"],[52,20,130,16],[52,23,130,19],[52,24,130,11],[52,26,130,22,"l"],[52,27,130,23],[52,30,130,26,"subscriptions"],[52,43,130,39],[52,44,130,40,"length"],[52,50,130,6],[52,52,130,48,"i"],[52,53,130,49],[52,56,130,52,"l"],[52,57,130,6],[52,59,130,55,"i"],[52,60,130,56],[52,62,130,6],[52,64,130,60],[53,0,131,8],[53,16,131,14,"subscription"],[53,28,131,26],[53,31,131,29,"subscriptions"],[53,44,131,42],[53,45,131,43,"i"],[53,46,131,42],[53,47,131,8],[55,0,134,8],[55,16,134,12,"subscription"],[55,28,134,24],[55,32,134,28,"subscription"],[55,44,134,40],[55,45,134,41,"listener"],[55,53,134,8],[55,55,134,51],[56,0,135,10,"subscription"],[56,14,135,10,"subscription"],[56,26,135,22],[56,27,135,23,"listener"],[56,35,135,10],[56,36,135,32,"apply"],[56,41,135,10],[56,42,136,12,"subscription"],[56,54,136,24],[56,55,136,25,"context"],[56,62,135,10],[56,64,137,12,"Array"],[56,69,137,17],[56,70,137,18,"prototype"],[56,79,137,12],[56,80,137,28,"slice"],[56,85,137,12],[56,86,137,34,"call"],[56,90,137,12],[56,91,137,39,"arguments"],[56,100,137,12],[56,102,137,50],[56,103,137,12],[56,104,135,10],[57,0,139,9],[58,0,140,7],[59,0,141,5],[60,0,142,3],[63,13,157,2],[63,37,157,17,"eventType"],[63,46,157,2],[63,48,157,36,"listener"],[63,56,157,2],[63,58,157,46],[64,0,158,4],[64,12,158,10,"subscriptions"],[64,25,158,23],[64,28,158,26],[64,33,158,31,"_subscriber"],[64,44,158,26],[64,45,158,43,"getSubscriptionsForType"],[64,68,158,26],[64,69,158,67,"eventType"],[64,78,158,26],[64,79,158,4],[66,0,159,4],[66,12,159,8,"subscriptions"],[66,25,159,4],[66,27,159,23],[67,0,160,6],[67,15,160,11],[67,19,160,15,"i"],[67,20,160,16],[67,23,160,19],[67,24,160,11],[67,26,160,22,"l"],[67,27,160,23],[67,30,160,26,"subscriptions"],[67,43,160,39],[67,44,160,40,"length"],[67,50,160,6],[67,52,160,48,"i"],[67,53,160,49],[67,56,160,52,"l"],[67,57,160,6],[67,59,160,55,"i"],[67,60,160,56],[67,62,160,6],[67,64,160,60],[68,0,161,8],[68,16,161,14,"subscription"],[68,28,161,26],[68,31,161,29,"subscriptions"],[68,44,161,42],[68,45,161,43,"i"],[68,46,161,42],[68,47,161,8],[70,0,165,8],[70,16,165,12,"subscription"],[70,28,165,24],[70,32,165,28,"subscription"],[70,44,165,40],[70,45,165,41,"listener"],[70,53,165,28],[70,58,165,54,"listener"],[70,66,165,8],[70,68,165,64],[71,0,166,10,"subscription"],[71,14,166,10,"subscription"],[71,26,166,22],[71,27,166,23,"remove"],[71,33,166,10],[72,0,167,9],[73,0,168,7],[74,0,169,5],[75,0,170,3],[80,0,173,0,"module"],[80,2,173,0,"module"],[80,8,173,6],[80,9,173,7,"exports"],[80,16,173,0],[80,19,173,17,"EventEmitter"],[80,31,173,0]],"functionMap":{"names":["<global>","sparseFilterPredicate","EventEmitter","EventEmitter#constructor","EventEmitter#addListener","EventEmitter#removeAllListeners","EventEmitter#removeSubscription","EventEmitter#listenerCount","EventEmitter#emit","EventEmitter#removeListener"],"mappings":"AAA;8BCkB,UD;AEe;ECS;GDE;EEgB;GFS;EGS;GHE;EIM;GJM;EKS;GLS;EMgB;GNe;EOe;GPa;CFC"}},"type":"js/module"}]}