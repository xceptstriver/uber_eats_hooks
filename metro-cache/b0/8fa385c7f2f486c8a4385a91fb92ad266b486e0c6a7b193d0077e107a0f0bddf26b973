{"dependencies":[{"name":"react","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":1,"column":31}}]}},{"name":"@react-navigation/core","data":{"asyncType":null,"locs":[{"start":{"line":48,"column":21},"end":{"line":48,"column":34},"identifierName":"useNavigation"},{"start":{"line":49,"column":16},"end":{"line":49,"column":24},"identifierName":"useRoute"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useScrollToTop;\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function getScrollableNode(ref) {\n    if (ref.current == null) {\n      return null;\n    }\n\n    if ('scrollToTop' in ref.current || 'scrollTo' in ref.current || 'scrollToOffset' in ref.current || 'scrollResponderScrollTo' in ref.current) {\n      return ref.current;\n    } else if ('getScrollResponder' in ref.current) {\n      return ref.current.getScrollResponder();\n    } else if ('getNode' in ref.current) {\n      return ref.current.getNode();\n    } else {\n      return ref.current;\n    }\n  }\n\n  function useScrollToTop(ref) {\n    var navigation = (0, _$$_REQUIRE(_dependencyMap[1], \"@react-navigation/core\").useNavigation)();\n    var route = (0, _$$_REQUIRE(_dependencyMap[1], \"@react-navigation/core\").useRoute)();\n    React.useEffect(function () {\n      var current = navigation;\n\n      while (current && current.getState().type !== 'tab') {\n        current = current.getParent();\n      }\n\n      if (!current) {\n        return;\n      }\n\n      var unsubscribe = current.addListener('tabPress', function (e) {\n        var isFocused = navigation.isFocused();\n        var isFirst = navigation === current || navigation.getState().routes[0].key === route.key;\n        requestAnimationFrame(function () {\n          var scrollable = getScrollableNode(ref);\n\n          if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n            if ('scrollToTop' in scrollable) {\n              scrollable.scrollToTop();\n            } else if ('scrollTo' in scrollable) {\n              scrollable.scrollTo({\n                y: 0,\n                animated: true\n              });\n            } else if ('scrollToOffset' in scrollable) {\n              scrollable.scrollToOffset({\n                offset: 0,\n                animated: true\n              });\n            } else if ('scrollResponderScrollTo' in scrollable) {\n              scrollable.scrollResponderScrollTo({\n                y: 0,\n                animated: true\n              });\n            }\n          }\n        });\n      });\n      return unsubscribe;\n    }, [navigation, ref, route.key]);\n  }\n});","lineCount":74,"map":[[7,0,1,0],[13,0,17,0],[13,11,17,9,"getScrollableNode"],[13,28,17,0],[13,29,17,27,"ref"],[13,32,17,0],[13,34,17,68],[14,0,18,2],[14,8,18,6,"ref"],[14,11,18,9],[14,12,18,10,"current"],[14,19,18,6],[14,23,18,21],[14,27,18,2],[14,29,18,27],[15,0,19,4],[15,13,19,11],[15,17,19,4],[16,0,20,3],[18,0,22,2],[18,8,23,4],[18,25,23,21,"ref"],[18,28,23,24],[18,29,23,25,"current"],[18,36,23,4],[18,40,24,4],[18,54,24,18,"ref"],[18,57,24,21],[18,58,24,22,"current"],[18,65,23,4],[18,69,25,4],[18,89,25,24,"ref"],[18,92,25,27],[18,93,25,28,"current"],[18,100,23,4],[18,104,26,4],[18,133,26,33,"ref"],[18,136,26,36],[18,137,26,37,"current"],[18,144,22,2],[18,146,27,4],[19,0,29,4],[19,13,29,11,"ref"],[19,16,29,14],[19,17,29,15,"current"],[19,24,29,4],[20,0,30,3],[20,5,22,2],[20,11,30,9],[20,15,30,13],[20,39,30,37,"ref"],[20,42,30,40],[20,43,30,41,"current"],[20,50,30,9],[20,52,30,50],[21,0,33,4],[21,13,33,11,"ref"],[21,16,33,14],[21,17,33,15,"current"],[21,24,33,11],[21,25,33,23,"getScrollResponder"],[21,43,33,11],[21,45,33,4],[22,0,34,3],[22,5,30,9],[22,11,34,9],[22,15,34,13],[22,28,34,26,"ref"],[22,31,34,29],[22,32,34,30,"current"],[22,39,34,9],[22,41,34,39],[23,0,39,4],[23,13,39,11,"ref"],[23,16,39,14],[23,17,39,15,"current"],[23,24,39,11],[23,25,39,23,"getNode"],[23,32,39,11],[23,34,39,4],[24,0,40,3],[24,5,34,9],[24,11,40,9],[25,0,41,4],[25,13,41,11,"ref"],[25,16,41,14],[25,17,41,15,"current"],[25,24,41,4],[26,0,42,3],[27,0,43,1],[29,0,45,15],[29,11,45,24,"useScrollToTop"],[29,25,45,15],[29,26,46,2,"ref"],[29,29,45,15],[29,31,47,2],[30,0,48,2],[30,8,48,8,"navigation"],[30,18,48,18],[30,21,48,21],[30,98,48,2],[31,0,49,2],[31,8,49,8,"route"],[31,13,49,13],[31,16,49,16],[31,88,49,2],[32,0,51,2,"React"],[32,4,51,2,"React"],[32,9,51,7],[32,10,51,8,"useEffect"],[32,19,51,2],[32,20,51,18],[32,32,51,24],[33,0,52,4],[33,10,52,8,"current"],[33,17,52,15],[33,20,52,18,"navigation"],[33,30,52,4],[35,0,56,4],[35,13,56,11,"current"],[35,20,56,18],[35,24,56,22,"current"],[35,31,56,29],[35,32,56,30,"getState"],[35,40,56,22],[35,43,56,41,"type"],[35,47,56,22],[35,52,56,50],[35,57,56,4],[35,59,56,57],[36,0,57,6,"current"],[36,8,57,6,"current"],[36,15,57,13],[36,18,57,16,"current"],[36,25,57,23],[36,26,57,24,"getParent"],[36,35,57,16],[36,37,57,6],[37,0,58,5],[39,0,60,4],[39,10,60,8],[39,11,60,9,"current"],[39,18,60,4],[39,20,60,18],[40,0,61,6],[41,0,62,5],[43,0,64,4],[43,10,64,10,"unsubscribe"],[43,21,64,21],[43,24,64,24,"current"],[43,31,64,31],[43,32,64,32,"addListener"],[43,43,64,24],[43,44,68,6],[43,54,64,24],[43,56,69,6],[43,66,69,7,"e"],[43,67,69,6],[43,69,69,41],[44,0,71,8],[44,12,71,14,"isFocused"],[44,21,71,23],[44,24,71,26,"navigation"],[44,34,71,36],[44,35,71,37,"isFocused"],[44,44,71,26],[44,46,71,8],[45,0,75,8],[45,12,75,14,"isFirst"],[45,19,75,21],[45,22,76,10,"navigation"],[45,32,76,20],[45,37,76,25,"current"],[45,44,76,10],[45,48,77,10,"navigation"],[45,58,77,20],[45,59,77,21,"getState"],[45,67,77,10],[45,70,77,32,"routes"],[45,76,77,10],[45,77,77,39],[45,78,77,10],[45,80,77,42,"key"],[45,83,77,10],[45,88,77,50,"route"],[45,93,77,55],[45,94,77,56,"key"],[45,97,75,8],[46,0,81,8,"requestAnimationFrame"],[46,8,81,8,"requestAnimationFrame"],[46,29,81,29],[46,30,81,30],[46,42,81,36],[47,0,82,10],[47,14,82,16,"scrollable"],[47,24,82,26],[47,27,82,29,"getScrollableNode"],[47,44,82,46],[47,45,82,47,"ref"],[47,48,82,46],[47,49,82,10],[49,0,84,10],[49,14,84,14,"isFocused"],[49,23,84,23],[49,27,84,27,"isFirst"],[49,34,84,14],[49,38,84,38,"scrollable"],[49,48,84,14],[49,52,84,52],[49,53,84,53,"e"],[49,54,84,54],[49,55,84,55,"defaultPrevented"],[49,71,84,10],[49,73,84,73],[50,0,85,12],[50,16,85,16],[50,33,85,33,"scrollable"],[50,43,85,12],[50,45,85,45],[51,0,86,14,"scrollable"],[51,14,86,14,"scrollable"],[51,24,86,24],[51,25,86,25,"scrollToTop"],[51,36,86,14],[52,0,87,13],[52,13,85,12],[52,19,87,19],[52,23,87,23],[52,37,87,37,"scrollable"],[52,47,87,19],[52,49,87,49],[53,0,88,14,"scrollable"],[53,14,88,14,"scrollable"],[53,24,88,24],[53,25,88,25,"scrollTo"],[53,33,88,14],[53,34,88,34],[54,0,88,36,"y"],[54,16,88,36,"y"],[54,17,88,37],[54,19,88,39],[54,20,88,34],[55,0,88,42,"animated"],[55,16,88,42,"animated"],[55,24,88,50],[55,26,88,52],[56,0,88,34],[56,15,88,14],[57,0,89,13],[57,13,87,19],[57,19,89,19],[57,23,89,23],[57,43,89,43,"scrollable"],[57,53,89,19],[57,55,89,55],[58,0,90,14,"scrollable"],[58,14,90,14,"scrollable"],[58,24,90,24],[58,25,90,25,"scrollToOffset"],[58,39,90,14],[58,40,90,40],[59,0,90,42,"offset"],[59,16,90,42,"offset"],[59,22,90,48],[59,24,90,50],[59,25,90,40],[60,0,90,53,"animated"],[60,16,90,53,"animated"],[60,24,90,61],[60,26,90,63],[61,0,90,40],[61,15,90,14],[62,0,91,13],[62,13,89,19],[62,19,91,19],[62,23,91,23],[62,52,91,52,"scrollable"],[62,62,91,19],[62,64,91,64],[63,0,92,14,"scrollable"],[63,14,92,14,"scrollable"],[63,24,92,24],[63,25,92,25,"scrollResponderScrollTo"],[63,48,92,14],[63,49,92,49],[64,0,92,51,"y"],[64,16,92,51,"y"],[64,17,92,52],[64,19,92,54],[64,20,92,49],[65,0,92,57,"animated"],[65,16,92,57,"animated"],[65,24,92,65],[65,26,92,67],[66,0,92,49],[66,15,92,14],[67,0,93,13],[68,0,94,11],[69,0,95,9],[69,9,81,29],[69,10,81,8],[70,0,96,7],[70,7,64,24],[70,8,64,4],[71,0,99,4],[71,13,99,11,"unsubscribe"],[71,24,99,4],[72,0,100,3],[72,5,51,2],[72,7,100,5],[72,8,100,6,"navigation"],[72,18,100,5],[72,20,100,18,"ref"],[72,23,100,5],[72,25,100,23,"route"],[72,30,100,28],[72,31,100,29,"key"],[72,34,100,5],[72,35,51,2],[73,0,101,1]],"functionMap":{"names":["<global>","getScrollableNode","useScrollToTop","React.useEffect$argument_0","current.addListener$argument_1","requestAnimationFrame$argument_0"],"mappings":"AAA;ACgB;CD0B;eEE;kBCM;MCkB;8BCY;SDc;ODC;GDI;CFC"}},"type":"js/module"}]}