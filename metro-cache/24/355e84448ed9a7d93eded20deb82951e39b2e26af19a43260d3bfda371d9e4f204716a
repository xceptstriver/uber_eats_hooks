{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":246,"column":0}}]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":246,"column":0}}]}},{"name":"../FirestoreFieldPath","data":{"asyncType":null,"locs":[{"start":{"line":27,"column":0},"end":{"line":27,"column":83}}]}},{"name":"@react-native-firebase/app/lib/common","data":{"asyncType":null,"locs":[{"start":{"line":30,"column":7},"end":{"line":30,"column":15},"identifierName":"isObject"},{"start":{"line":46,"column":9},"end":{"line":46,"column":17},"identifierName":"isObject"},{"start":{"line":58,"column":10},"end":{"line":58,"column":18},"identifierName":"isString"},{"start":{"line":77,"column":6},"end":{"line":77,"column":17},"identifierName":"isUndefined"},{"start":{"line":81,"column":7},"end":{"line":81,"column":15},"identifierName":"isObject"},{"start":{"line":85,"column":6},"end":{"line":85,"column":20},"identifierName":"hasOwnProperty"},{"start":{"line":85,"column":42},"end":{"line":85,"column":56},"identifierName":"hasOwnProperty"},{"start":{"line":89,"column":7},"end":{"line":89,"column":18},"identifierName":"isUndefined"},{"start":{"line":90,"column":9},"end":{"line":90,"column":18},"identifierName":"isBoolean"},{"start":{"line":97,"column":7},"end":{"line":97,"column":18},"identifierName":"isUndefined"},{"start":{"line":98,"column":9},"end":{"line":98,"column":16},"identifierName":"isArray"},{"start":{"line":106,"column":11},"end":{"line":106,"column":19},"identifierName":"isString"},{"start":{"line":114,"column":10},"end":{"line":114,"column":18},"identifierName":"isString"},{"start":{"line":166,"column":6},"end":{"line":166,"column":16},"identifierName":"isFunction"},{"start":{"line":170,"column":8},"end":{"line":170,"column":18},"identifierName":"isFunction"},{"start":{"line":184,"column":6},"end":{"line":184,"column":14},"identifierName":"isObject"},{"start":{"line":187,"column":16},"end":{"line":187,"column":26},"identifierName":"isFunction"},{"start":{"line":190,"column":15},"end":{"line":190,"column":25},"identifierName":"isFunction"},{"start":{"line":197,"column":6},"end":{"line":197,"column":14},"identifierName":"isObject"},{"start":{"line":200,"column":8},"end":{"line":200,"column":18},"identifierName":"isFunction"},{"start":{"line":204,"column":10},"end":{"line":204,"column":20},"identifierName":"isFunction"},{"start":{"line":222,"column":18},"end":{"line":222,"column":28},"identifierName":"isFunction"},{"start":{"line":225,"column":17},"end":{"line":225,"column":27},"identifierName":"isFunction"},{"start":{"line":230,"column":6},"end":{"line":230,"column":20},"identifierName":"hasOwnProperty"},{"start":{"line":231,"column":9},"end":{"line":231,"column":18},"identifierName":"isBoolean"},{"start":{"line":236,"column":7},"end":{"line":236,"column":17},"identifierName":"isFunction"},{"start":{"line":240,"column":7},"end":{"line":240,"column":17},"identifierName":"isFunction"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.extractFieldPathData = extractFieldPathData;\n  exports.parseSetOptions = parseSetOptions;\n  exports.parseSnapshotArgs = parseSnapshotArgs;\n  exports.parseUpdateArgs = parseUpdateArgs;\n\n  var _slicedToArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _FirestoreFieldPath = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[2], \"../FirestoreFieldPath\"));\n\n  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\n  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n  function extractFieldPathData(data, segmenets) {\n    if (!(0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isObject)(data)) {\n      return undefined;\n    }\n\n    var pathValue = data[segmenets[0]];\n\n    if (segmenets.length === 1) {\n      return pathValue;\n    }\n\n    return extractFieldPathData(pathValue, segmenets.slice(1));\n  }\n\n  function parseUpdateArgs(args) {\n    var data = {};\n\n    if (args.length === 1) {\n      if (!(0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isObject)(args[0])) {\n        throw new Error('if using a single update argument, it must be an object.');\n      }\n\n      var _args = (0, _slicedToArray2.default)(args, 1);\n\n      data = _args[0];\n    } else if (args.length % 2 === 1) {\n      throw new Error('the update arguments must be either a single object argument, or equal numbers of key/value pairs.');\n    } else {\n      for (var i = 0; i < args.length; i += 2) {\n        var key = args[i];\n        var value = args[i + 1];\n\n        if ((0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isString)(key)) {\n          data[key] = value;\n        } else if (key instanceof _FirestoreFieldPath.default) {\n          data[key._toPath()] = value;\n        } else {\n          throw new Error(\"argument at index \" + i + \" must be a string or FieldPath\");\n        }\n      }\n    }\n\n    return data;\n  }\n\n  function parseSetOptions(options) {\n    var out = {};\n\n    if ((0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isUndefined)(options)) {\n      return out;\n    }\n\n    if (!(0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isObject)(options)) {\n      throw new Error(\"'options' must be an object.\");\n    }\n\n    if ((0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").hasOwnProperty)(options, 'merge') && (0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").hasOwnProperty)(options, 'mergeFields')) {\n      throw new Error(\"'options' must not contain both 'merge' & 'mergeFields'.\");\n    }\n\n    if (!(0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isUndefined)(options.merge)) {\n      if (!(0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isBoolean)(options.merge)) {\n        throw new Error(\"'options.merge' must be a boolean value.\");\n      }\n\n      out.merge = true;\n    }\n\n    if (!(0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isUndefined)(options.mergeFields)) {\n      if (!(0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isArray)(options.mergeFields)) {\n        throw new Error(\"'options.mergeFields' must be an array.\");\n      }\n\n      out.mergeFields = [];\n\n      for (var i = 0; i < options.mergeFields.length; i++) {\n        var field = options.mergeFields[i];\n\n        if (!(0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isString)(field) && !(field instanceof _FirestoreFieldPath.default)) {\n          throw new Error(\"'options.mergeFields' all fields must be of type string or FieldPath, but the value at index \" + i + \" was \" + typeof field);\n        }\n\n        var path = field;\n\n        if ((0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isString)(path)) {\n          try {\n            path = (0, _FirestoreFieldPath.fromDotSeparatedString)(field);\n          } catch (e) {\n            throw new Error(\"'options.mergeFields' \" + e.message);\n          }\n        }\n\n        if (field instanceof _FirestoreFieldPath.default) {\n          out.mergeFields.push(field._toPath());\n        } else {\n          out.mergeFields.push(field);\n        }\n      }\n    }\n\n    return out;\n  }\n\n  function isPartialObserver(input) {\n    if (input == null) {\n      return false;\n    }\n\n    return input.next != null || input.error != null || input.complete != null;\n  }\n\n  function parseSnapshotArgs(args) {\n    if (args.length === 0) {\n      throw new Error('expected at least one argument.');\n    }\n\n    var NOOP = function NOOP() {};\n\n    var snapshotListenOptions = {};\n    var callback = NOOP;\n    var onError = NOOP;\n    var onNext = NOOP;\n\n    if ((0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isFunction)(args[0])) {\n      if ((0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isFunction)(args[1])) {\n        onNext = args[0];\n        onError = args[1];\n      } else {\n        callback = args[0];\n      }\n    }\n\n    if ((0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isObject)(args[0]) && isPartialObserver(args[0])) {\n      var observer = args[0];\n\n      if (observer.error) {\n        onError = (0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isFunction)(observer.error) ? observer.error.bind(observer) : observer.error;\n      }\n\n      if (observer.next) {\n        onNext = (0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isFunction)(observer.next) ? observer.next.bind(observer) : observer.next;\n      }\n    }\n\n    if ((0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isObject)(args[0]) && !isPartialObserver(args[0])) {\n      snapshotListenOptions.includeMetadataChanges = args[0].includeMetadataChanges == null ? false : args[0].includeMetadataChanges;\n\n      if ((0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isFunction)(args[1])) {\n        if ((0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isFunction)(args[2])) {\n          onNext = args[1];\n          onError = args[2];\n        } else {\n          callback = args[1];\n        }\n      } else if (isPartialObserver(args[1])) {\n        var _observer = args[1];\n\n        if (_observer.error) {\n          onError = (0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isFunction)(_observer.error) ? _observer.error.bind(_observer) : _observer.error;\n        }\n\n        if (_observer.next) {\n          onNext = (0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isFunction)(_observer.next) ? _observer.next.bind(_observer) : _observer.next;\n        }\n      }\n    }\n\n    if ((0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").hasOwnProperty)(snapshotListenOptions, 'includeMetadataChanges')) {\n      if (!(0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isBoolean)(snapshotListenOptions.includeMetadataChanges)) {\n        throw new Error(\"'options' SnapshotOptions.includeMetadataChanges must be a boolean value.\");\n      }\n    }\n\n    if (!(0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isFunction)(onNext)) {\n      throw new Error(\"'observer.next' or 'onNext' expected a function.\");\n    }\n\n    if (!(0, _$$_REQUIRE(_dependencyMap[3], \"@react-native-firebase/app/lib/common\").isFunction)(onError)) {\n      throw new Error(\"'observer.error' or 'onError' expected a function.\");\n    }\n\n    return {\n      snapshotListenOptions: snapshotListenOptions,\n      callback: callback,\n      onNext: onNext,\n      onError: onError\n    };\n  }\n});","lineCount":206,"map":[[12,0,27,0],[18,0,29,7],[18,11,29,16,"extractFieldPathData"],[18,31,29,7],[18,32,29,37,"data"],[18,36,29,7],[18,38,29,43,"segmenets"],[18,47,29,7],[18,49,29,54],[19,0,30,2],[19,8,30,6],[19,9,30,7],[19,95,30,16,"data"],[19,99,30,7],[19,100,30,2],[19,102,30,23],[20,0,31,4],[20,13,31,11,"undefined"],[20,22,31,4],[21,0,32,3],[23,0,34,2],[23,8,34,8,"pathValue"],[23,17,34,17],[23,20,34,20,"data"],[23,24,34,24],[23,25,34,25,"segmenets"],[23,34,34,34],[23,35,34,35],[23,36,34,34],[23,37,34,24],[23,38,34,2],[25,0,36,2],[25,8,36,6,"segmenets"],[25,17,36,15],[25,18,36,16,"length"],[25,24,36,6],[25,29,36,27],[25,30,36,2],[25,32,36,30],[26,0,37,4],[26,13,37,11,"pathValue"],[26,22,37,4],[27,0,38,3],[29,0,40,2],[29,11,40,9,"extractFieldPathData"],[29,31,40,29],[29,32,40,30,"pathValue"],[29,41,40,29],[29,43,40,41,"segmenets"],[29,52,40,50],[29,53,40,51,"slice"],[29,58,40,41],[29,59,40,57],[29,60,40,41],[29,61,40,29],[29,62,40,2],[30,0,41,1],[32,0,43,7],[32,11,43,16,"parseUpdateArgs"],[32,26,43,7],[32,27,43,32,"args"],[32,31,43,7],[32,33,43,38],[33,0,44,2],[33,8,44,6,"data"],[33,12,44,10],[33,15,44,13],[33,17,44,2],[35,0,45,2],[35,8,45,6,"args"],[35,12,45,10],[35,13,45,11,"length"],[35,19,45,6],[35,24,45,22],[35,25,45,2],[35,27,45,25],[36,0,46,4],[36,10,46,8],[36,11,46,9],[36,97,46,18,"args"],[36,101,46,22],[36,102,46,23],[36,103,46,22],[36,104,46,9],[36,105,46,4],[36,107,46,28],[37,0,47,6],[37,14,47,12],[37,18,47,16,"Error"],[37,23,47,12],[37,24,47,22],[37,82,47,12],[37,83,47,6],[38,0,48,5],[40,0,45,25],[40,47,49,13,"args"],[40,51,45,25],[42,0,49,5,"data"],[42,6,49,5,"data"],[42,10,45,25],[43,0,50,3],[43,5,45,2],[43,11,50,9],[43,15,50,13,"args"],[43,19,50,17],[43,20,50,18,"length"],[43,26,50,13],[43,29,50,27],[43,30,50,13],[43,35,50,33],[43,36,50,9],[43,38,50,36],[44,0,51,4],[44,12,51,10],[44,16,51,14,"Error"],[44,21,51,10],[44,22,52,6],[44,122,51,10],[44,123,51,4],[45,0,54,3],[45,5,50,9],[45,11,54,9],[46,0,55,4],[46,11,55,9],[46,15,55,13,"i"],[46,16,55,14],[46,19,55,17],[46,20,55,4],[46,22,55,20,"i"],[46,23,55,21],[46,26,55,24,"args"],[46,30,55,28],[46,31,55,29,"length"],[46,37,55,4],[46,39,55,37,"i"],[46,40,55,38],[46,44,55,42],[46,45,55,4],[46,47,55,45],[47,0,56,6],[47,12,56,12,"key"],[47,15,56,15],[47,18,56,18,"args"],[47,22,56,22],[47,23,56,23,"i"],[47,24,56,22],[47,25,56,6],[48,0,57,6],[48,12,57,12,"value"],[48,17,57,17],[48,20,57,20,"args"],[48,24,57,24],[48,25,57,25,"i"],[48,26,57,26],[48,29,57,29],[48,30,57,24],[48,31,57,6],[50,0,58,6],[50,12,58,10],[50,98,58,19,"key"],[50,101,58,10],[50,102,58,6],[50,104,58,25],[51,0,59,8,"data"],[51,10,59,8,"data"],[51,14,59,12],[51,15,59,13,"key"],[51,18,59,12],[51,19,59,8],[51,22,59,20,"value"],[51,27,59,8],[52,0,60,7],[52,9,58,6],[52,15,60,13],[52,19,60,17,"key"],[52,22,60,20],[52,34,60,32,"FirestoreFieldPath"],[52,61,60,13],[52,63,60,52],[53,0,61,8,"data"],[53,10,61,8,"data"],[53,14,61,12],[53,15,61,13,"key"],[53,18,61,16],[53,19,61,17,"_toPath"],[53,26,61,13],[53,28,61,12],[53,29,61,8],[53,32,61,30,"value"],[53,37,61,8],[54,0,62,7],[54,9,60,13],[54,15,62,13],[55,0,63,8],[55,16,63,14],[55,20,63,18,"Error"],[55,25,63,14],[55,49,63,45,"i"],[55,50,63,14],[55,86,63,8],[56,0,64,7],[57,0,65,5],[58,0,66,3],[60,0,67,2],[60,11,67,9,"data"],[60,15,67,2],[61,0,68,1],[63,0,74,7],[63,11,74,16,"parseSetOptions"],[63,26,74,7],[63,27,74,32,"options"],[63,34,74,7],[63,36,74,41],[64,0,75,2],[64,8,75,8,"out"],[64,11,75,11],[64,14,75,14],[64,16,75,2],[66,0,77,2],[66,8,77,6],[66,97,77,18,"options"],[66,104,77,6],[66,105,77,2],[66,107,77,28],[67,0,78,4],[67,13,78,11,"out"],[67,16,78,4],[68,0,79,3],[70,0,81,2],[70,8,81,6],[70,9,81,7],[70,95,81,16,"options"],[70,102,81,7],[70,103,81,2],[70,105,81,26],[71,0,82,4],[71,12,82,10],[71,16,82,14,"Error"],[71,21,82,10],[71,22,82,20],[71,52,82,10],[71,53,82,4],[72,0,83,3],[74,0,85,2],[74,8,85,6],[74,100,85,21,"options"],[74,107,85,6],[74,109,85,30],[74,116,85,6],[74,121,85,42],[74,213,85,57,"options"],[74,220,85,42],[74,222,85,66],[74,235,85,42],[74,236,85,2],[74,238,85,82],[75,0,86,4],[75,12,86,10],[75,16,86,14,"Error"],[75,21,86,10],[75,22,86,20],[75,80,86,10],[75,81,86,4],[76,0,87,3],[78,0,89,2],[78,8,89,6],[78,9,89,7],[78,98,89,19,"options"],[78,105,89,26],[78,106,89,27,"merge"],[78,111,89,7],[78,112,89,2],[78,114,89,35],[79,0,90,4],[79,10,90,8],[79,11,90,9],[79,98,90,19,"options"],[79,105,90,26],[79,106,90,27,"merge"],[79,111,90,9],[79,112,90,4],[79,114,90,35],[80,0,91,6],[80,14,91,12],[80,18,91,16,"Error"],[80,23,91,12],[80,24,91,22],[80,66,91,12],[80,67,91,6],[81,0,92,5],[83,0,94,4,"out"],[83,6,94,4,"out"],[83,9,94,7],[83,10,94,8,"merge"],[83,15,94,4],[83,18,94,16],[83,22,94,4],[84,0,95,3],[86,0,97,2],[86,8,97,6],[86,9,97,7],[86,98,97,19,"options"],[86,105,97,26],[86,106,97,27,"mergeFields"],[86,117,97,7],[86,118,97,2],[86,120,97,41],[87,0,98,4],[87,10,98,8],[87,11,98,9],[87,96,98,17,"options"],[87,103,98,24],[87,104,98,25,"mergeFields"],[87,115,98,9],[87,116,98,4],[87,118,98,39],[88,0,99,6],[88,14,99,12],[88,18,99,16,"Error"],[88,23,99,12],[88,24,99,22],[88,65,99,12],[88,66,99,6],[89,0,100,5],[91,0,102,4,"out"],[91,6,102,4,"out"],[91,9,102,7],[91,10,102,8,"mergeFields"],[91,21,102,4],[91,24,102,22],[91,26,102,4],[93,0,104,4],[93,11,104,9],[93,15,104,13,"i"],[93,16,104,14],[93,19,104,17],[93,20,104,4],[93,22,104,20,"i"],[93,23,104,21],[93,26,104,24,"options"],[93,33,104,31],[93,34,104,32,"mergeFields"],[93,45,104,24],[93,46,104,44,"length"],[93,52,104,4],[93,54,104,52,"i"],[93,55,104,53],[93,57,104,4],[93,59,104,57],[94,0,105,6],[94,12,105,12,"field"],[94,17,105,17],[94,20,105,20,"options"],[94,27,105,27],[94,28,105,28,"mergeFields"],[94,39,105,20],[94,40,105,40,"i"],[94,41,105,20],[94,42,105,6],[96,0,106,6],[96,12,106,10],[96,13,106,11],[96,99,106,20,"field"],[96,104,106,11],[96,105,106,10],[96,109,106,30],[96,111,106,32,"field"],[96,116,106,37],[96,128,106,49,"FirestoreFieldPath"],[96,155,106,30],[96,156,106,6],[96,158,106,70],[97,0,107,8],[97,16,107,14],[97,20,107,18,"Error"],[97,25,107,14],[97,124,108,106,"i"],[97,125,107,14],[97,138,108,115],[97,145,108,122,"field"],[97,150,107,14],[97,151,107,8],[98,0,110,7],[100,0,112,6],[100,12,112,10,"path"],[100,16,112,14],[100,19,112,17,"field"],[100,24,112,6],[102,0,114,6],[102,12,114,10],[102,98,114,19,"path"],[102,102,114,10],[102,103,114,6],[102,105,114,26],[103,0,115,8],[103,14,115,12],[104,0,116,10,"path"],[104,12,116,10,"path"],[104,16,116,14],[104,19,116,17],[104,67,116,40,"field"],[104,72,116,17],[104,73,116,10],[105,0,117,9],[105,11,115,8],[105,12,117,10],[105,19,117,17,"e"],[105,20,117,10],[105,22,117,20],[106,0,118,10],[106,18,118,16],[106,22,118,20,"Error"],[106,27,118,16],[106,55,118,51,"e"],[106,56,118,52],[106,57,118,53,"message"],[106,64,118,16],[106,65,118,10],[107,0,119,9],[108,0,120,7],[110,0,122,6],[110,12,122,10,"field"],[110,17,122,15],[110,29,122,27,"FirestoreFieldPath"],[110,56,122,6],[110,58,122,47],[111,0,123,8,"out"],[111,10,123,8,"out"],[111,13,123,11],[111,14,123,12,"mergeFields"],[111,25,123,8],[111,26,123,24,"push"],[111,30,123,8],[111,31,123,29,"field"],[111,36,123,34],[111,37,123,35,"_toPath"],[111,44,123,29],[111,46,123,8],[112,0,124,7],[112,9,122,6],[112,15,124,13],[113,0,125,8,"out"],[113,10,125,8,"out"],[113,13,125,11],[113,14,125,12,"mergeFields"],[113,25,125,8],[113,26,125,24,"push"],[113,30,125,8],[113,31,125,29,"field"],[113,36,125,8],[114,0,126,7],[115,0,127,5],[116,0,128,3],[118,0,130,2],[118,11,130,9,"out"],[118,14,130,2],[119,0,131,1],[121,0,144,0],[121,11,144,9,"isPartialObserver"],[121,28,144,0],[121,29,144,27,"input"],[121,34,144,0],[121,36,144,34],[122,0,145,2],[122,8,145,6,"input"],[122,13,145,11],[122,17,145,15],[122,21,145,2],[122,23,145,21],[123,0,146,4],[123,13,146,11],[123,18,146,4],[124,0,147,3],[126,0,148,2],[126,11,148,9,"input"],[126,16,148,14],[126,17,148,15,"next"],[126,21,148,9],[126,25,148,23],[126,29,148,9],[126,33,148,31,"input"],[126,38,148,36],[126,39,148,37,"error"],[126,44,148,31],[126,48,148,46],[126,52,148,9],[126,56,148,54,"input"],[126,61,148,59],[126,62,148,60,"complete"],[126,70,148,54],[126,74,148,72],[126,78,148,2],[127,0,149,1],[129,0,151,7],[129,11,151,16,"parseSnapshotArgs"],[129,28,151,7],[129,29,151,34,"args"],[129,33,151,7],[129,35,151,40],[130,0,152,2],[130,8,152,6,"args"],[130,12,152,10],[130,13,152,11,"length"],[130,19,152,6],[130,24,152,22],[130,25,152,2],[130,27,152,25],[131,0,153,4],[131,12,153,10],[131,16,153,14,"Error"],[131,21,153,10],[131,22,153,20],[131,55,153,10],[131,56,153,4],[132,0,154,3],[134,0,157,2],[134,8,157,8,"NOOP"],[134,12,157,12],[134,15,157,15],[134,24,157,8,"NOOP"],[134,28,157,15],[134,31,157,21],[134,32,157,23],[134,33,157,2],[136,0,158,2],[136,8,158,8,"snapshotListenOptions"],[136,29,158,29],[136,32,158,32],[136,34,158,2],[137,0,159,2],[137,8,159,6,"callback"],[137,16,159,14],[137,19,159,17,"NOOP"],[137,23,159,2],[138,0,160,2],[138,8,160,6,"onError"],[138,15,160,13],[138,18,160,16,"NOOP"],[138,22,160,2],[139,0,161,2],[139,8,161,6,"onNext"],[139,14,161,12],[139,17,161,15,"NOOP"],[139,21,161,2],[141,0,166,2],[141,8,166,6],[141,96,166,17,"args"],[141,100,166,21],[141,101,166,22],[141,102,166,21],[141,103,166,6],[141,104,166,2],[141,106,166,27],[142,0,170,4],[142,10,170,8],[142,98,170,19,"args"],[142,102,170,23],[142,103,170,24],[142,104,170,23],[142,105,170,8],[142,106,170,4],[142,108,170,29],[143,0,171,6,"onNext"],[143,8,171,6,"onNext"],[143,14,171,12],[143,17,171,15,"args"],[143,21,171,19],[143,22,171,20],[143,23,171,19],[143,24,171,6],[144,0,172,6,"onError"],[144,8,172,6,"onError"],[144,15,172,13],[144,18,172,16,"args"],[144,22,172,20],[144,23,172,21],[144,24,172,20],[144,25,172,6],[145,0,173,5],[145,7,170,4],[145,13,173,11],[146,0,177,6,"callback"],[146,8,177,6,"callback"],[146,16,177,14],[146,19,177,17,"args"],[146,23,177,21],[146,24,177,22],[146,25,177,21],[146,26,177,6],[147,0,178,5],[148,0,179,3],[150,0,184,2],[150,8,184,6],[150,94,184,15,"args"],[150,98,184,19],[150,99,184,20],[150,100,184,19],[150,101,184,6],[150,106,184,27,"isPartialObserver"],[150,123,184,44],[150,124,184,45,"args"],[150,128,184,49],[150,129,184,50],[150,130,184,49],[150,131,184,44],[150,132,184,2],[150,134,184,55],[151,0,185,4],[151,10,185,10,"observer"],[151,18,185,18],[151,21,185,21,"args"],[151,25,185,25],[151,26,185,26],[151,27,185,25],[151,28,185,4],[153,0,186,4],[153,10,186,8,"observer"],[153,18,186,16],[153,19,186,17,"error"],[153,24,186,4],[153,26,186,24],[154,0,187,6,"onError"],[154,8,187,6,"onError"],[154,15,187,13],[154,18,187,16],[154,106,187,27,"observer"],[154,114,187,35],[154,115,187,36,"error"],[154,120,187,16],[154,124,187,45,"observer"],[154,132,187,53],[154,133,187,54,"error"],[154,138,187,45],[154,139,187,60,"bind"],[154,143,187,45],[154,144,187,65,"observer"],[154,152,187,45],[154,153,187,16],[154,156,187,77,"observer"],[154,164,187,85],[154,165,187,86,"error"],[154,170,187,6],[155,0,188,5],[157,0,189,4],[157,10,189,8,"observer"],[157,18,189,16],[157,19,189,17,"next"],[157,23,189,4],[157,25,189,23],[158,0,190,6,"onNext"],[158,8,190,6,"onNext"],[158,14,190,12],[158,17,190,15],[158,105,190,26,"observer"],[158,113,190,34],[158,114,190,35,"next"],[158,118,190,15],[158,122,190,43,"observer"],[158,130,190,51],[158,131,190,52,"next"],[158,135,190,43],[158,136,190,57,"bind"],[158,140,190,43],[158,141,190,62,"observer"],[158,149,190,43],[158,150,190,15],[158,153,190,74,"observer"],[158,161,190,82],[158,162,190,83,"next"],[158,166,190,6],[159,0,191,5],[160,0,192,3],[162,0,197,2],[162,8,197,6],[162,94,197,15,"args"],[162,98,197,19],[162,99,197,20],[162,100,197,19],[162,101,197,6],[162,106,197,27],[162,107,197,28,"isPartialObserver"],[162,124,197,45],[162,125,197,46,"args"],[162,129,197,50],[162,130,197,51],[162,131,197,50],[162,132,197,45],[162,133,197,2],[162,135,197,56],[163,0,198,4,"snapshotListenOptions"],[163,6,198,4,"snapshotListenOptions"],[163,27,198,25],[163,28,198,26,"includeMetadataChanges"],[163,50,198,4],[163,53,199,6,"args"],[163,57,199,10],[163,58,199,11],[163,59,199,10],[163,60,199,6],[163,61,199,14,"includeMetadataChanges"],[163,83,199,6],[163,87,199,40],[163,91,199,6],[163,94,199,47],[163,99,199,6],[163,102,199,55,"args"],[163,106,199,59],[163,107,199,60],[163,108,199,59],[163,109,199,55],[163,110,199,63,"includeMetadataChanges"],[163,132,198,4],[165,0,200,4],[165,10,200,8],[165,98,200,19,"args"],[165,102,200,23],[165,103,200,24],[165,104,200,23],[165,105,200,8],[165,106,200,4],[165,108,200,29],[166,0,204,6],[166,12,204,10],[166,100,204,21,"args"],[166,104,204,25],[166,105,204,26],[166,106,204,25],[166,107,204,10],[166,108,204,6],[166,110,204,31],[167,0,208,8,"onNext"],[167,10,208,8,"onNext"],[167,16,208,14],[167,19,208,17,"args"],[167,23,208,21],[167,24,208,22],[167,25,208,21],[167,26,208,8],[168,0,209,8,"onError"],[168,10,209,8,"onError"],[168,17,209,15],[168,20,209,18,"args"],[168,24,209,22],[168,25,209,23],[168,26,209,22],[168,27,209,8],[169,0,210,7],[169,9,204,6],[169,15,210,13],[170,0,214,8,"callback"],[170,10,214,8,"callback"],[170,18,214,16],[170,21,214,19,"args"],[170,25,214,23],[170,26,214,24],[170,27,214,23],[170,28,214,8],[171,0,215,7],[172,0,216,5],[172,7,200,4],[172,13,216,11],[172,17,216,15,"isPartialObserver"],[172,34,216,32],[172,35,216,33,"args"],[172,39,216,37],[172,40,216,38],[172,41,216,37],[172,42,216,32],[172,43,216,11],[172,45,216,43],[173,0,220,6],[173,12,220,12,"observer"],[173,21,220,20],[173,24,220,23,"args"],[173,28,220,27],[173,29,220,28],[173,30,220,27],[173,31,220,6],[175,0,221,6],[175,12,221,10,"observer"],[175,21,221,18],[175,22,221,19,"error"],[175,27,221,6],[175,29,221,26],[176,0,222,8,"onError"],[176,10,222,8,"onError"],[176,17,222,15],[176,20,222,18],[176,108,222,29,"observer"],[176,117,222,37],[176,118,222,38,"error"],[176,123,222,18],[176,127,222,47,"observer"],[176,136,222,55],[176,137,222,56,"error"],[176,142,222,47],[176,143,222,62,"bind"],[176,147,222,47],[176,148,222,67,"observer"],[176,157,222,47],[176,158,222,18],[176,161,222,79,"observer"],[176,170,222,87],[176,171,222,88,"error"],[176,176,222,8],[177,0,223,7],[179,0,224,6],[179,12,224,10,"observer"],[179,21,224,18],[179,22,224,19,"next"],[179,26,224,6],[179,28,224,25],[180,0,225,8,"onNext"],[180,10,225,8,"onNext"],[180,16,225,14],[180,19,225,17],[180,107,225,28,"observer"],[180,116,225,36],[180,117,225,37,"next"],[180,121,225,17],[180,125,225,45,"observer"],[180,134,225,53],[180,135,225,54,"next"],[180,139,225,45],[180,140,225,59,"bind"],[180,144,225,45],[180,145,225,64,"observer"],[180,154,225,45],[180,155,225,17],[180,158,225,76,"observer"],[180,167,225,84],[180,168,225,85,"next"],[180,172,225,8],[181,0,226,7],[182,0,227,5],[183,0,228,3],[185,0,230,2],[185,8,230,6],[185,100,230,21,"snapshotListenOptions"],[185,121,230,6],[185,123,230,44],[185,147,230,6],[185,148,230,2],[185,150,230,71],[186,0,231,4],[186,10,231,8],[186,11,231,9],[186,98,231,19,"snapshotListenOptions"],[186,119,231,40],[186,120,231,41,"includeMetadataChanges"],[186,142,231,9],[186,143,231,4],[186,145,231,66],[187,0,232,6],[187,14,232,12],[187,18,232,16,"Error"],[187,23,232,12],[187,24,232,22],[187,99,232,12],[187,100,232,6],[188,0,233,5],[189,0,234,3],[191,0,236,2],[191,8,236,6],[191,9,236,7],[191,97,236,18,"onNext"],[191,103,236,7],[191,104,236,2],[191,106,236,27],[192,0,237,4],[192,12,237,10],[192,16,237,14,"Error"],[192,21,237,10],[192,22,237,20],[192,72,237,10],[192,73,237,4],[193,0,238,3],[195,0,240,2],[195,8,240,6],[195,9,240,7],[195,97,240,18,"onError"],[195,104,240,7],[195,105,240,2],[195,107,240,28],[196,0,241,4],[196,12,241,10],[196,16,241,14,"Error"],[196,21,241,10],[196,22,241,20],[196,74,241,10],[196,75,241,4],[197,0,242,3],[199,0,244,2],[199,11,244,9],[200,0,244,11,"snapshotListenOptions"],[200,6,244,11,"snapshotListenOptions"],[200,27,244,32],[200,29,244,11,"snapshotListenOptions"],[200,50,244,9],[201,0,244,34,"callback"],[201,6,244,34,"callback"],[201,14,244,42],[201,16,244,34,"callback"],[201,24,244,9],[202,0,244,44,"onNext"],[202,6,244,44,"onNext"],[202,12,244,50],[202,14,244,44,"onNext"],[202,20,244,9],[203,0,244,52,"onError"],[203,6,244,52,"onError"],[203,13,244,59],[203,15,244,52,"onError"],[204,0,244,9],[204,5,244,2],[205,0,245,1]],"functionMap":{"names":["<global>","extractFieldPathData","parseUpdateArgs","parseSetOptions","isPartialObserver","parseSnapshotArgs","NOOP"],"mappings":"AAA;OC4B;CDY;OEE;CFyB;OGM;CHyD;AIa;CJK;OKE;eCM,QD;CLwF"}},"type":"js/module"}]}