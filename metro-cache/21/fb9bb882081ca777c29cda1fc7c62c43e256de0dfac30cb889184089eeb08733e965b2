{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":76,"column":0}}]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"locs":[{"start":{"line":1,"column":0},"end":{"line":76,"column":0}}]}},{"name":"@react-native-firebase/app/lib/common","data":{"asyncType":null,"locs":[{"start":{"line":50,"column":6},"end":{"line":50,"column":20},"identifierName":"hasOwnProperty"}]}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getTypeMapInt = getTypeMapInt;\n  exports.getTypeMapName = getTypeMapName;\n\n  var _slicedToArray2 = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\")(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var MAP = {\n    nan: 0,\n    '-infinity': 1,\n    infinity: 2,\n    null: 3,\n    documentid: 4,\n    booleanTrue: 5,\n    booleanFalse: 6,\n    number: 7,\n    string: 8,\n    stringEmpty: 9,\n    array: 10,\n    reference: 11,\n    geopoint: 12,\n    timestamp: 13,\n    blob: 14,\n    fieldvalue: 15,\n    object: 16,\n    unknown: -999\n  };\n  var MAP_ENTRIES = Object.entries(MAP);\n\n  function getTypeMapInt(type) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n    if ((0, _$$_REQUIRE(_dependencyMap[2], \"@react-native-firebase/app/lib/common\").hasOwnProperty)(MAP, type)) {\n      var array = [MAP[type]];\n\n      if (value !== undefined) {\n        array.push(value);\n      }\n\n      return array;\n    }\n\n    return null;\n  }\n\n  function getTypeMapName(value) {\n    for (var i = 0; i < MAP_ENTRIES.length; i++) {\n      var _MAP_ENTRIES$i = (0, _slicedToArray2.default)(MAP_ENTRIES[i], 2),\n          name = _MAP_ENTRIES$i[0],\n          int = _MAP_ENTRIES$i[1];\n\n      if (value === int) {\n        return name;\n      }\n    }\n\n    return null;\n  }\n});","lineCount":61,"map":[[10,0,20,0],[10,6,20,6,"MAP"],[10,9,20,9],[10,12,20,12],[11,0,21,2,"nan"],[11,4,21,2,"nan"],[11,7,21,5],[11,9,21,7],[11,10,20,12],[12,0,22,2],[12,17,22,15],[12,18,20,12],[13,0,23,2,"infinity"],[13,4,23,2,"infinity"],[13,12,23,10],[13,14,23,12],[13,15,20,12],[14,0,24,2,"null"],[14,4,24,2,"null"],[14,8,24,6],[14,10,24,8],[14,11,20,12],[15,0,25,2,"documentid"],[15,4,25,2,"documentid"],[15,14,25,12],[15,16,25,14],[15,17,20,12],[16,0,26,2,"booleanTrue"],[16,4,26,2,"booleanTrue"],[16,15,26,13],[16,17,26,15],[16,18,20,12],[17,0,27,2,"booleanFalse"],[17,4,27,2,"booleanFalse"],[17,16,27,14],[17,18,27,16],[17,19,20,12],[18,0,28,2,"number"],[18,4,28,2,"number"],[18,10,28,8],[18,12,28,10],[18,13,20,12],[19,0,29,2,"string"],[19,4,29,2,"string"],[19,10,29,8],[19,12,29,10],[19,13,20,12],[20,0,30,2,"stringEmpty"],[20,4,30,2,"stringEmpty"],[20,15,30,13],[20,17,30,15],[20,18,20,12],[21,0,31,2,"array"],[21,4,31,2,"array"],[21,9,31,7],[21,11,31,9],[21,13,20,12],[22,0,32,2,"reference"],[22,4,32,2,"reference"],[22,13,32,11],[22,15,32,13],[22,17,20,12],[23,0,33,2,"geopoint"],[23,4,33,2,"geopoint"],[23,12,33,10],[23,14,33,12],[23,16,20,12],[24,0,34,2,"timestamp"],[24,4,34,2,"timestamp"],[24,13,34,11],[24,15,34,13],[24,17,20,12],[25,0,35,2,"blob"],[25,4,35,2,"blob"],[25,8,35,6],[25,10,35,8],[25,12,20,12],[26,0,36,2,"fieldvalue"],[26,4,36,2,"fieldvalue"],[26,14,36,12],[26,16,36,14],[26,18,20,12],[27,0,37,2,"object"],[27,4,37,2,"object"],[27,10,37,8],[27,12,37,10],[27,14,20,12],[28,0,38,2,"unknown"],[28,4,38,2,"unknown"],[28,11,38,9],[28,13,38,11],[28,14,38,12],[29,0,20,12],[29,3,20,0],[30,0,41,0],[30,6,41,6,"MAP_ENTRIES"],[30,17,41,17],[30,20,41,20,"Object"],[30,26,41,26],[30,27,41,27,"entries"],[30,34,41,20],[30,35,41,35,"MAP"],[30,38,41,20],[30,39,41,0],[32,0,49,7],[32,11,49,16,"getTypeMapInt"],[32,24,49,7],[32,25,49,30,"type"],[32,29,49,7],[32,31,49,55],[33,0,49,55],[33,8,49,36,"value"],[33,13,49,55],[33,84,49,44,"undefined"],[33,93,49,55],[35,0,50,2],[35,8,50,6],[35,100,50,21,"MAP"],[35,103,50,6],[35,105,50,26,"type"],[35,109,50,6],[35,110,50,2],[35,112,50,33],[36,0,51,4],[36,10,51,10,"array"],[36,15,51,15],[36,18,51,18],[36,19,51,19,"MAP"],[36,22,51,22],[36,23,51,23,"type"],[36,27,51,22],[36,28,51,18],[36,29,51,4],[38,0,52,4],[38,10,52,8,"value"],[38,15,52,13],[38,20,52,18,"undefined"],[38,29,52,4],[38,31,52,29],[39,0,53,6,"array"],[39,8,53,6,"array"],[39,13,53,11],[39,14,53,12,"push"],[39,18,53,6],[39,19,53,17,"value"],[39,24,53,6],[40,0,54,5],[42,0,55,4],[42,13,55,11,"array"],[42,18,55,4],[43,0,56,3],[45,0,58,2],[45,11,58,9],[45,15,58,2],[46,0,59,1],[48,0,66,7],[48,11,66,16,"getTypeMapName"],[48,25,66,7],[48,26,66,31,"value"],[48,31,66,7],[48,33,66,38],[49,0,67,2],[49,9,67,7],[49,13,67,11,"i"],[49,14,67,12],[49,17,67,15],[49,18,67,2],[49,20,67,18,"i"],[49,21,67,19],[49,24,67,22,"MAP_ENTRIES"],[49,35,67,33],[49,36,67,34,"length"],[49,42,67,2],[49,44,67,42,"i"],[49,45,67,43],[49,47,67,2],[49,49,67,47],[50,0,68,4],[50,56,68,24,"MAP_ENTRIES"],[50,67,68,35],[50,68,68,36,"i"],[50,69,68,35],[50,70,68,4],[51,0,68,4],[51,10,68,11,"name"],[51,14,68,4],[52,0,68,4],[52,10,68,17,"int"],[52,13,68,4],[54,0,69,4],[54,10,69,8,"value"],[54,15,69,13],[54,20,69,18,"int"],[54,23,69,4],[54,25,69,23],[55,0,70,6],[55,15,70,13,"name"],[55,19,70,6],[56,0,71,5],[57,0,72,3],[59,0,74,2],[59,11,74,9],[59,15,74,2],[60,0,75,1]],"functionMap":{"names":["<global>","getTypeMapInt","getTypeMapName"],"mappings":"AAA;OCgD;CDU;OEO;CFS"}},"type":"js/module"}]}